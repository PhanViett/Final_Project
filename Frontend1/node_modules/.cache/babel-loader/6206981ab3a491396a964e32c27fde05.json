{"ast":null,"code":"import _objectSpread from\"D:/FHDC/CCHND-V2/Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _classCallCheck from\"D:/FHDC/CCHND-V2/Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"D:/FHDC/CCHND-V2/Frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";/* eslint-disable no-useless-escape */ // DOCS: https://javascript.info/cookie\nexport var CookieComponent=/*#__PURE__*/function(){function CookieComponent(){_classCallCheck(this,CookieComponent);}_createClass(CookieComponent,null,[{key:\"get\",value:/**\r\n   * Returns the cookie with the given name, or undefined if not found\r\n   *\r\n   * @param  {string} name - cookie name\r\n   * @returns string | null\r\n   */function get(name){var matches=document.cookie.match(new RegExp('(?:^|; )'+name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g,'\\\\$1')+'=([^;]*)'));return matches?decodeURIComponent(matches[1]):undefined;}/**\r\n   * Please note that a cookie value is encoded,\r\n   * so getCookie uses a built-in decodeURIComponent function to decode it.\r\n   *\r\n   * @param  {string} name - cookie name\r\n   * @param  {string | number | boolean} value - cookie value\r\n   * @param  {any} cookieOptions - cookie options\r\n   * @returns void\r\n   */},{key:\"set\",value:function set(name,value,cookieOptions){var options=_objectSpread({path:'/'},cookieOptions);if(options.expires instanceof Date){options.expires=options.expires.toUTCString();}var updatedCookie=encodeURIComponent(name)+'='+encodeURIComponent(value);for(var optionKey in options){updatedCookie+='; '+optionKey;var optionValue=options[optionKey];if(optionValue!==true){updatedCookie+='='+optionValue;}}document.cookie=updatedCookie;}/**\r\n   * To delete a cookie, we can call it with a negative expiration date\r\n   *\r\n   * @param  {string} name\r\n   */},{key:\"delete\",value:function _delete(name){CookieComponent.set(name,'',{'max-age':-1});}}]);return CookieComponent;}();","map":{"version":3,"names":["CookieComponent","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","value","cookieOptions","options","path","expires","Date","toUTCString","updatedCookie","encodeURIComponent","optionKey","optionValue","set"],"sources":["D:/FHDC/CCHND-V2/Frontend/src/_metronic/assets/ts/components/_CookieComponent.ts"],"sourcesContent":["/* eslint-disable no-useless-escape */\r\n// DOCS: https://javascript.info/cookie\r\nexport class CookieComponent {\r\n  /**\r\n   * Returns the cookie with the given name, or undefined if not found\r\n   *\r\n   * @param  {string} name - cookie name\r\n   * @returns string | null\r\n   */\r\n  public static get(name: string): string | undefined {\r\n    let matches = document.cookie.match(\r\n      new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\r\n    )\r\n    return matches ? decodeURIComponent(matches[1]) : undefined\r\n  }\r\n\r\n  /**\r\n   * Please note that a cookie value is encoded,\r\n   * so getCookie uses a built-in decodeURIComponent function to decode it.\r\n   *\r\n   * @param  {string} name - cookie name\r\n   * @param  {string | number | boolean} value - cookie value\r\n   * @param  {any} cookieOptions - cookie options\r\n   * @returns void\r\n   */\r\n  public static set(name: string, value: string | number | boolean, cookieOptions: any): void {\r\n    const options = {\r\n      path: '/',\r\n      // add other defaults here if necessary\r\n      ...cookieOptions,\r\n    }\r\n\r\n    if (options.expires instanceof Date) {\r\n      options.expires = options.expires.toUTCString()\r\n    }\r\n\r\n    let updatedCookie = encodeURIComponent(name) + '=' + encodeURIComponent(value)\r\n\r\n    for (let optionKey in options) {\r\n      updatedCookie += '; ' + optionKey\r\n      let optionValue = options[optionKey]\r\n      if (optionValue !== true) {\r\n        updatedCookie += '=' + optionValue\r\n      }\r\n    }\r\n\r\n    document.cookie = updatedCookie\r\n  }\r\n\r\n  /**\r\n   * To delete a cookie, we can call it with a negative expiration date\r\n   *\r\n   * @param  {string} name\r\n   */\r\n  public static delete(name: string): void {\r\n    CookieComponent.set(name, '', {\r\n      'max-age': -1,\r\n    })\r\n  }\r\n}\r\n"],"mappings":"0UAAA,sC,CACA;AACA,UAAaA,gBAAb,+IACE;AACF;AACA;AACA;AACA;AACA,KACE,aAAkBC,IAAlB,CAAoD,CAClD,GAAIC,QAAO,CAAGC,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CACZ,GAAIC,OAAJ,CAAW,WAAaL,IAAI,CAACM,OAAL,CAAa,8BAAb,CAA6C,MAA7C,CAAb,CAAoE,UAA/E,CADY,CAAd,CAGA,MAAOL,QAAO,CAAGM,kBAAkB,CAACN,OAAO,CAAC,CAAD,CAAR,CAArB,CAAoCO,SAAlD,CACD,CAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAtBA,mBAuBE,aAAkBR,IAAlB,CAAgCS,KAAhC,CAAkEC,aAAlE,CAA4F,CAC1F,GAAMC,QAAO,gBACXC,IAAI,CAAE,GADK,EAGRF,aAHQ,CAAb,CAMA,GAAIC,OAAO,CAACE,OAAR,WAA2BC,KAA/B,CAAqC,CACnCH,OAAO,CAACE,OAAR,CAAkBF,OAAO,CAACE,OAAR,CAAgBE,WAAhB,EAAlB,CACD,CAED,GAAIC,cAAa,CAAGC,kBAAkB,CAACjB,IAAD,CAAlB,CAA2B,GAA3B,CAAiCiB,kBAAkB,CAACR,KAAD,CAAvE,CAEA,IAAK,GAAIS,UAAT,GAAsBP,QAAtB,CAA+B,CAC7BK,aAAa,EAAI,KAAOE,SAAxB,CACA,GAAIC,YAAW,CAAGR,OAAO,CAACO,SAAD,CAAzB,CACA,GAAIC,WAAW,GAAK,IAApB,CAA0B,CACxBH,aAAa,EAAI,IAAMG,WAAvB,CACD,CACF,CAEDjB,QAAQ,CAACC,MAAT,CAAkBa,aAAlB,CACD,CAED;AACF;AACA;AACA;AACA,KAnDA,sBAoDE,iBAAqBhB,IAArB,CAAyC,CACvCD,eAAe,CAACqB,GAAhB,CAAoBpB,IAApB,CAA0B,EAA1B,CAA8B,CAC5B,UAAW,CAAC,CADgB,CAA9B,EAGD,CAxDH"},"metadata":{},"sourceType":"module"}