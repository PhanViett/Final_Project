{"ast":null,"code":"export var initialQueryState={page:1,items_per_page:10};export var initialQueryRequest={state:initialQueryState,updateState:function updateState(){}};export var initialQueryResponse={refetch:function refetch(){},isLoading:false,query:''};export var initialListView={selected:[],onSelect:function onSelect(){},onSelectAll:function onSelectAll(){},clearSelected:function clearSelected(){},setItemIdForUpdate:function setItemIdForUpdate(){},isAllSelected:false,disabled:false};","map":{"version":3,"names":["initialQueryState","page","items_per_page","initialQueryRequest","state","updateState","initialQueryResponse","refetch","isLoading","query","initialListView","selected","onSelect","onSelectAll","clearSelected","setItemIdForUpdate","isAllSelected","disabled"],"sources":["D:/FHDC/CCHND-V2/Frontend/src/_metronic/helpers/crud-helper/models.ts"],"sourcesContent":["import {Dispatch, SetStateAction} from 'react'\r\n\r\nexport type ID = undefined | null | number\r\n\r\nexport type PaginationState = {\r\n  page: number\r\n  items_per_page: 10 | 30 | 50 | 100\r\n  links?: Array<{label: string; active: boolean; url: string | null; page: number | null}>\r\n}\r\n\r\nexport type SortState = {\r\n  sort?: string\r\n  order?: 'asc' | 'desc'\r\n}\r\n\r\nexport type FilterState = {\r\n  filter?: unknown\r\n}\r\n\r\nexport type SearchState = {\r\n  search?: string\r\n}\r\n\r\nexport type Response<T> = {\r\n  data?: T\r\n  payload?: {\r\n    message?: string\r\n    errors?: {\r\n      [key: string]: Array<string>\r\n    }\r\n    pagination?: PaginationState\r\n  }\r\n}\r\n\r\nexport type QueryState = PaginationState & SortState & FilterState & SearchState\r\n\r\nexport type QueryRequestContextProps = {\r\n  state: QueryState\r\n  updateState: (updates: Partial<QueryState>) => void\r\n}\r\n\r\nexport const initialQueryState: QueryState = {\r\n  page: 1,\r\n  items_per_page: 10,\r\n}\r\n\r\nexport const initialQueryRequest: QueryRequestContextProps = {\r\n  state: initialQueryState,\r\n  updateState: () => {},\r\n}\r\n\r\nexport type QueryResponseContextProps<T> = {\r\n  response?: Response<Array<T>> | undefined\r\n  refetch: () => void\r\n  isLoading: boolean\r\n  query: string\r\n}\r\n\r\nexport const initialQueryResponse = {refetch: () => {}, isLoading: false, query: ''}\r\n\r\nexport type ListViewContextProps = {\r\n  selected: Array<ID>\r\n  onSelect: (selectedId: ID) => void\r\n  onSelectAll: () => void\r\n  clearSelected: () => void\r\n  // NULL => (CREATION MODE) | MODAL IS OPENED\r\n  // NUMBER => (EDIT MODE) | MODAL IS OPENED\r\n  // UNDEFINED => MODAL IS CLOSED\r\n  itemIdForUpdate?: ID\r\n  setItemIdForUpdate: Dispatch<SetStateAction<ID>>\r\n  isAllSelected: boolean\r\n  disabled: boolean\r\n}\r\n\r\nexport const initialListView: ListViewContextProps = {\r\n  selected: [],\r\n  onSelect: () => {},\r\n  onSelectAll: () => {},\r\n  clearSelected: () => {},\r\n  setItemIdForUpdate: () => {},\r\n  isAllSelected: false,\r\n  disabled: false,\r\n}\r\n"],"mappings":"AAyCA,MAAO,IAAMA,kBAA6B,CAAG,CAC3CC,IAAI,CAAE,CADqC,CAE3CC,cAAc,CAAE,EAF2B,CAAtC,CAKP,MAAO,IAAMC,oBAA6C,CAAG,CAC3DC,KAAK,CAAEJ,iBADoD,CAE3DK,WAAW,CAAE,sBAAM,CAAE,CAFsC,CAAtD,CAYP,MAAO,IAAMC,qBAAoB,CAAG,CAACC,OAAO,CAAE,kBAAM,CAAE,CAAlB,CAAoBC,SAAS,CAAE,KAA/B,CAAsCC,KAAK,CAAE,EAA7C,CAA7B,CAgBP,MAAO,IAAMC,gBAAqC,CAAG,CACnDC,QAAQ,CAAE,EADyC,CAEnDC,QAAQ,CAAE,mBAAM,CAAE,CAFiC,CAGnDC,WAAW,CAAE,sBAAM,CAAE,CAH8B,CAInDC,aAAa,CAAE,wBAAM,CAAE,CAJ4B,CAKnDC,kBAAkB,CAAE,6BAAM,CAAE,CALuB,CAMnDC,aAAa,CAAE,KANoC,CAOnDC,QAAQ,CAAE,KAPyC,CAA9C"},"metadata":{},"sourceType":"module"}