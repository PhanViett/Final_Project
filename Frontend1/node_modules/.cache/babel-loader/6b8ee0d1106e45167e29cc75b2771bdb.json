{"ast":null,"code":"import { getUniqueIdWithPrefix } from './_TypesHelpers';\nexport class DOMEventHandlerUtil {\n  static on(element, selector, eventName, callBack) {\n    const eventId = getUniqueIdWithPrefix('DOMEvent');\n    DOMEventHandlerUtil.store.set(eventId, e => {\n      const targets = element.querySelectorAll(selector);\n      let target = e.target;\n\n      while (target && target !== element) {\n        for (let i = 0; i < targets.length; i++) {\n          if (target === targets[i]) {\n            callBack.call(target, e);\n          }\n        }\n\n        if (target.parentElement) {\n          target = target.parentElement;\n        } else {\n          target = null;\n        }\n      }\n    });\n    element.addEventListener(eventName, DOMEventHandlerUtil.store.get(eventId));\n    return eventId;\n  }\n\n  static off(element, eventName, eventId) {\n    const funcFromStore = DOMEventHandlerUtil.store.get(eventId);\n\n    if (!funcFromStore) {\n      return;\n    }\n\n    element.removeEventListener(eventName, funcFromStore);\n    DOMEventHandlerUtil.store.delete(eventId);\n  }\n\n  static one(element, eventName, callBack) {\n    element.addEventListener(eventName, function calee(e) {\n      // remove event\n      if (e.target && e.target.removeEventListener) {\n        e.target.removeEventListener(e.type, calee);\n      }\n\n      if (element && e && e.currentTarget) {\n        // if (element && element.removeEventListener && e && e.currentTarget) {\n        e.currentTarget.removeEventListener(e.type, calee);\n      } // call hander\n\n\n      return callBack(e);\n    });\n  }\n\n}\nDOMEventHandlerUtil.store = new Map();","map":{"version":3,"names":["getUniqueIdWithPrefix","DOMEventHandlerUtil","on","element","selector","eventName","callBack","eventId","store","set","e","targets","querySelectorAll","target","i","length","call","parentElement","addEventListener","get","off","funcFromStore","removeEventListener","delete","one","calee","type","currentTarget","Map"],"sources":["V:/Projects/FDHC TSD/CCHND-React/Frontend/src/_metronic/assets/ts/_utils/_DOMEventHandlerUtil.ts"],"sourcesContent":["import {getUniqueIdWithPrefix} from './_TypesHelpers'\r\n\r\nexport class DOMEventHandlerUtil {\r\n  public static store = new Map()\r\n\r\n  public static on(\r\n    element: HTMLElement,\r\n    selector: string,\r\n    eventName: string,\r\n    callBack: any\r\n  ): string {\r\n    const eventId = getUniqueIdWithPrefix('DOMEvent')\r\n    DOMEventHandlerUtil.store.set(eventId, (e: Event) => {\r\n      const targets = element.querySelectorAll(selector)\r\n      let target: HTMLElement | null = e.target as HTMLElement\r\n      while (target && target !== element) {\r\n        for (let i = 0; i < targets.length; i++) {\r\n          if (target === targets[i]) {\r\n            callBack.call(target, e)\r\n          }\r\n        }\r\n\r\n        if (target.parentElement) {\r\n          target = target.parentElement\r\n        } else {\r\n          target = null\r\n        }\r\n      }\r\n    })\r\n    element.addEventListener(eventName, DOMEventHandlerUtil.store.get(eventId))\r\n    return eventId\r\n  }\r\n\r\n  public static off(element: HTMLElement, eventName: string, eventId: string): void {\r\n    const funcFromStore = DOMEventHandlerUtil.store.get(eventId)\r\n    if (!funcFromStore) {\r\n      return\r\n    }\r\n\r\n    element.removeEventListener(eventName, funcFromStore)\r\n    DOMEventHandlerUtil.store.delete(eventId)\r\n  }\r\n\r\n  public static one(element: HTMLElement, eventName: string, callBack: Function): void {\r\n    element.addEventListener(eventName, function calee(e) {\r\n      // remove event\r\n      if (e.target && e.target.removeEventListener) {\r\n        e.target.removeEventListener(e.type, calee)\r\n      }\r\n\r\n      if (element && e && e.currentTarget) {\r\n        // if (element && element.removeEventListener && e && e.currentTarget) {\r\n        e.currentTarget.removeEventListener(e.type, calee)\r\n      }\r\n\r\n      // call hander\r\n      return callBack(e)\r\n    })\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAAQA,qBAAR,QAAoC,iBAApC;AAEA,OAAO,MAAMC,mBAAN,CAA0B;EAGf,OAAFC,EAAE,CACdC,OADc,EAEdC,QAFc,EAGdC,SAHc,EAIdC,QAJc,EAKN;IACR,MAAMC,OAAO,GAAGP,qBAAqB,CAAC,UAAD,CAArC;IACAC,mBAAmB,CAACO,KAApB,CAA0BC,GAA1B,CAA8BF,OAA9B,EAAwCG,CAAD,IAAc;MACnD,MAAMC,OAAO,GAAGR,OAAO,CAACS,gBAAR,CAAyBR,QAAzB,CAAhB;MACA,IAAIS,MAA0B,GAAGH,CAAC,CAACG,MAAnC;;MACA,OAAOA,MAAM,IAAIA,MAAM,KAAKV,OAA5B,EAAqC;QACnC,KAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAAO,CAACI,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;UACvC,IAAID,MAAM,KAAKF,OAAO,CAACG,CAAD,CAAtB,EAA2B;YACzBR,QAAQ,CAACU,IAAT,CAAcH,MAAd,EAAsBH,CAAtB;UACD;QACF;;QAED,IAAIG,MAAM,CAACI,aAAX,EAA0B;UACxBJ,MAAM,GAAGA,MAAM,CAACI,aAAhB;QACD,CAFD,MAEO;UACLJ,MAAM,GAAG,IAAT;QACD;MACF;IACF,CAhBD;IAiBAV,OAAO,CAACe,gBAAR,CAAyBb,SAAzB,EAAoCJ,mBAAmB,CAACO,KAApB,CAA0BW,GAA1B,CAA8BZ,OAA9B,CAApC;IACA,OAAOA,OAAP;EACD;;EAEgB,OAAHa,GAAG,CAACjB,OAAD,EAAuBE,SAAvB,EAA0CE,OAA1C,EAAiE;IAChF,MAAMc,aAAa,GAAGpB,mBAAmB,CAACO,KAApB,CAA0BW,GAA1B,CAA8BZ,OAA9B,CAAtB;;IACA,IAAI,CAACc,aAAL,EAAoB;MAClB;IACD;;IAEDlB,OAAO,CAACmB,mBAAR,CAA4BjB,SAA5B,EAAuCgB,aAAvC;IACApB,mBAAmB,CAACO,KAApB,CAA0Be,MAA1B,CAAiChB,OAAjC;EACD;;EAEgB,OAAHiB,GAAG,CAACrB,OAAD,EAAuBE,SAAvB,EAA0CC,QAA1C,EAAoE;IACnFH,OAAO,CAACe,gBAAR,CAAyBb,SAAzB,EAAoC,SAASoB,KAAT,CAAef,CAAf,EAAkB;MACpD;MACA,IAAIA,CAAC,CAACG,MAAF,IAAYH,CAAC,CAACG,MAAF,CAASS,mBAAzB,EAA8C;QAC5CZ,CAAC,CAACG,MAAF,CAASS,mBAAT,CAA6BZ,CAAC,CAACgB,IAA/B,EAAqCD,KAArC;MACD;;MAED,IAAItB,OAAO,IAAIO,CAAX,IAAgBA,CAAC,CAACiB,aAAtB,EAAqC;QACnC;QACAjB,CAAC,CAACiB,aAAF,CAAgBL,mBAAhB,CAAoCZ,CAAC,CAACgB,IAAtC,EAA4CD,KAA5C;MACD,CATmD,CAWpD;;;MACA,OAAOnB,QAAQ,CAACI,CAAD,CAAf;IACD,CAbD;EAcD;;AAxD8B;AAApBT,mB,CACGO,K,GAAQ,IAAIoB,GAAJ,E"},"metadata":{},"sourceType":"module"}