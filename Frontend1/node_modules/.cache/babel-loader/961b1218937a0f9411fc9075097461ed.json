{"ast":null,"code":"import _regeneratorRuntime from\"D:/FHDC/CCHND-V2/Frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";var _marked=/*#__PURE__*/_regeneratorRuntime().mark(handleNoti),_marked2=/*#__PURE__*/_regeneratorRuntime().mark(notiSaga);import{call,put,takeEvery}from\"redux-saga/effects\";import{notiActions}from\"./notiSlice\";import{getListNoti}from\"./service\";function handleNoti(_ref){var payload,resultsListNoti;return _regeneratorRuntime().wrap(function handleNoti$(_context){while(1){switch(_context.prev=_context.next){case 0:payload=_ref.payload;_context.prev=1;_context.next=4;return call(getListNoti,payload);case 4:resultsListNoti=_context.sent;if(!resultsListNoti){_context.next=8;break;}_context.next=8;return put({type:notiActions.getNotiSuccess.type,payload:resultsListNoti});case 8:_context.next=14;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](1);_context.next=14;return put({type:notiActions.getNotiFailed.type});case 14:case\"end\":return _context.stop();}}},_marked,null,[[1,10]]);}export default function notiSaga(){return _regeneratorRuntime().wrap(function notiSaga$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeEvery(notiActions.getNoti.type,handleNoti);case 2:case\"end\":return _context2.stop();}}},_marked2);}","map":{"version":3,"names":["handleNoti","notiSaga","call","put","takeEvery","notiActions","getListNoti","payload","resultsListNoti","type","getNotiSuccess","getNotiFailed","getNoti"],"sources":["D:/FHDC/CCHND-V2/Frontend/src/app/redux-module/noti/notiSaga.js"],"sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { notiActions } from \"./notiSlice\";\nimport { getListNoti } from \"./service\";\n\nfunction* handleNoti({ payload }) {\n  try {\n    const resultsListNoti = yield call(getListNoti, payload);\n\n    if (resultsListNoti) {\n      yield put({\n        type: notiActions.getNotiSuccess.type,\n        payload: resultsListNoti,\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: notiActions.getNotiFailed.type,\n    });\n  }\n}\n\nexport default function* notiSaga() {\n  //   yield fork(watchLoginFlow);\n  yield takeEvery(notiActions.getNoti.type, handleNoti);\n}\n"],"mappings":"6KAIUA,U,mDAiBeC,Q,EArBzB,OAASC,IAAT,CAAeC,GAAf,CAAoBC,SAApB,KAAqC,oBAArC,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,WAAT,KAA4B,WAA5B,CAEA,QAAUN,WAAV,wJAAuBO,OAAvB,MAAuBA,OAAvB,iCAE4B,MAAML,KAAI,CAACI,WAAD,CAAcC,OAAd,CAAV,CAF5B,OAEUC,eAFV,mBAIQA,eAJR,yCAKM,MAAML,IAAG,CAAC,CACRM,IAAI,CAAEJ,WAAW,CAACK,cAAZ,CAA2BD,IADzB,CAERF,OAAO,CAAEC,eAFD,CAAD,CAAT,CALN,yGAWI,MAAML,IAAG,CAAC,CACRM,IAAI,CAAEJ,WAAW,CAACM,aAAZ,CAA0BF,IADxB,CAAD,CAAT,CAXJ,qEAiBA,cAAe,SAAUR,SAAV,0IAEb,MAAMG,UAAS,CAACC,WAAW,CAACO,OAAZ,CAAoBH,IAArB,CAA2BT,UAA3B,CAAf,CAFa"},"metadata":{},"sourceType":"module"}