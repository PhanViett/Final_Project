{"ast":null,"code":"import{configureStore}from\"@reduxjs/toolkit\";import{FLUSH,PAUSE,PERSIST,persistReducer,persistStore,PURGE,REGISTER,REHYDRATE}from\"redux-persist\";import{encryptTransform}from\"redux-persist-transform-encrypt\";import storage from\"redux-persist/lib/storage\";import createSagaMiddleware from\"redux-saga\";import rootReducers from\"./rootReducer\";import rootSaga from\"./rootSaga\";var sagaMiddleware=createSagaMiddleware();// const persistConfig = {\n//   key: \"root\",\n//   version: 1,\n//   storage,\n// };\n// const persistedReducer = persistReducer(persistConfig, rootReducers);\nvar persistedReducer=persistReducer({key:\"root\",storage:storage,whitelist:[\"auth\"],transforms:[encryptTransform({secretKey:\"abc123\",onError:function onError(error){console.log(\"encryptTransform\",error);// Handle the error.\n}})]},rootReducers);var store=configureStore({reducer:persistedReducer,devTools:true,middleware:function middleware(getDefaultMiddleware){return getDefaultMiddleware({serializableCheck:{ignoredActions:[FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER]}}).concat(sagaMiddleware);}});sagaMiddleware.run(rootSaga);export var persistor=persistStore(store);export default store;","map":{"version":3,"names":["configureStore","FLUSH","PAUSE","PERSIST","persistReducer","persistStore","PURGE","REGISTER","REHYDRATE","encryptTransform","storage","createSagaMiddleware","rootReducers","rootSaga","sagaMiddleware","persistedReducer","key","whitelist","transforms","secretKey","onError","error","console","log","store","reducer","devTools","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","concat","run","persistor"],"sources":["D:/FHDC/CCHND-V2/Frontend/src/app/redux-module/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport {\n  FLUSH, PAUSE,\n  PERSIST, persistReducer, persistStore, PURGE,\n  REGISTER, REHYDRATE\n} from \"redux-persist\";\nimport { encryptTransform } from \"redux-persist-transform-encrypt\";\nimport storage from \"redux-persist/lib/storage\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducers from \"./rootReducer\";\nimport rootSaga from \"./rootSaga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// const persistConfig = {\n//   key: \"root\",\n//   version: 1,\n//   storage,\n// };\n\n// const persistedReducer = persistReducer(persistConfig, rootReducers);\n\nconst persistedReducer = persistReducer(\n  {\n    key: \"root\",\n    storage,\n    whitelist: [\"auth\"],\n    transforms: [\n      encryptTransform({\n        secretKey: \"abc123\",\n        onError: function (error) {\n          console.log(\"encryptTransform\", error);\n          // Handle the error.\n        },\n      }),\n    ],\n  },\n  rootReducers\n);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  devTools: true,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(sagaMiddleware),\n});\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\n\nexport default store;\n"],"mappings":"AAAA,OAASA,cAAT,KAA+B,kBAA/B,CACA,OACEC,KADF,CACSC,KADT,CAEEC,OAFF,CAEWC,cAFX,CAE2BC,YAF3B,CAEyCC,KAFzC,CAGEC,QAHF,CAGYC,SAHZ,KAIO,eAJP,CAKA,OAASC,gBAAT,KAAiC,iCAAjC,CACA,MAAOC,QAAP,KAAoB,2BAApB,CACA,MAAOC,qBAAP,KAAiC,YAAjC,CACA,MAAOC,aAAP,KAAyB,eAAzB,CACA,MAAOC,SAAP,KAAqB,YAArB,CAEA,GAAMC,eAAc,CAAGH,oBAAoB,EAA3C,CAEA;AACA;AACA;AACA;AACA;AAEA;AAEA,GAAMI,iBAAgB,CAAGX,cAAc,CACrC,CACEY,GAAG,CAAE,MADP,CAEEN,OAAO,CAAPA,OAFF,CAGEO,SAAS,CAAE,CAAC,MAAD,CAHb,CAIEC,UAAU,CAAE,CACVT,gBAAgB,CAAC,CACfU,SAAS,CAAE,QADI,CAEfC,OAAO,CAAE,iBAAUC,KAAV,CAAiB,CACxBC,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAgCF,KAAhC,EACA;AACD,CALc,CAAD,CADN,CAJd,CADqC,CAerCT,YAfqC,CAAvC,CAkBA,GAAMY,MAAK,CAAGxB,cAAc,CAAC,CAC3ByB,OAAO,CAAEV,gBADkB,CAE3BW,QAAQ,CAAE,IAFiB,CAG3BC,UAAU,CAAE,oBAACC,oBAAD,QACVA,qBAAoB,CAAC,CACnBC,iBAAiB,CAAE,CACjBC,cAAc,CAAE,CAAC7B,KAAD,CAAQO,SAAR,CAAmBN,KAAnB,CAA0BC,OAA1B,CAAmCG,KAAnC,CAA0CC,QAA1C,CADC,CADA,CAAD,CAApB,CAIGwB,MAJH,CAIUjB,cAJV,CADU,EAHe,CAAD,CAA5B,CAUAA,cAAc,CAACkB,GAAf,CAAmBnB,QAAnB,EAEA,MAAO,IAAMoB,UAAS,CAAG5B,YAAY,CAACmB,KAAD,CAA9B,CAEP,cAAeA,MAAf"},"metadata":{},"sourceType":"module"}