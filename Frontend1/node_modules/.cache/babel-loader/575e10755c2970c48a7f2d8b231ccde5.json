{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isLoggedIn: false,\n  logging: false,\n  access_token: undefined,\n  currentUser: undefined,\n  roleUser: undefined\n};\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    login(state, action) {\n      state.logging = true;\n    },\n\n    loginSuccess(state, action) {\n      var _action$payload, _action$payload2, _action$payload3, _action$payload3$user;\n\n      state.logging = false;\n      state.isLoggedIn = true;\n      state.currentUser = (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.userInfo;\n      state.access_token = (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.access_token;\n      state.roleUser = (_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : (_action$payload3$user = _action$payload3.userInfo) === null || _action$payload3$user === void 0 ? void 0 : _action$payload3$user.assigned_role;\n    },\n\n    setCurrentUser(state, action) {\n      state.currentUser = action.payload;\n    },\n\n    changeToken(state, action) {\n      state.access_token = \"test\";\n    },\n\n    loginFailure(state) {\n      state.logging = false;\n    },\n\n    logout(state) {\n      state.isLoggedIn = false;\n      state.currentUser = undefined;\n    }\n\n  }\n}); // actions\n\nexport const authActions = authSlice.actions; // reducers\n\nconst authReducer = authSlice.reducer;\nexport default authReducer; // selectors\n\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\nexport const selectIsLogging = state => state.auth.logging;\nexport const selectCurrentUser = state => state.auth.currentUser;\nexport const selectRoleUser = state => state.auth.roleUser;\nexport const selectAccessToken = state => state.auth.access_token;","map":{"version":3,"names":["createSlice","initialState","isLoggedIn","logging","access_token","undefined","currentUser","roleUser","authSlice","name","reducers","login","state","action","loginSuccess","payload","userInfo","assigned_role","setCurrentUser","changeToken","loginFailure","logout","authActions","actions","authReducer","reducer","selectIsLoggedIn","auth","selectIsLogging","selectCurrentUser","selectRoleUser","selectAccessToken"],"sources":["V:/Projects/FDHC TSD/CCHND-React/Frontend/src/app/redux-module/auth/authSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  isLoggedIn: false,\n  logging: false,\n  access_token: undefined,\n  currentUser: undefined,\n  roleUser: undefined,\n};\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    login(state, action) {\n      state.logging = true;\n    },\n    loginSuccess(state, action) {\n      state.logging = false;\n      state.isLoggedIn = true;\n      state.currentUser = action.payload?.userInfo;\n      state.access_token = action.payload?.access_token;\n      state.roleUser = action.payload?.userInfo?.assigned_role;\n    }, \n    setCurrentUser(state, action ) {\n      state.currentUser = action.payload;\n    },\n    changeToken(state, action) {\n      state.access_token = \"test\";\n    },\n    loginFailure(state) {\n      state.logging = false;\n    },\n    logout(state) {\n      state.isLoggedIn = false;\n      state.currentUser = undefined;\n    },\n  },\n});\n\n// actions\nexport const authActions = authSlice.actions;\n// reducers\nconst authReducer = authSlice.reducer;\nexport default authReducer;\n// selectors\nexport const selectIsLoggedIn = (state) => state.auth.isLoggedIn;\nexport const selectIsLogging = (state) => state.auth.logging;\nexport const selectCurrentUser = (state) => state.auth.currentUser;\nexport const selectRoleUser = (state) => state.auth.roleUser;\nexport const selectAccessToken = (state) => state.auth.access_token;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,KADO;EAEnBC,OAAO,EAAE,KAFU;EAGnBC,YAAY,EAAEC,SAHK;EAInBC,WAAW,EAAED,SAJM;EAKnBE,QAAQ,EAAEF;AALS,CAArB;AAQA,OAAO,MAAMG,SAAS,GAAGR,WAAW,CAAC;EACnCS,IAAI,EAAE,MAD6B;EAEnCR,YAFmC;EAGnCS,QAAQ,EAAE;IACRC,KAAK,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACnBD,KAAK,CAACT,OAAN,GAAgB,IAAhB;IACD,CAHO;;IAIRW,YAAY,CAACF,KAAD,EAAQC,MAAR,EAAgB;MAAA;;MAC1BD,KAAK,CAACT,OAAN,GAAgB,KAAhB;MACAS,KAAK,CAACV,UAAN,GAAmB,IAAnB;MACAU,KAAK,CAACN,WAAN,sBAAoBO,MAAM,CAACE,OAA3B,oDAAoB,gBAAgBC,QAApC;MACAJ,KAAK,CAACR,YAAN,uBAAqBS,MAAM,CAACE,OAA5B,qDAAqB,iBAAgBX,YAArC;MACAQ,KAAK,CAACL,QAAN,uBAAiBM,MAAM,CAACE,OAAxB,8EAAiB,iBAAgBC,QAAjC,0DAAiB,sBAA0BC,aAA3C;IACD,CAVO;;IAWRC,cAAc,CAACN,KAAD,EAAQC,MAAR,EAAiB;MAC7BD,KAAK,CAACN,WAAN,GAAoBO,MAAM,CAACE,OAA3B;IACD,CAbO;;IAcRI,WAAW,CAACP,KAAD,EAAQC,MAAR,EAAgB;MACzBD,KAAK,CAACR,YAAN,GAAqB,MAArB;IACD,CAhBO;;IAiBRgB,YAAY,CAACR,KAAD,EAAQ;MAClBA,KAAK,CAACT,OAAN,GAAgB,KAAhB;IACD,CAnBO;;IAoBRkB,MAAM,CAACT,KAAD,EAAQ;MACZA,KAAK,CAACV,UAAN,GAAmB,KAAnB;MACAU,KAAK,CAACN,WAAN,GAAoBD,SAApB;IACD;;EAvBO;AAHyB,CAAD,CAA7B,C,CA8BP;;AACA,OAAO,MAAMiB,WAAW,GAAGd,SAAS,CAACe,OAA9B,C,CACP;;AACA,MAAMC,WAAW,GAAGhB,SAAS,CAACiB,OAA9B;AACA,eAAeD,WAAf,C,CACA;;AACA,OAAO,MAAME,gBAAgB,GAAId,KAAD,IAAWA,KAAK,CAACe,IAAN,CAAWzB,UAA/C;AACP,OAAO,MAAM0B,eAAe,GAAIhB,KAAD,IAAWA,KAAK,CAACe,IAAN,CAAWxB,OAA9C;AACP,OAAO,MAAM0B,iBAAiB,GAAIjB,KAAD,IAAWA,KAAK,CAACe,IAAN,CAAWrB,WAAhD;AACP,OAAO,MAAMwB,cAAc,GAAIlB,KAAD,IAAWA,KAAK,CAACe,IAAN,CAAWpB,QAA7C;AACP,OAAO,MAAMwB,iBAAiB,GAAInB,KAAD,IAAWA,KAAK,CAACe,IAAN,CAAWvB,YAAhD"},"metadata":{},"sourceType":"module"}