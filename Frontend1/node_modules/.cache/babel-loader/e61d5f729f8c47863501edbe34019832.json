{"ast":null,"code":"import _slicedToArray from\"D:/FHDC/CCHND-V2/Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{createContext,useContext,useState,useEffect}from'react';import{DefaultLayoutConfig}from'./DefaultLayoutConfig';import{getEmptyCssClasses,getEmptyCSSVariables,getEmptyHTMLAttributes,LayoutSetup}from'./LayoutSetup';import{jsx as _jsx}from\"react/jsx-runtime\";var LayoutContext=/*#__PURE__*/createContext({config:DefaultLayoutConfig,classes:getEmptyCssClasses(),attributes:getEmptyHTMLAttributes(),cssVariables:getEmptyCSSVariables(),setLayout:function setLayout(config){}});var enableSplashScreen=function enableSplashScreen(){var splashScreen=document.getElementById('splash-screen');if(splashScreen){splashScreen.style.setProperty('display','flex');}};var disableSplashScreen=function disableSplashScreen(){var splashScreen=document.getElementById('splash-screen');if(splashScreen){splashScreen.style.setProperty('display','none');}};var LayoutProvider=function LayoutProvider(_ref){var children=_ref.children;var _useState=useState(LayoutSetup.config),_useState2=_slicedToArray(_useState,2),config=_useState2[0],setConfig=_useState2[1];var _useState3=useState(LayoutSetup.classes),_useState4=_slicedToArray(_useState3,2),classes=_useState4[0],setClasses=_useState4[1];var _useState5=useState(LayoutSetup.attributes),_useState6=_slicedToArray(_useState5,2),attributes=_useState6[0],setAttributes=_useState6[1];var _useState7=useState(LayoutSetup.cssVariables),_useState8=_slicedToArray(_useState7,2),cssVariables=_useState8[0],setCSSVariables=_useState8[1];var setLayout=function setLayout(_themeConfig){enableSplashScreen();var bodyClasses=Array.from(document.body.classList);bodyClasses.forEach(function(cl){return document.body.classList.remove(cl);});LayoutSetup.updatePartialConfig(_themeConfig);setConfig(Object.assign({},LayoutSetup.config));setClasses(LayoutSetup.classes);setAttributes(LayoutSetup.attributes);setCSSVariables(LayoutSetup.cssVariables);setTimeout(function(){disableSplashScreen();},500);};var value={config:config,classes:classes,attributes:attributes,cssVariables:cssVariables,setLayout:setLayout};useEffect(function(){disableSplashScreen();},[]);return/*#__PURE__*/_jsx(LayoutContext.Provider,{value:value,children:children});};export{LayoutContext,LayoutProvider};export function useLayout(){return useContext(LayoutContext);}","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","DefaultLayoutConfig","getEmptyCssClasses","getEmptyCSSVariables","getEmptyHTMLAttributes","LayoutSetup","LayoutContext","config","classes","attributes","cssVariables","setLayout","enableSplashScreen","splashScreen","document","getElementById","style","setProperty","disableSplashScreen","LayoutProvider","children","setConfig","setClasses","setAttributes","setCSSVariables","_themeConfig","bodyClasses","Array","from","body","classList","forEach","cl","remove","updatePartialConfig","Object","assign","setTimeout","value","useLayout"],"sources":["D:/FHDC/CCHND-V2/Frontend/src/_metronic/layout/core/LayoutProvider.tsx"],"sourcesContent":["import React, {createContext, useContext, useState, useEffect} from 'react'\r\nimport {DefaultLayoutConfig} from './DefaultLayoutConfig'\r\nimport {\r\n  getEmptyCssClasses,\r\n  getEmptyCSSVariables,\r\n  getEmptyHTMLAttributes,\r\n  LayoutSetup,\r\n} from './LayoutSetup'\r\nimport {\r\n  ILayout,\r\n  ILayoutCSSVariables,\r\n  ILayoutCSSClasses,\r\n  ILayoutHTMLAttributes,\r\n} from './LayoutModels'\r\n\r\nexport interface LayoutContextModel {\r\n  config: ILayout\r\n  classes: ILayoutCSSClasses\r\n  attributes: ILayoutHTMLAttributes\r\n  cssVariables: ILayoutCSSVariables\r\n  setLayout: (config: LayoutSetup) => void\r\n}\r\n\r\nconst LayoutContext = createContext<LayoutContextModel>({\r\n  config: DefaultLayoutConfig,\r\n  classes: getEmptyCssClasses(),\r\n  attributes: getEmptyHTMLAttributes(),\r\n  cssVariables: getEmptyCSSVariables(),\r\n  setLayout: (config: LayoutSetup) => {},\r\n})\r\n\r\nconst enableSplashScreen = () => {\r\n  const splashScreen = document.getElementById('splash-screen')\r\n  if (splashScreen) {\r\n    splashScreen.style.setProperty('display', 'flex')\r\n  }\r\n}\r\n\r\nconst disableSplashScreen = () => {\r\n  const splashScreen = document.getElementById('splash-screen')\r\n  if (splashScreen) {\r\n    splashScreen.style.setProperty('display', 'none')\r\n  }\r\n}\r\n\r\nconst LayoutProvider: React.FC = ({children}) => {\r\n  const [config, setConfig] = useState(LayoutSetup.config)\r\n  const [classes, setClasses] = useState(LayoutSetup.classes)\r\n  const [attributes, setAttributes] = useState(LayoutSetup.attributes)\r\n  const [cssVariables, setCSSVariables] = useState(LayoutSetup.cssVariables)\r\n  const setLayout = (_themeConfig: Partial<ILayout>) => {\r\n    enableSplashScreen()\r\n    const bodyClasses = Array.from(document.body.classList)\r\n    bodyClasses.forEach((cl) => document.body.classList.remove(cl))\r\n    LayoutSetup.updatePartialConfig(_themeConfig)\r\n    setConfig(Object.assign({}, LayoutSetup.config))\r\n    setClasses(LayoutSetup.classes)\r\n    setAttributes(LayoutSetup.attributes)\r\n    setCSSVariables(LayoutSetup.cssVariables)\r\n    setTimeout(() => {\r\n      disableSplashScreen()\r\n    }, 500)\r\n  }\r\n  const value: LayoutContextModel = {\r\n    config,\r\n    classes,\r\n    attributes,\r\n    cssVariables,\r\n    setLayout,\r\n  }\r\n\r\n  useEffect(() => {\r\n    disableSplashScreen()\r\n  }, [])\r\n\r\n  return <LayoutContext.Provider value={value}>{children}</LayoutContext.Provider>\r\n}\r\n\r\nexport {LayoutContext, LayoutProvider}\r\n\r\nexport function useLayout() {\r\n  return useContext(LayoutContext)\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}