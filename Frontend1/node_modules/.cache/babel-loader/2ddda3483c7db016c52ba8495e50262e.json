{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { locationActions, tinhThanhActions } from \"./locationSlice\";\nimport { getListTinhThanh } from \"./serivice\";\n\nfunction* handleTinhThanh(_ref) {\n  let {\n    payload\n  } = _ref;\n\n  try {\n    const resultsTinhThanh = yield call(getListTinhThanh, payload);\n\n    if (resultsTinhThanh) {\n      yield put({\n        type: locationActions.getLocationSuccess.type,\n        payload: resultsTinhThanh\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: locationActions.getLocationFailed.type\n    });\n  }\n}\n\nfunction* handleQuanHuyen(_ref2) {\n  let {\n    payload\n  } = _ref2;\n\n  try {\n    const resultsQuanHuyen = yield call(getListQuanHuyen, payload);\n\n    if (resultsQuanHuyen) {\n      yield put({\n        type: locationActions.getLocationSuccess.type,\n        payload: resultsQuanHuyen\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: locationActions.getLocationFailed.type\n    });\n  }\n}\n\nfunction* handleXaPhuong(_ref3) {\n  let {\n    payload\n  } = _ref3;\n\n  try {\n    const resultsXaPhuong = yield call(getListXaPhuong, payload);\n\n    if (resultsXaPhuong) {\n      yield put({\n        type: locationActions.getLocationSuccess.type,\n        payload: resultsXaPhuong\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: locationActions.getLocationFailed.type\n    });\n  }\n}\n\nexport default function* locationSaga() {\n  //   yield fork(watchLoginFlow);\n  yield takeEvery(locationActions.getLocation.type, handleTinhThanh);\n  yield takeEvery(locationActions.getLocation.type, handleQuanHuyen);\n  yield takeEvery(locationActions.getLocation.type, handleXaPhuong);\n}","map":{"version":3,"names":["call","put","takeEvery","locationActions","tinhThanhActions","getListTinhThanh","handleTinhThanh","payload","resultsTinhThanh","type","getLocationSuccess","e","getLocationFailed","handleQuanHuyen","resultsQuanHuyen","getListQuanHuyen","handleXaPhuong","resultsXaPhuong","getListXaPhuong","locationSaga","getLocation"],"sources":["D:/FHDC/CCHND-V2/Frontend/src/app/redux-module/locations/locationSaga.js"],"sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { locationActions, tinhThanhActions } from \"./locationSlice\";\r\nimport { getListTinhThanh } from \"./serivice\";\r\n\r\nfunction* handleTinhThanh({ payload }) {\r\n    try {\r\n        const resultsTinhThanh = yield call(getListTinhThanh, payload);\r\n\r\n        if (resultsTinhThanh) {\r\n            yield put({\r\n                type: locationActions.getLocationSuccess.type,\r\n                payload: resultsTinhThanh,\r\n            });\r\n        }\r\n    } catch (e) {\r\n        yield put({\r\n            type: locationActions.getLocationFailed.type,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* handleQuanHuyen({ payload }) {\r\n    try {\r\n        const resultsQuanHuyen = yield call(getListQuanHuyen, payload);\r\n\r\n        if (resultsQuanHuyen) {\r\n            yield put({\r\n                type: locationActions.getLocationSuccess.type,\r\n                payload: resultsQuanHuyen,\r\n            });\r\n        }\r\n    } catch (e) {\r\n        yield put({\r\n            type: locationActions.getLocationFailed.type,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* handleXaPhuong({ payload }) {\r\n    try {\r\n        const resultsXaPhuong = yield call(getListXaPhuong, payload);\r\n\r\n        if (resultsXaPhuong) {\r\n            yield put({\r\n                type: locationActions.getLocationSuccess.type,\r\n                payload: resultsXaPhuong,\r\n            });\r\n        }\r\n    } catch (e) {\r\n        yield put({\r\n            type: locationActions.getLocationFailed.type,\r\n        });\r\n    }\r\n}\r\n\r\nexport default function* locationSaga() {\r\n    //   yield fork(watchLoginFlow);\r\n    yield takeEvery(locationActions.getLocation.type, handleTinhThanh);\r\n    yield takeEvery(locationActions.getLocation.type, handleQuanHuyen);\r\n    yield takeEvery(locationActions.getLocation.type, handleXaPhuong);\r\n\r\n}\r\n"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,SAASC,eAAT,EAA0BC,gBAA1B,QAAkD,iBAAlD;AACA,SAASC,gBAAT,QAAiC,YAAjC;;AAEA,UAAUC,eAAV,OAAuC;EAAA,IAAb;IAAEC;EAAF,CAAa;;EACnC,IAAI;IACA,MAAMC,gBAAgB,GAAG,MAAMR,IAAI,CAACK,gBAAD,EAAmBE,OAAnB,CAAnC;;IAEA,IAAIC,gBAAJ,EAAsB;MAClB,MAAMP,GAAG,CAAC;QACNQ,IAAI,EAAEN,eAAe,CAACO,kBAAhB,CAAmCD,IADnC;QAENF,OAAO,EAAEC;MAFH,CAAD,CAAT;IAIH;EACJ,CATD,CASE,OAAOG,CAAP,EAAU;IACR,MAAMV,GAAG,CAAC;MACNQ,IAAI,EAAEN,eAAe,CAACS,iBAAhB,CAAkCH;IADlC,CAAD,CAAT;EAGH;AACJ;;AAED,UAAUI,eAAV,QAAuC;EAAA,IAAb;IAAEN;EAAF,CAAa;;EACnC,IAAI;IACA,MAAMO,gBAAgB,GAAG,MAAMd,IAAI,CAACe,gBAAD,EAAmBR,OAAnB,CAAnC;;IAEA,IAAIO,gBAAJ,EAAsB;MAClB,MAAMb,GAAG,CAAC;QACNQ,IAAI,EAAEN,eAAe,CAACO,kBAAhB,CAAmCD,IADnC;QAENF,OAAO,EAAEO;MAFH,CAAD,CAAT;IAIH;EACJ,CATD,CASE,OAAOH,CAAP,EAAU;IACR,MAAMV,GAAG,CAAC;MACNQ,IAAI,EAAEN,eAAe,CAACS,iBAAhB,CAAkCH;IADlC,CAAD,CAAT;EAGH;AACJ;;AAED,UAAUO,cAAV,QAAsC;EAAA,IAAb;IAAET;EAAF,CAAa;;EAClC,IAAI;IACA,MAAMU,eAAe,GAAG,MAAMjB,IAAI,CAACkB,eAAD,EAAkBX,OAAlB,CAAlC;;IAEA,IAAIU,eAAJ,EAAqB;MACjB,MAAMhB,GAAG,CAAC;QACNQ,IAAI,EAAEN,eAAe,CAACO,kBAAhB,CAAmCD,IADnC;QAENF,OAAO,EAAEU;MAFH,CAAD,CAAT;IAIH;EACJ,CATD,CASE,OAAON,CAAP,EAAU;IACR,MAAMV,GAAG,CAAC;MACNQ,IAAI,EAAEN,eAAe,CAACS,iBAAhB,CAAkCH;IADlC,CAAD,CAAT;EAGH;AACJ;;AAED,eAAe,UAAUU,YAAV,GAAyB;EACpC;EACA,MAAMjB,SAAS,CAACC,eAAe,CAACiB,WAAhB,CAA4BX,IAA7B,EAAmCH,eAAnC,CAAf;EACA,MAAMJ,SAAS,CAACC,eAAe,CAACiB,WAAhB,CAA4BX,IAA7B,EAAmCI,eAAnC,CAAf;EACA,MAAMX,SAAS,CAACC,eAAe,CAACiB,WAAhB,CAA4BX,IAA7B,EAAmCO,cAAnC,CAAf;AAEH"},"metadata":{},"sourceType":"module"}