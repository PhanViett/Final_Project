{"ast":null,"code":"import _slicedToArray from\"D:/FHDC/CCHND-V2/Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toConsumableArray from\"D:/FHDC/CCHND-V2/Frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{createContext,useEffect,useState}from'react';import qs from'qs';function createResponseContext(initialState){return/*#__PURE__*/createContext(initialState);}function isNotEmpty(obj){return obj!==undefined&&obj!==null&&obj!=='';}// Example: page=1&items_per_page=10&sort=id&order=desc&search=a&filter_name=a&filter_online=false\nfunction stringifyRequestQuery(state){var pagination=qs.stringify(state,{filter:['page','items_per_page'],skipNulls:true});var sort=qs.stringify(state,{filter:['sort','order'],skipNulls:true});var search=isNotEmpty(state.search)?qs.stringify(state,{filter:['search'],skipNulls:true}):'';var filter=state.filter?Object.entries(state.filter).filter(function(obj){return isNotEmpty(obj[1]);}).map(function(obj){return\"filter_\".concat(obj[0],\"=\").concat(obj[1]);}).join('&'):'';return[pagination,sort,search,filter].filter(function(f){return f;}).join('&').toLowerCase();}function parseRequestQuery(query){var cache=qs.parse(query);return cache;}function calculatedGroupingIsDisabled(isLoading,data){if(isLoading){return true;}return!data||!data.length;}function calculateIsAllDataSelected(data,selected){if(!data){return false;}return data.length>0&&data.length===selected.length;}function groupingOnSelect(id,selected,setSelected){if(!id){return;}if(selected.includes(id)){setSelected(selected.filter(function(itemId){return itemId!==id;}));}else{var updatedSelected=_toConsumableArray(selected);updatedSelected.push(id);setSelected(updatedSelected);}}function groupingOnSelectAll(isAllSelected,setSelected,data){if(isAllSelected){setSelected([]);return;}if(!data||!data.length){return;}setSelected(data.filter(function(item){return item.id;}).map(function(item){return item.id;}));}// Hook\nfunction useDebounce(value,delay){// State and setters for debounced value\nvar _useState=useState(value),_useState2=_slicedToArray(_useState,2),debouncedValue=_useState2[0],setDebouncedValue=_useState2[1];useEffect(function(){// Update debounced value after delay\nvar handler=setTimeout(function(){setDebouncedValue(value);},delay);// Cancel the timeout if value changes (also on delay change or unmount)\n// This is how we prevent debounced value from updating if value is changed ...\n// .. within the delay period. Timeout gets cleared and restarted.\nreturn function(){clearTimeout(handler);};},[value,delay]// Only re-call effect if value or delay changes\n);return debouncedValue;}export{createResponseContext,stringifyRequestQuery,parseRequestQuery,calculatedGroupingIsDisabled,calculateIsAllDataSelected,groupingOnSelect,groupingOnSelectAll,useDebounce,isNotEmpty};","map":{"version":3,"names":["createContext","useEffect","useState","qs","createResponseContext","initialState","isNotEmpty","obj","undefined","stringifyRequestQuery","state","pagination","stringify","filter","skipNulls","sort","search","Object","entries","map","join","f","toLowerCase","parseRequestQuery","query","cache","parse","calculatedGroupingIsDisabled","isLoading","data","length","calculateIsAllDataSelected","selected","groupingOnSelect","id","setSelected","includes","itemId","updatedSelected","push","groupingOnSelectAll","isAllSelected","item","useDebounce","value","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout"],"sources":["D:/FHDC/CCHND-V2/Frontend/src/_metronic/helpers/crud-helper/helpers.tsx"],"sourcesContent":["import {createContext, Dispatch, SetStateAction, useEffect, useState} from 'react'\r\nimport qs from 'qs'\r\nimport {ID, QueryResponseContextProps, QueryState} from './models'\r\n\r\nfunction createResponseContext<T>(initialState: QueryResponseContextProps<T>) {\r\n  return createContext(initialState)\r\n}\r\n\r\nfunction isNotEmpty(obj: unknown) {\r\n  return obj !== undefined && obj !== null && obj !== ''\r\n}\r\n\r\n// Example: page=1&items_per_page=10&sort=id&order=desc&search=a&filter_name=a&filter_online=false\r\nfunction stringifyRequestQuery(state: QueryState): string {\r\n  const pagination = qs.stringify(state, {filter: ['page', 'items_per_page'], skipNulls: true})\r\n  const sort = qs.stringify(state, {filter: ['sort', 'order'], skipNulls: true})\r\n  const search = isNotEmpty(state.search)\r\n    ? qs.stringify(state, {filter: ['search'], skipNulls: true})\r\n    : ''\r\n\r\n  const filter = state.filter\r\n    ? Object.entries(state.filter as Object)\r\n        .filter((obj) => isNotEmpty(obj[1]))\r\n        .map((obj) => {\r\n          return `filter_${obj[0]}=${obj[1]}`\r\n        })\r\n        .join('&')\r\n    : ''\r\n\r\n  return [pagination, sort, search, filter]\r\n    .filter((f) => f)\r\n    .join('&')\r\n    .toLowerCase()\r\n}\r\n\r\nfunction parseRequestQuery(query: string): QueryState {\r\n  const cache: unknown = qs.parse(query)\r\n  return cache as QueryState\r\n}\r\n\r\nfunction calculatedGroupingIsDisabled<T>(isLoading: boolean, data: Array<T> | undefined): boolean {\r\n  if (isLoading) {\r\n    return true\r\n  }\r\n\r\n  return !data || !data.length\r\n}\r\n\r\nfunction calculateIsAllDataSelected<T>(data: Array<T> | undefined, selected: Array<ID>): boolean {\r\n  if (!data) {\r\n    return false\r\n  }\r\n\r\n  return data.length > 0 && data.length === selected.length\r\n}\r\n\r\nfunction groupingOnSelect(\r\n  id: ID,\r\n  selected: Array<ID>,\r\n  setSelected: Dispatch<SetStateAction<Array<ID>>>\r\n) {\r\n  if (!id) {\r\n    return\r\n  }\r\n\r\n  if (selected.includes(id)) {\r\n    setSelected(selected.filter((itemId) => itemId !== id))\r\n  } else {\r\n    const updatedSelected = [...selected]\r\n    updatedSelected.push(id)\r\n    setSelected(updatedSelected)\r\n  }\r\n}\r\n\r\nfunction groupingOnSelectAll<T>(\r\n  isAllSelected: boolean,\r\n  setSelected: Dispatch<SetStateAction<Array<ID>>>,\r\n  data?: Array<T & {id?: ID}>\r\n) {\r\n  if (isAllSelected) {\r\n    setSelected([])\r\n    return\r\n  }\r\n\r\n  if (!data || !data.length) {\r\n    return\r\n  }\r\n\r\n  setSelected(data.filter((item) => item.id).map((item) => item.id))\r\n}\r\n\r\n// Hook\r\nfunction useDebounce(value: string | undefined, delay: number) {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value)\r\n  useEffect(\r\n    () => {\r\n      // Update debounced value after delay\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value)\r\n      }, delay)\r\n      // Cancel the timeout if value changes (also on delay change or unmount)\r\n      // This is how we prevent debounced value from updating if value is changed ...\r\n      // .. within the delay period. Timeout gets cleared and restarted.\r\n      return () => {\r\n        clearTimeout(handler)\r\n      }\r\n    },\r\n    [value, delay] // Only re-call effect if value or delay changes\r\n  )\r\n  return debouncedValue\r\n}\r\n\r\nexport {\r\n  createResponseContext,\r\n  stringifyRequestQuery,\r\n  parseRequestQuery,\r\n  calculatedGroupingIsDisabled,\r\n  calculateIsAllDataSelected,\r\n  groupingOnSelect,\r\n  groupingOnSelectAll,\r\n  useDebounce,\r\n  isNotEmpty,\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}