{"ast":null,"code":"import{initializeApp}from\"firebase/app\";import{getMessaging,getToken,onMessage}from\"firebase/messaging\";var firebaseConfig={apiKey:\"AIzaSyBAyZD8XWJo4nl4KcIO-c2KOCdLKchlLb4\",authDomain:\"testnotiappcchndv2.firebaseapp.com\",projectId:\"testnotiappcchndv2\",storageBucket:\"testnotiappcchndv2.appspot.com\",messagingSenderId:\"568106658592\",appId:\"1:568106658592:web:97ae7bbddbf26121c04545\",measurementId:\"G-SE8ET9ZK0K\"};var firebaseApp=initializeApp(firebaseConfig);var messaging=getMessaging(firebaseApp);export var fetchToken=function fetchToken(setTokenFound){return getToken(messaging,{vapidKey:\"BG4vg0Hec0WeyoWxYYFa6HakkPrmySbA1fcushhMNxF8RBUJd9Scl011sB_bhTSDCNDKkS0QjVhLT8thlcA-ohc\"}).then(function(currentToken){if(currentToken){setTokenFound(true);// Track the token -> client mapping, by sending to backend server\n// show on the UI that permission is secured\n}else{console.log(\"No registration token available. Request permission to generate one.\");setTokenFound(false);// shows on the UI that permission is required\n}}).catch(function(err){// catch error while creating client token\n});};export var onMessageListener=function onMessageListener(){return new Promise(function(resolve){onMessage(messaging,function(payload){resolve(payload);});});};","map":{"version":3,"names":["initializeApp","getMessaging","getToken","onMessage","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","messaging","fetchToken","setTokenFound","vapidKey","then","currentToken","console","log","catch","err","onMessageListener","Promise","resolve","payload"],"sources":["D:/FHDC/CCHND-V2/Frontend/src/firebase.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getMessaging, getToken, onMessage } from \"firebase/messaging\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBAyZD8XWJo4nl4KcIO-c2KOCdLKchlLb4\",\n  authDomain: \"testnotiappcchndv2.firebaseapp.com\",\n  projectId: \"testnotiappcchndv2\",\n  storageBucket: \"testnotiappcchndv2.appspot.com\",\n  messagingSenderId: \"568106658592\",\n  appId: \"1:568106658592:web:97ae7bbddbf26121c04545\",\n  measurementId: \"G-SE8ET9ZK0K\",\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst messaging = getMessaging(firebaseApp);\n\nexport const fetchToken = (setTokenFound) => {\n  return getToken(messaging, {\n    vapidKey:\n      \"BG4vg0Hec0WeyoWxYYFa6HakkPrmySbA1fcushhMNxF8RBUJd9Scl011sB_bhTSDCNDKkS0QjVhLT8thlcA-ohc\",\n  })\n    .then((currentToken) => {\n      if (currentToken) {\n        setTokenFound(true);\n        // Track the token -> client mapping, by sending to backend server\n        // show on the UI that permission is secured\n      } else {\n        console.log(\n          \"No registration token available. Request permission to generate one.\"\n        );\n        setTokenFound(false);\n        // shows on the UI that permission is required\n      }\n    })\n    .catch((err) => {\n      // catch error while creating client token\n    });\n};\n\nexport const onMessageListener = () =>\n  new Promise((resolve) => {\n    onMessage(messaging, (payload) => {\n      resolve(payload);\n    });\n  });\n"],"mappings":"AAAA,OAASA,aAAT,KAA8B,cAA9B,CACA,OAASC,YAAT,CAAuBC,QAAvB,CAAiCC,SAAjC,KAAkD,oBAAlD,CAEA,GAAIC,eAAc,CAAG,CACnBC,MAAM,CAAE,yCADW,CAEnBC,UAAU,CAAE,oCAFO,CAGnBC,SAAS,CAAE,oBAHQ,CAInBC,aAAa,CAAE,gCAJI,CAKnBC,iBAAiB,CAAE,cALA,CAMnBC,KAAK,CAAE,2CANY,CAOnBC,aAAa,CAAE,cAPI,CAArB,CAUA,GAAMC,YAAW,CAAGZ,aAAa,CAACI,cAAD,CAAjC,CACA,GAAMS,UAAS,CAAGZ,YAAY,CAACW,WAAD,CAA9B,CAEA,MAAO,IAAME,WAAU,CAAG,QAAbA,WAAa,CAACC,aAAD,CAAmB,CAC3C,MAAOb,SAAQ,CAACW,SAAD,CAAY,CACzBG,QAAQ,CACN,yFAFuB,CAAZ,CAAR,CAIJC,IAJI,CAIC,SAACC,YAAD,CAAkB,CACtB,GAAIA,YAAJ,CAAkB,CAChBH,aAAa,CAAC,IAAD,CAAb,CACA;AACA;AACD,CAJD,IAIO,CACLI,OAAO,CAACC,GAAR,CACE,sEADF,EAGAL,aAAa,CAAC,KAAD,CAAb,CACA;AACD,CACF,CAhBI,EAiBJM,KAjBI,CAiBE,SAACC,GAAD,CAAS,CACd;AACD,CAnBI,CAAP,CAoBD,CArBM,CAuBP,MAAO,IAAMC,kBAAiB,CAAG,QAApBA,kBAAoB,SAC/B,IAAIC,QAAJ,CAAY,SAACC,OAAD,CAAa,CACvBtB,SAAS,CAACU,SAAD,CAAY,SAACa,OAAD,CAAa,CAChCD,OAAO,CAACC,OAAD,CAAP,CACD,CAFQ,CAAT,CAGD,CAJD,CAD+B,EAA1B"},"metadata":{},"sourceType":"module"}