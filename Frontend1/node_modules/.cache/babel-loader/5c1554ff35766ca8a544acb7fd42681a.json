{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport { FLUSH, PAUSE, PERSIST, persistReducer, persistStore, PURGE, REGISTER, REHYDRATE } from \"redux-persist\";\nimport { encryptTransform } from \"redux-persist-transform-encrypt\";\nimport storage from \"redux-persist/lib/storage\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducers from \"./rootReducer\";\nimport rootSaga from \"./rootSaga\";\nconst sagaMiddleware = createSagaMiddleware(); // const persistConfig = {\n//   key: \"root\",\n//   version: 1,\n//   storage,\n// };\n// const persistedReducer = persistReducer(persistConfig, rootReducers);\n\nconst persistedReducer = persistReducer({\n  key: \"root\",\n  storage,\n  whitelist: [\"auth\"],\n  transforms: [encryptTransform({\n    secretKey: \"abc123\",\n    onError: function (error) {\n      console.log(\"encryptTransform\", error); // Handle the error.\n    }\n  })]\n}, rootReducers);\nconst store = configureStore({\n  reducer: persistedReducer,\n  devTools: true,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  }).concat(sagaMiddleware)\n});\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);\nexport default store;","map":{"version":3,"names":["configureStore","FLUSH","PAUSE","PERSIST","persistReducer","persistStore","PURGE","REGISTER","REHYDRATE","encryptTransform","storage","createSagaMiddleware","rootReducers","rootSaga","sagaMiddleware","persistedReducer","key","whitelist","transforms","secretKey","onError","error","console","log","store","reducer","devTools","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","concat","run","persistor"],"sources":["V:/Projects/FDHC TSD/CCHND-React/Frontend/src/app/redux-module/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport {\n  FLUSH, PAUSE,\n  PERSIST, persistReducer, persistStore, PURGE,\n  REGISTER, REHYDRATE\n} from \"redux-persist\";\nimport { encryptTransform } from \"redux-persist-transform-encrypt\";\nimport storage from \"redux-persist/lib/storage\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducers from \"./rootReducer\";\nimport rootSaga from \"./rootSaga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// const persistConfig = {\n//   key: \"root\",\n//   version: 1,\n//   storage,\n// };\n\n// const persistedReducer = persistReducer(persistConfig, rootReducers);\n\nconst persistedReducer = persistReducer(\n  {\n    key: \"root\",\n    storage,\n    whitelist: [\"auth\"],\n    transforms: [\n      encryptTransform({\n        secretKey: \"abc123\",\n        onError: function (error) {\n          console.log(\"encryptTransform\", error);\n          // Handle the error.\n        },\n      }),\n    ],\n  },\n  rootReducers\n);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  devTools: true,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(sagaMiddleware),\n});\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\n\nexport default store;\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SACEC,KADF,EACSC,KADT,EAEEC,OAFF,EAEWC,cAFX,EAE2BC,YAF3B,EAEyCC,KAFzC,EAGEC,QAHF,EAGYC,SAHZ,QAIO,eAJP;AAKA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C,C,CAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMI,gBAAgB,GAAGX,cAAc,CACrC;EACEY,GAAG,EAAE,MADP;EAEEN,OAFF;EAGEO,SAAS,EAAE,CAAC,MAAD,CAHb;EAIEC,UAAU,EAAE,CACVT,gBAAgB,CAAC;IACfU,SAAS,EAAE,QADI;IAEfC,OAAO,EAAE,UAAUC,KAAV,EAAiB;MACxBC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,KAAhC,EADwB,CAExB;IACD;EALc,CAAD,CADN;AAJd,CADqC,EAerCT,YAfqC,CAAvC;AAkBA,MAAMY,KAAK,GAAGxB,cAAc,CAAC;EAC3ByB,OAAO,EAAEV,gBADkB;EAE3BW,QAAQ,EAAE,IAFiB;EAG3BC,UAAU,EAAGC,oBAAD,IACVA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAAC7B,KAAD,EAAQO,SAAR,EAAmBN,KAAnB,EAA0BC,OAA1B,EAAmCG,KAAnC,EAA0CC,QAA1C;IADC;EADA,CAAD,CAApB,CAIGwB,MAJH,CAIUjB,cAJV;AAJyB,CAAD,CAA5B;AAUAA,cAAc,CAACkB,GAAf,CAAmBnB,QAAnB;AAEA,OAAO,MAAMoB,SAAS,GAAG5B,YAAY,CAACmB,KAAD,CAA9B;AAEP,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}