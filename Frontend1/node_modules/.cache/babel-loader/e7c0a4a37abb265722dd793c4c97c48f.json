{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar ecma402_abstract_1 = require(\"@formatjs/ecma402-abstract\");\n\nvar InitializeRelativeTimeFormat_1 = require(\"./abstract/InitializeRelativeTimeFormat\");\n\nvar PartitionRelativeTimePattern_1 = require(\"./abstract/PartitionRelativeTimePattern\");\n\nvar get_internal_slots_1 = (0, tslib_1.__importDefault)(require(\"./get_internal_slots\"));\n\nvar RelativeTimeFormat =\n/** @class */\nfunction () {\n  function RelativeTimeFormat(locales, options) {\n    // test262/test/intl402/RelativeTimeFormat/constructor/constructor/newtarget-undefined.js\n    // Cannot use `new.target` bc of IE11 & TS transpiles it to something else\n    var newTarget = this && this instanceof RelativeTimeFormat ? this.constructor : void 0;\n\n    if (!newTarget) {\n      throw new TypeError(\"Intl.RelativeTimeFormat must be called with 'new'\");\n    }\n\n    return (0, InitializeRelativeTimeFormat_1.InitializeRelativeTimeFormat)(this, locales, options, {\n      getInternalSlots: get_internal_slots_1.default,\n      availableLocales: RelativeTimeFormat.availableLocales,\n      relevantExtensionKeys: RelativeTimeFormat.relevantExtensionKeys,\n      localeData: RelativeTimeFormat.localeData,\n      getDefaultLocale: RelativeTimeFormat.getDefaultLocale\n    });\n  }\n\n  RelativeTimeFormat.prototype.format = function (value, unit) {\n    if (typeof this !== 'object') {\n      throw new TypeError('format was called on a non-object');\n    }\n\n    var internalSlots = (0, get_internal_slots_1.default)(this);\n\n    if (!internalSlots.initializedRelativeTimeFormat) {\n      throw new TypeError('format was called on a invalid context');\n    }\n\n    return (0, PartitionRelativeTimePattern_1.PartitionRelativeTimePattern)(this, Number(value), (0, ecma402_abstract_1.ToString)(unit), {\n      getInternalSlots: get_internal_slots_1.default\n    }).map(function (el) {\n      return el.value;\n    }).join('');\n  };\n\n  RelativeTimeFormat.prototype.formatToParts = function (value, unit) {\n    if (typeof this !== 'object') {\n      throw new TypeError('formatToParts was called on a non-object');\n    }\n\n    var internalSlots = (0, get_internal_slots_1.default)(this);\n\n    if (!internalSlots.initializedRelativeTimeFormat) {\n      throw new TypeError('formatToParts was called on a invalid context');\n    }\n\n    return (0, PartitionRelativeTimePattern_1.PartitionRelativeTimePattern)(this, Number(value), (0, ecma402_abstract_1.ToString)(unit), {\n      getInternalSlots: get_internal_slots_1.default\n    });\n  };\n\n  RelativeTimeFormat.prototype.resolvedOptions = function () {\n    if (typeof this !== 'object') {\n      throw new TypeError('resolvedOptions was called on a non-object');\n    }\n\n    var internalSlots = (0, get_internal_slots_1.default)(this);\n\n    if (!internalSlots.initializedRelativeTimeFormat) {\n      throw new TypeError('resolvedOptions was called on a invalid context');\n    } // test262/test/intl402/RelativeTimeFormat/prototype/resolvedOptions/type.js\n\n\n    return {\n      locale: internalSlots.locale,\n      style: internalSlots.style,\n      numeric: internalSlots.numeric,\n      numberingSystem: internalSlots.numberingSystem\n    };\n  };\n\n  RelativeTimeFormat.supportedLocalesOf = function (locales, options) {\n    return (0, ecma402_abstract_1.SupportedLocales)(RelativeTimeFormat.availableLocales, (0, ecma402_abstract_1.CanonicalizeLocaleList)(locales), options);\n  };\n\n  RelativeTimeFormat.__addLocaleData = function () {\n    var data = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      data[_i] = arguments[_i];\n    }\n\n    for (var _a = 0, data_1 = data; _a < data_1.length; _a++) {\n      var _b = data_1[_a],\n          d = _b.data,\n          locale = _b.locale;\n      var minimizedLocale = new Intl.Locale(locale).minimize().toString();\n      RelativeTimeFormat.localeData[locale] = RelativeTimeFormat.localeData[minimizedLocale] = d;\n      RelativeTimeFormat.availableLocales.add(minimizedLocale);\n      RelativeTimeFormat.availableLocales.add(locale);\n\n      if (!RelativeTimeFormat.__defaultLocale) {\n        RelativeTimeFormat.__defaultLocale = minimizedLocale;\n      }\n    }\n  };\n\n  RelativeTimeFormat.getDefaultLocale = function () {\n    return RelativeTimeFormat.__defaultLocale;\n  };\n\n  RelativeTimeFormat.localeData = {};\n  RelativeTimeFormat.availableLocales = new Set();\n  RelativeTimeFormat.__defaultLocale = '';\n  RelativeTimeFormat.relevantExtensionKeys = ['nu'];\n  RelativeTimeFormat.polyfilled = true;\n  return RelativeTimeFormat;\n}();\n\nexports.default = RelativeTimeFormat;\n\ntry {\n  // IE11 does not have Symbol\n  if (typeof Symbol !== 'undefined') {\n    Object.defineProperty(RelativeTimeFormat.prototype, Symbol.toStringTag, {\n      value: 'Intl.RelativeTimeFormat',\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n  } // https://github.com/tc39/test262/blob/master/test/intl402/RelativeTimeFormat/constructor/length.js\n\n\n  Object.defineProperty(RelativeTimeFormat.prototype.constructor, 'length', {\n    value: 0,\n    writable: false,\n    enumerable: false,\n    configurable: true\n  }); // https://github.com/tc39/test262/blob/master/test/intl402/RelativeTimeFormat/constructor/supportedLocalesOf/length.js\n\n  Object.defineProperty(RelativeTimeFormat.supportedLocalesOf, 'length', {\n    value: 1,\n    writable: false,\n    enumerable: false,\n    configurable: true\n  });\n} catch (e) {// Meta fix so we're test262-compliant, not important\n}","map":null,"metadata":{},"sourceType":"script"}