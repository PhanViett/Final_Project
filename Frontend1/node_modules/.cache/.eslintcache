[{"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\index.tsx":"1","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\redux-module\\store.js":"2","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\configs\\SetupAxios.js":"3","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\routing\\AppRoutes.tsx":"4","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\i18n\\Metronici18n.tsx":"5","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\redux-module\\rootReducer.js":"6","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\redux-module\\rootSaga.js":"7","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\redux-module\\auth\\authSlice.js":"8","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\routing\\PrivateRoutes.tsx":"9","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\App.tsx":"10","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\errors\\ErrorsPage.tsx":"11","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\dang-ky\\DangKy.js":"12","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\In\\In.js":"13","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\auth\\components\\ForgotPassword.tsx":"14","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\auth\\Login.js":"15","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\auth\\index.ts":"16","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\redux-module\\auth\\authSaga.js":"17","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\redux-module\\noti\\notiSlice.js":"18","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\redux-module\\locations\\locationSaga.js":"19","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\redux-module\\noti\\notiSaga.js":"20","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\redux-module\\locations\\locationSlice.js":"21","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\redux-module\\common\\commonSlice.js":"22","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\chung-chi-hanh-nghe\\ChungChiHanhNghePage.js":"23","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\chung-chi-hanh-nghe\\ChungChiHanhNgheDuoc.js":"24","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-chung-chi\\ChiTietChungChi.js":"25","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-thu-ly-duoc-si\\ChiTietHoSoThuLyTuChoi.js":"26","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-thu-ly-duoc-si\\ChiTietHoSoThuLyDuThaoCapPhep.js":"27","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-phe-duyet-to-chuc\\DanhSachHoSoPheDuyetToChuc.js":"28","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-cho-in\\DanhSachHoSoChoIn.js":"29","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-cho-in-to-chuc\\DanhSachHoSoChoInToChuc.js":"30","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-chung-chi\\DanhSachChungChi.js":"31","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-phe-duyet\\DanhSachHoSoPheDuyet.js":"32","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-thu-ly-duoc-si\\ChiTietHoSoThuLyCapMoi.js":"33","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\loai-ma-chung-chi\\LoaiMaChungChi.js":"34","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\loai-ma-gps\\LoaiMaGPS.js":"35","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-thu-ly-duoc-si\\DanhSachHoSoThuLyDuocSi.js":"36","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-thu-ly-duoc-si\\ChiTietHoSoYeuCauBoSung.js":"37","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\thong-tin-duoc-si\\ThongTinDuocSi.js":"38","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\quan-ly-nguoi-dung\\QuanLyNguoiDung.js":"39","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\thong-tin-dao-tao\\ThongTinDaoTao.js":"40","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\thong-bao\\ThongBao.js":"41","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\i18n\\i18nProvider.tsx":"42","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\firebaseNotifications\\firebase.js":"43","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\errors\\PageNotFound.js":"44","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\firebaseNotifications\\Notification.js":"45","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\MasterLayout.tsx":"46","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\components\\LoadingIndicator.js":"47","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\MasterInit.tsx":"48","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\pages\\MenuTestPage.tsx":"49","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-muc\\DanhMucPage.js":"50","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\errors\\Accessdenied.js":"51","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\pages\\dashboard\\DashboardWrapper.tsx":"52","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\yeu-cau-lien-ket\\YeuCauLienKetPage.js":"53","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\doi-mat-khau\\DoiMatKhau.js":"54","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\nop-ho-so\\NopHoSoPage.js":"55","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\errors\\components\\Error404.tsx":"56","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\configs\\api.js":"57","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-muc\\hoi-dong\\HoiDong.js":"58","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\thong-tin-to-chuc\\ThongTinToChuc.js":"59","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\auth\\Logout.js":"60","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\core\\index.ts":"61","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\helpers\\index.ts":"62","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\auth\\AuthPage.tsx":"63","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\_utils\\index.ts":"64","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\redux-module\\locations\\service.js":"65","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\auth\\core\\AuthHelpers.ts":"66","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\auth\\core\\_models.ts":"67","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\auth\\core\\Auth.tsx":"68","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\redux-module\\noti\\service.js":"69","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-chung-chi\\ThongTinHanhChinh.js":"70","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-chung-chi\\ThongTinChungChiHanhNghieDuoc.js":"71","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\chung-chi-hanh-nghe\\danh-sach-lien-ket\\DanhSachLienKet.js":"72","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\components\\Status.js":"73","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\popup\\PopupThongTinHoSoDuocSi.js":"74","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\popup\\PopupBoSung.js":"75","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-thu-ly-duoc-si\\components\\ThongTinCapCCHN.js":"76","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\popup\\PopupDelete.js":"77","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-thu-ly-duoc-si\\components\\PhamViChuyenMon.js":"78","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-thu-ly-duoc-si\\components\\LyDoHeader.js":"79","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\popup\\PopupCancel.js":"80","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\popup\\PopupCapNhatYeuCauLienKetDS.js":"81","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\data\\index.js":"82","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\popup\\PopupSoQuyetDinh.js":"83","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\duoc-si\\bang-cap\\BangCap.js":"84","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\duoc-si\\lich-su-chung-chi\\LichSuChungChi.js":"85","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\duoc-si\\lich-su-thuc-hanh\\LichSuThucHanh.js":"86","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-thu-ly-duoc-si\\components\\DeNghi.js":"87","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\duoc-si\\lich-su-dao-tao\\LichSuDaoTao.js":"88","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\popup\\PopupQuanLyNguoiDung.js":"89","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-thu-ly-duoc-si\\components\\thong-tin-ca-nhan\\ThongTinCaNhan.js":"90","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-thu-ly-duoc-si\\components\\thong-tin-hanh-chinh\\ThongTinHanhChinhCapNhat.js":"91","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-thu-ly-duoc-si\\components\\thong-tin-ca-nhan\\ThongTinCaNhanCapNhat.js":"92","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-muc\\chung-nhan-thuc-hanh-co-so\\ChungNhanThucHanhCoSo.js":"93","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-muc\\noi-tot-nghiep\\NoiTotNghiep.js":"94","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-muc\\loai-hinh-kinh-doanh\\LoaiHinhKinhDoanh.js":"95","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\components\\Content.tsx":"96","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\components\\ScrollTop.tsx":"97","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\components\\toolbar\\Toolbar.tsx":"98","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\components\\header\\HeaderWrapper.tsx":"99","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\yeu-cau-lien-ket\\yeu-cau-lien-ket-duoc-si\\ChiTietYeuCauLienKetDuocSi.js":"100","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\nop-ho-so\\danh-sach-ho-so\\ThemHoSo.js":"101","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\index.ts":"102","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-muc\\hoat-dong-chuyen-mon\\HoatDongChuyenMon.js":"103","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-muc\\van-bang-chuyen-mon\\VanBangChuyenMon.js":"104","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-muc\\pham_vi_hoat_dong_kinh_doanh\\PhamViHoatDongKinhDoanh.js":"105","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-muc\\thanh-phan-ho-so\\ThanhPhanHoSo.js":"106","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-muc\\vi-tri-hanh-nghe\\ViTriHanhNghe.js":"107","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\nop-ho-so\\danh-sach-ho-so\\DanhSachHoSo.js":"108","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\yeu-cau-lien-ket\\yeu-cau-lien-ket-duoc-si\\YeuCauLienKetDuocSi.js":"109","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\yeu-cau-lien-ket\\yeu-cau-lien-ket-to-chuc\\YeuCauLienKetToChuc.js":"110","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-muc\\thu-tuc\\ThuTuc.js":"111","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\nop-ho-so\\danh-sach-ho-so\\CapNhatHoSo.js":"112","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\core\\LayoutProvider.tsx":"113","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\core\\LayoutSetup.ts":"114","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\core\\MetronicSplashScreen.tsx":"115","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\core\\LayoutModels.ts":"116","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\core\\DefaultLayoutConfig.ts":"117","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\core\\PageData.tsx":"118","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\helpers\\AssetHelpers.ts":"119","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\helpers\\dataExamples.ts":"120","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\helpers\\RouterHelpers.ts":"121","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\helpers\\crud-helper\\models.ts":"122","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\helpers\\crud-helper\\consts.ts":"123","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\helpers\\components\\KTSVG.tsx":"124","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\helpers\\components\\KTCard.tsx":"125","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\_utils\\_DataUtil.ts":"126","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\_utils\\DomHelpers.ts":"127","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\_utils\\_TypesHelpers.ts":"128","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\helpers\\components\\KTCardBody.tsx":"129","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\_utils\\ElementAnimateUtil.ts":"130","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\_utils\\_ElementStyleUtil.ts":"131","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\_utils\\_DOMEventHandlerUtil.ts":"132","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\helpers\\crud-helper\\helpers.tsx":"133","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\_utils\\EventHandlerUtil.ts":"134","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\_utils\\models\\OffsetModel.ts":"135","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\_utils\\models\\ViewPortModel.ts":"136","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\auth\\core\\_requests.ts":"137","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\components\\toolbar\\Toolbar1.tsx":"138","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\_CookieComponent.ts":"139","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\components\\header\\Topbar.tsx":"140","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\components\\header\\Header.tsx":"141","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\_DrawerComponent.ts":"142","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\_FeedbackComponent.ts":"143","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\_StepperComponent.ts":"144","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\_ImageInputComponent.ts":"145","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\_ScrollComponent.ts":"146","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\_StickyComponent.ts":"147","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\_ToggleComponent.ts":"148","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\_ScrollTopComponent.ts":"149","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\MenuComponent.ts":"150","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\_SwapperComponent.ts":"151","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\_PasswordMeterComponent.ts":"152","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\SearchComponent.ts":"153","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\components\\header\\page-title\\DefaultTitle.tsx":"154","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\components\\header\\MenuInner.tsx":"155","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\index.ts":"156","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\components\\header\\MenuItem.tsx":"157","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\components\\header\\MenuInnerWithSub.tsx":"158","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\layout\\MenuModal.tsx":"159","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\layout\\InboxCompose.tsx":"160","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\layout\\header-menus\\HeaderNotificationsMenu.tsx":"161","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\layout\\header-menus\\HeaderUserMenu.tsx":"162","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\layout\\sidebar-partials\\SidebarUser.tsx":"163","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\layout\\user-menu\\UserMenu.tsx":"164","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\content\\editor\\EditorToolbar.ts":"165","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\layout\\sidebar-partials\\SidebarGeneral.tsx":"166","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\content\\dropdown\\Dropdown2.tsx":"167","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\content\\portal\\Portal.tsx":"168","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\content\\dropdown\\Dropdown1.tsx":"169","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\content\\code-highlight\\CodeBlock.tsx":"170","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\content\\fallback-view\\FallbackView.tsx":"171","V:\\Projects\\Final_Project\\Frontend1\\src\\index.tsx":"172","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\redux-module\\store.js":"173","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\configs\\SetupAxios.js":"174","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\routing\\AppRoutes.tsx":"175","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\i18n\\Metronici18n.tsx":"176","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\redux-module\\rootReducer.js":"177","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\redux-module\\rootSaga.js":"178","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\App.tsx":"179","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\redux-module\\auth\\authSlice.js":"180","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\routing\\PrivateRoutes.tsx":"181","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\errors\\ErrorsPage.tsx":"182","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\auth\\Login.js":"183","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\auth\\components\\ForgotPassword.tsx":"184","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\auth\\index.ts":"185","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\redux-module\\auth\\authSaga.js":"186","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\redux-module\\common\\commonSlice.js":"187","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\redux-module\\locations\\locationSaga.js":"188","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\redux-module\\locations\\locationSlice.js":"189","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\i18n\\i18nProvider.tsx":"190","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\errors\\PageNotFound.js":"191","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\errors\\Accessdenied.js":"192","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\MasterInit.tsx":"193","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\configs\\api.js":"194","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\MasterLayout.tsx":"195","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\components\\LoadingIndicator.js":"196","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\errors\\components\\Error404.tsx":"197","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\core\\index.ts":"198","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\_utils\\index.ts":"199","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\auth\\core\\AuthHelpers.ts":"200","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\auth\\core\\_models.ts":"201","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\auth\\core\\Auth.tsx":"202","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\helpers\\index.ts":"203","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\components\\Status.js":"204","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\redux-module\\locations\\service.js":"205","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\data\\index.js":"206","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\components\\ScrollTop.tsx":"207","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\components\\Content.tsx":"208","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\components\\header\\HeaderWrapper.tsx":"209","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\components\\toolbar\\Toolbar.tsx":"210","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\helpers\\AssetHelpers.ts":"211","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\helpers\\RouterHelpers.ts":"212","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\helpers\\dataExamples.ts":"213","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\core\\DefaultLayoutConfig.ts":"214","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\core\\LayoutSetup.ts":"215","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\core\\LayoutModels.ts":"216","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\core\\LayoutProvider.tsx":"217","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\core\\MetronicSplashScreen.tsx":"218","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\core\\PageData.tsx":"219","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\helpers\\crud-helper\\consts.ts":"220","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\helpers\\crud-helper\\models.ts":"221","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\helpers\\crud-helper\\helpers.tsx":"222","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\_utils\\_TypesHelpers.ts":"223","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\index.ts":"224","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\_utils\\_DataUtil.ts":"225","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\_utils\\_DOMEventHandlerUtil.ts":"226","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\_utils\\_ElementStyleUtil.ts":"227","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\_utils\\ElementAnimateUtil.ts":"228","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\_utils\\DomHelpers.ts":"229","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\_utils\\EventHandlerUtil.ts":"230","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\helpers\\components\\KTSVG.tsx":"231","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\helpers\\components\\KTCardBody.tsx":"232","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\helpers\\components\\KTCard.tsx":"233","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\_utils\\models\\ViewPortModel.ts":"234","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\_utils\\models\\OffsetModel.ts":"235","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\auth\\core\\_requests.ts":"236","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\components\\header\\Topbar.tsx":"237","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\components\\header\\Header.tsx":"238","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\components\\toolbar\\Toolbar1.tsx":"239","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\components\\header\\page-title\\DefaultTitle.tsx":"240","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\_CookieComponent.ts":"241","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\_DrawerComponent.ts":"242","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\_ScrollTopComponent.ts":"243","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\_FeedbackComponent.ts":"244","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\_ImageInputComponent.ts":"245","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\_ScrollComponent.ts":"246","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\_StickyComponent.ts":"247","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\_StepperComponent.ts":"248","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\_SwapperComponent.ts":"249","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\_ToggleComponent.ts":"250","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\_PasswordMeterComponent.ts":"251","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\MenuComponent.ts":"252","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\SearchComponent.ts":"253","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\index.ts":"254","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\components\\header\\MenuInner.tsx":"255","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\layout\\MenuModal.tsx":"256","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\layout\\InboxCompose.tsx":"257","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\layout\\header-menus\\HeaderUserMenu.tsx":"258","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\layout\\header-menus\\HeaderNotificationsMenu.tsx":"259","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\components\\header\\MenuInnerWithSub.tsx":"260","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\layout\\sidebar-partials\\SidebarUser.tsx":"261","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\components\\header\\MenuItem.tsx":"262","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\layout\\sidebar-partials\\SidebarGeneral.tsx":"263","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\layout\\user-menu\\UserMenu.tsx":"264","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\content\\dropdown\\Dropdown1.tsx":"265","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\content\\editor\\EditorToolbar.ts":"266","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\content\\dropdown\\Dropdown2.tsx":"267","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\content\\fallback-view\\FallbackView.tsx":"268","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\content\\portal\\Portal.tsx":"269","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\content\\code-highlight\\CodeBlock.tsx":"270","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\auth\\Logout.js":"271","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\auth\\Register.js":"272","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\admin\\quan-ly-nguoi-dung\\QuanLyNguoiDung.js":"273","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\custom\\table.js":"274","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\admin\\quan-ly-lich-su\\QuanLyLichSu.js":"275","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\admin\\quan-ly-tin-tuc\\QuanLyTinTuc.js":"276","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\admin\\quan-ly-tin-tuc\\uploadAdapter.js":"277","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\user\\Homepage.js":"278","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\user\\Diagnostic.js":"279","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\user\\News.js":"280","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\user\\Info.js":"281","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\user\\BlogCreate.js":"282","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\user\\BlogList.js":"283"},{"size":905,"mtime":1660185986707,"results":"284","hashOfConfig":"285"},{"size":1351,"mtime":1662370313301,"results":"286","hashOfConfig":"285"},{"size":2611,"mtime":1660185986514,"results":"287","hashOfConfig":"285"},{"size":2576,"mtime":1664959325271,"results":"288","hashOfConfig":"285"},{"size":1018,"mtime":1660185985209,"results":"289","hashOfConfig":"285"},{"size":406,"mtime":1661496540962,"results":"290","hashOfConfig":"285"},{"size":271,"mtime":1661496496142,"results":"291","hashOfConfig":"285"},{"size":1418,"mtime":1660185986375,"results":"292","hashOfConfig":"285"},{"size":10163,"mtime":1662697429803,"results":"293","hashOfConfig":"285"},{"size":1729,"mtime":1664959325098,"results":"294","hashOfConfig":"285"},{"size":1072,"mtime":1660185986365,"results":"295","hashOfConfig":"285"},{"size":11745,"mtime":1663726571532,"results":"296","hashOfConfig":"285"},{"size":841,"mtime":1663730783481,"results":"297","hashOfConfig":"285"},{"size":1889,"mtime":1660185985539,"results":"298","hashOfConfig":"285"},{"size":13180,"mtime":1664959323918,"results":"299","hashOfConfig":"285"},{"size":156,"mtime":1660185985577,"results":"300","hashOfConfig":"285"},{"size":643,"mtime":1660185986375,"results":"301","hashOfConfig":"285"},{"size":882,"mtime":1660185986422,"results":"302","hashOfConfig":"285"},{"size":2354,"mtime":1661940653627,"results":"303","hashOfConfig":"285"},{"size":616,"mtime":1660185986421,"results":"304","hashOfConfig":"285"},{"size":2194,"mtime":1664780249833,"results":"305","hashOfConfig":"285"},{"size":2755,"mtime":1664954344662,"results":"306","hashOfConfig":"285"},{"size":955,"mtime":1660185985779,"results":"307","hashOfConfig":"285"},{"size":15626,"mtime":1662536020249,"results":"308","hashOfConfig":"285"},{"size":9374,"mtime":1665568374250,"results":"309","hashOfConfig":"285"},{"size":7289,"mtime":1661326251680,"results":"310","hashOfConfig":"285"},{"size":29995,"mtime":1665563750733,"results":"311","hashOfConfig":"285"},{"size":20418,"mtime":1664787259016,"results":"312","hashOfConfig":"285"},{"size":41475,"mtime":1664787258852,"results":"313","hashOfConfig":"285"},{"size":20156,"mtime":1664787258911,"results":"314","hashOfConfig":"285"},{"size":6985,"mtime":1664787257453,"results":"315","hashOfConfig":"285"},{"size":27792,"mtime":1664787258976,"results":"316","hashOfConfig":"285"},{"size":13092,"mtime":1665378508010,"results":"317","hashOfConfig":"285"},{"size":19250,"mtime":1664787259333,"results":"318","hashOfConfig":"285"},{"size":19727,"mtime":1664787259357,"results":"319","hashOfConfig":"285"},{"size":23446,"mtime":1665376724205,"results":"320","hashOfConfig":"285"},{"size":12549,"mtime":1665378713710,"results":"321","hashOfConfig":"285"},{"size":38237,"mtime":1665644770299,"results":"322","hashOfConfig":"285"},{"size":10093,"mtime":1665393055790,"results":"323","hashOfConfig":"285"},{"size":27458,"mtime":1664787259513,"results":"324","hashOfConfig":"285"},{"size":8823,"mtime":1665375479042,"results":"325","hashOfConfig":"285"},{"size":718,"mtime":1660185985209,"results":"326","hashOfConfig":"285"},{"size":1657,"mtime":1665376724107,"results":"327","hashOfConfig":"285"},{"size":1706,"mtime":1660185986366,"results":"328","hashOfConfig":"285"},{"size":1266,"mtime":1664959325366,"results":"329","hashOfConfig":"285"},{"size":1528,"mtime":1660206476744,"results":"330","hashOfConfig":"285"},{"size":339,"mtime":1660185986544,"results":"331","hashOfConfig":"285"},{"size":914,"mtime":1660185985081,"results":"332","hashOfConfig":"285"},{"size":55005,"mtime":1660185986691,"results":"333","hashOfConfig":"285"},{"size":4654,"mtime":1660185986218,"results":"334","hashOfConfig":"285"},{"size":2203,"mtime":1661417709867,"results":"335","hashOfConfig":"285"},{"size":7367,"mtime":1660533131431,"results":"336","hashOfConfig":"285"},{"size":1838,"mtime":1660185985907,"results":"337","hashOfConfig":"285"},{"size":8684,"mtime":1661913310353,"results":"338","hashOfConfig":"285"},{"size":1542,"mtime":1661419441223,"results":"339","hashOfConfig":"285"},{"size":356,"mtime":1660185986366,"results":"340","hashOfConfig":"285"},{"size":7395,"mtime":1664959325099,"results":"341","hashOfConfig":"285"},{"size":20328,"mtime":1664787258444,"results":"342","hashOfConfig":"285"},{"size":35539,"mtime":1664787258219,"results":"343","hashOfConfig":"285"},{"size":367,"mtime":1660185985576,"results":"344","hashOfConfig":"285"},{"size":204,"mtime":1660185985086,"results":"345","hashOfConfig":"285"},{"size":326,"mtime":1660185985202,"results":"346","hashOfConfig":"285"},{"size":2785,"mtime":1660185985578,"results":"347","hashOfConfig":"285"},{"size":353,"mtime":1660185984558,"results":"348","hashOfConfig":"285"},{"size":2131,"mtime":1661506307735,"results":"349","hashOfConfig":"285"},{"size":1572,"mtime":1660185985567,"results":"350","hashOfConfig":"285"},{"size":1770,"mtime":1660185985569,"results":"351","hashOfConfig":"285"},{"size":2895,"mtime":1660185985568,"results":"352","hashOfConfig":"285"},{"size":340,"mtime":1664959325185,"results":"353","hashOfConfig":"285"},{"size":31149,"mtime":1665644956163,"results":"354","hashOfConfig":"285"},{"size":27094,"mtime":1664787257439,"results":"355","hashOfConfig":"285"},{"size":2154,"mtime":1660185985780,"results":"356","hashOfConfig":"285"},{"size":393,"mtime":1660185986545,"results":"357","hashOfConfig":"285"},{"size":9670,"mtime":1661417709320,"results":"358","hashOfConfig":"285"},{"size":5268,"mtime":1661417709301,"results":"359","hashOfConfig":"285"},{"size":17848,"mtime":1665631677765,"results":"360","hashOfConfig":"285"},{"size":1286,"mtime":1661417709318,"results":"361","hashOfConfig":"285"},{"size":5927,"mtime":1665396279803,"results":"362","hashOfConfig":"285"},{"size":2529,"mtime":1663214393300,"results":"363","hashOfConfig":"285"},{"size":7366,"mtime":1664875899765,"results":"364","hashOfConfig":"285"},{"size":35302,"mtime":1664787258056,"results":"365","hashOfConfig":"285"},{"size":3117,"mtime":1664522762678,"results":"366","hashOfConfig":"285"},{"size":6876,"mtime":1665644758341,"results":"367","hashOfConfig":"285"},{"size":31482,"mtime":1665632320556,"results":"368","hashOfConfig":"285"},{"size":5746,"mtime":1664787259149,"results":"369","hashOfConfig":"285"},{"size":41003,"mtime":1665645127286,"results":"370","hashOfConfig":"285"},{"size":2397,"mtime":1664870541125,"results":"371","hashOfConfig":"285"},{"size":25667,"mtime":1665632251289,"results":"372","hashOfConfig":"285"},{"size":12317,"mtime":1664787258060,"results":"373","hashOfConfig":"285"},{"size":6053,"mtime":1664787257650,"results":"374","hashOfConfig":"285"},{"size":20145,"mtime":1664531691920,"results":"375","hashOfConfig":"285"},{"size":29157,"mtime":1665632042795,"results":"376","hashOfConfig":"285"},{"size":37644,"mtime":1664787258353,"results":"377","hashOfConfig":"285"},{"size":17986,"mtime":1664787258561,"results":"378","hashOfConfig":"285"},{"size":18727,"mtime":1664787258493,"results":"379","hashOfConfig":"285"},{"size":548,"mtime":1660185985047,"results":"380","hashOfConfig":"285"},{"size":1437,"mtime":1660185985048,"results":"381","hashOfConfig":"285"},{"size":334,"mtime":1660185985039,"results":"382","hashOfConfig":"285"},{"size":7473,"mtime":1660275716288,"results":"383","hashOfConfig":"285"},{"size":21967,"mtime":1661417709846,"results":"384","hashOfConfig":"285"},{"size":17613,"mtime":1662372970719,"results":"385","hashOfConfig":"285"},{"size":522,"mtime":1660185984829,"results":"386","hashOfConfig":"285"},{"size":19263,"mtime":1664787258400,"results":"387","hashOfConfig":"285"},{"size":17811,"mtime":1664787258745,"results":"388","hashOfConfig":"285"},{"size":23413,"mtime":1664787258625,"results":"389","hashOfConfig":"285"},{"size":22458,"mtime":1664787258674,"results":"390","hashOfConfig":"285"},{"size":19938,"mtime":1664787258801,"results":"391","hashOfConfig":"285"},{"size":8039,"mtime":1664787257864,"results":"392","hashOfConfig":"285"},{"size":11930,"mtime":1665644825173,"results":"393","hashOfConfig":"285"},{"size":13738,"mtime":1664787259761,"results":"394","hashOfConfig":"285"},{"size":25980,"mtime":1664787258713,"results":"395","hashOfConfig":"285"},{"size":108513,"mtime":1665632788752,"results":"396","hashOfConfig":"285"},{"size":2457,"mtime":1660185985083,"results":"397","hashOfConfig":"285"},{"size":8767,"mtime":1660185985082,"results":"398","hashOfConfig":"285"},{"size":1672,"mtime":1660185985084,"results":"399","hashOfConfig":"285"},{"size":3617,"mtime":1660185985083,"results":"400","hashOfConfig":"285"},{"size":2174,"mtime":1660185985082,"results":"401","hashOfConfig":"285"},{"size":2476,"mtime":1660185985084,"results":"402","hashOfConfig":"285"},{"size":86,"mtime":1660185985097,"results":"403","hashOfConfig":"285"},{"size":7226,"mtime":1660185985201,"results":"404","hashOfConfig":"285"},{"size":380,"mtime":1660185985098,"results":"405","hashOfConfig":"285"},{"size":1951,"mtime":1660185985198,"results":"406","hashOfConfig":"285"},{"size":71,"mtime":1660185985197,"results":"407","hashOfConfig":"285"},{"size":446,"mtime":1660185985099,"results":"408","hashOfConfig":"285"},{"size":1876,"mtime":1660185985098,"results":"409","hashOfConfig":"285"},{"size":1368,"mtime":1660185984556,"results":"410","hashOfConfig":"285"},{"size":13645,"mtime":1660185984554,"results":"411","hashOfConfig":"285"},{"size":1356,"mtime":1660185984557,"results":"412","hashOfConfig":"285"},{"size":505,"mtime":1660185985099,"results":"413","hashOfConfig":"285"},{"size":3260,"mtime":1660185984555,"results":"414","hashOfConfig":"285"},{"size":552,"mtime":1660185984557,"results":"415","hashOfConfig":"285"},{"size":1827,"mtime":1660185984556,"results":"416","hashOfConfig":"285"},{"size":4402,"mtime":1664781495120,"results":"417","hashOfConfig":"285"},{"size":3490,"mtime":1660185984555,"results":"418","hashOfConfig":"285"},{"size":66,"mtime":1660185984558,"results":"419","hashOfConfig":"285"},{"size":72,"mtime":1660185984559,"results":"420","hashOfConfig":"285"},{"size":1245,"mtime":1660185985569,"results":"421","hashOfConfig":"285"},{"size":659,"mtime":1660185985039,"results":"422","hashOfConfig":"285"},{"size":1794,"mtime":1660185984823,"results":"423","hashOfConfig":"285"},{"size":2977,"mtime":1660185985026,"results":"424","hashOfConfig":"285"},{"size":1050,"mtime":1660185985029,"results":"425","hashOfConfig":"285"},{"size":10780,"mtime":1660185984823,"results":"426","hashOfConfig":"285"},{"size":3816,"mtime":1660185984823,"results":"427","hashOfConfig":"285"},{"size":9004,"mtime":1660185984827,"results":"428","hashOfConfig":"285"},{"size":7156,"mtime":1660185984825,"results":"429","hashOfConfig":"285"},{"size":8916,"mtime":1660185984826,"results":"430","hashOfConfig":"285"},{"size":8478,"mtime":1660185984827,"results":"431","hashOfConfig":"285"},{"size":5178,"mtime":1660185984828,"results":"432","hashOfConfig":"285"},{"size":3912,"mtime":1660185984826,"results":"433","hashOfConfig":"285"},{"size":29574,"mtime":1660185984821,"results":"434","hashOfConfig":"285"},{"size":5769,"mtime":1660185984828,"results":"435","hashOfConfig":"285"},{"size":7528,"mtime":1660185984825,"results":"436","hashOfConfig":"285"},{"size":12789,"mtime":1660185984821,"results":"437","hashOfConfig":"285"},{"size":2460,"mtime":1660185985030,"results":"438","hashOfConfig":"285"},{"size":8238,"mtime":1660275660753,"results":"439","hashOfConfig":"285"},{"size":728,"mtime":1660185980960,"results":"440","hashOfConfig":"285"},{"size":1893,"mtime":1660185985028,"results":"441","hashOfConfig":"285"},{"size":2733,"mtime":1660185985028,"results":"442","hashOfConfig":"285"},{"size":7160,"mtime":1660185980615,"results":"443","hashOfConfig":"285"},{"size":8531,"mtime":1660185980615,"results":"444","hashOfConfig":"285"},{"size":5476,"mtime":1660185980540,"results":"445","hashOfConfig":"285"},{"size":6683,"mtime":1665568017469,"results":"446","hashOfConfig":"285"},{"size":11552,"mtime":1660185980627,"results":"447","hashOfConfig":"285"},{"size":105,"mtime":1660185980635,"results":"448","hashOfConfig":"285"},{"size":1488,"mtime":1660185980920,"results":"449","hashOfConfig":"285"},{"size":51383,"mtime":1660185980626,"results":"450","hashOfConfig":"285"},{"size":2203,"mtime":1660185980916,"results":"451","hashOfConfig":"285"},{"size":751,"mtime":1660185980926,"results":"452","hashOfConfig":"285"},{"size":2954,"mtime":1660185980916,"results":"453","hashOfConfig":"285"},{"size":2284,"mtime":1660185980872,"results":"454","hashOfConfig":"285"},{"size":270,"mtime":1660185980923,"results":"455","hashOfConfig":"285"},{"size":905,"mtime":1660185986707,"results":"456","hashOfConfig":"457"},{"size":1351,"mtime":1662370313301,"results":"458","hashOfConfig":"457"},{"size":2611,"mtime":1660185986514,"results":"459","hashOfConfig":"457"},{"size":3162,"mtime":1668901362809,"results":"460","hashOfConfig":"457"},{"size":1018,"mtime":1660185985209,"results":"461","hashOfConfig":"457"},{"size":341,"mtime":1667203026247,"results":"462","hashOfConfig":"457"},{"size":219,"mtime":1667203039665,"results":"463","hashOfConfig":"457"},{"size":681,"mtime":1667202972749,"results":"464","hashOfConfig":"457"},{"size":1421,"mtime":1667211193199,"results":"465","hashOfConfig":"457"},{"size":2192,"mtime":1668000370530,"results":"466","hashOfConfig":"457"},{"size":956,"mtime":1667203155873,"results":"467","hashOfConfig":"457"},{"size":9009,"mtime":1668314225697,"results":"468","hashOfConfig":"457"},{"size":1889,"mtime":1660185985539,"results":"469","hashOfConfig":"457"},{"size":127,"mtime":1667204937335,"results":"470","hashOfConfig":"457"},{"size":643,"mtime":1660185986375,"results":"471","hashOfConfig":"457"},{"size":2755,"mtime":1664954344662,"results":"472","hashOfConfig":"457"},{"size":2354,"mtime":1661940653627,"results":"473","hashOfConfig":"457"},{"size":2194,"mtime":1668888591551,"results":"474","hashOfConfig":"457"},{"size":718,"mtime":1660185985209,"results":"475","hashOfConfig":"457"},{"size":1678,"mtime":1667203148834,"results":"476","hashOfConfig":"457"},{"size":1968,"mtime":1667203164706,"results":"477","hashOfConfig":"457"},{"size":914,"mtime":1660185985081,"results":"478","hashOfConfig":"457"},{"size":1803,"mtime":1668891722969,"results":"479","hashOfConfig":"457"},{"size":5873,"mtime":1668960870086,"results":"480","hashOfConfig":"457"},{"size":339,"mtime":1660185986544,"results":"481","hashOfConfig":"457"},{"size":356,"mtime":1660185986366,"results":"482","hashOfConfig":"457"},{"size":204,"mtime":1660185985086,"results":"483","hashOfConfig":"457"},{"size":353,"mtime":1660185984558,"results":"484","hashOfConfig":"457"},{"size":1572,"mtime":1660185985567,"results":"485","hashOfConfig":"457"},{"size":1770,"mtime":1660185985569,"results":"486","hashOfConfig":"457"},{"size":2895,"mtime":1660185985568,"results":"487","hashOfConfig":"457"},{"size":326,"mtime":1660185985202,"results":"488","hashOfConfig":"457"},{"size":393,"mtime":1660185986545,"results":"489","hashOfConfig":"457"},{"size":2537,"mtime":1668890721337,"results":"490","hashOfConfig":"457"},{"size":479,"mtime":1668892360331,"results":"491","hashOfConfig":"457"},{"size":1437,"mtime":1660185985048,"results":"492","hashOfConfig":"457"},{"size":548,"mtime":1660185985047,"results":"493","hashOfConfig":"457"},{"size":7473,"mtime":1660275716288,"results":"494","hashOfConfig":"457"},{"size":334,"mtime":1660185985039,"results":"495","hashOfConfig":"457"},{"size":86,"mtime":1660185985097,"results":"496","hashOfConfig":"457"},{"size":380,"mtime":1660185985098,"results":"497","hashOfConfig":"457"},{"size":7226,"mtime":1660185985201,"results":"498","hashOfConfig":"457"},{"size":2174,"mtime":1660185985082,"results":"499","hashOfConfig":"457"},{"size":8767,"mtime":1660185985082,"results":"500","hashOfConfig":"457"},{"size":3617,"mtime":1660185985083,"results":"501","hashOfConfig":"457"},{"size":2457,"mtime":1660185985083,"results":"502","hashOfConfig":"457"},{"size":1672,"mtime":1660185985084,"results":"503","hashOfConfig":"457"},{"size":2476,"mtime":1660185985084,"results":"504","hashOfConfig":"457"},{"size":71,"mtime":1660185985197,"results":"505","hashOfConfig":"457"},{"size":1951,"mtime":1660185985198,"results":"506","hashOfConfig":"457"},{"size":4393,"mtime":1668449507003,"results":"507","hashOfConfig":"457"},{"size":1356,"mtime":1660185984557,"results":"508","hashOfConfig":"457"},{"size":522,"mtime":1660185984829,"results":"509","hashOfConfig":"457"},{"size":1368,"mtime":1660185984556,"results":"510","hashOfConfig":"457"},{"size":1827,"mtime":1660185984556,"results":"511","hashOfConfig":"457"},{"size":552,"mtime":1660185984557,"results":"512","hashOfConfig":"457"},{"size":3260,"mtime":1660185984555,"results":"513","hashOfConfig":"457"},{"size":13645,"mtime":1660185984554,"results":"514","hashOfConfig":"457"},{"size":3490,"mtime":1660185984555,"results":"515","hashOfConfig":"457"},{"size":446,"mtime":1660185985099,"results":"516","hashOfConfig":"457"},{"size":505,"mtime":1660185985099,"results":"517","hashOfConfig":"457"},{"size":1876,"mtime":1660185985098,"results":"518","hashOfConfig":"457"},{"size":72,"mtime":1660185984559,"results":"519","hashOfConfig":"457"},{"size":66,"mtime":1660185984558,"results":"520","hashOfConfig":"457"},{"size":1245,"mtime":1660185985569,"results":"521","hashOfConfig":"457"},{"size":2977,"mtime":1660185985026,"results":"522","hashOfConfig":"457"},{"size":1050,"mtime":1660185985029,"results":"523","hashOfConfig":"457"},{"size":659,"mtime":1660185985039,"results":"524","hashOfConfig":"457"},{"size":2460,"mtime":1660185985030,"results":"525","hashOfConfig":"457"},{"size":1794,"mtime":1660185984823,"results":"526","hashOfConfig":"457"},{"size":10780,"mtime":1660185984823,"results":"527","hashOfConfig":"457"},{"size":3912,"mtime":1660185984826,"results":"528","hashOfConfig":"457"},{"size":3816,"mtime":1660185984823,"results":"529","hashOfConfig":"457"},{"size":7156,"mtime":1660185984825,"results":"530","hashOfConfig":"457"},{"size":8916,"mtime":1660185984826,"results":"531","hashOfConfig":"457"},{"size":8478,"mtime":1660185984827,"results":"532","hashOfConfig":"457"},{"size":9004,"mtime":1660185984827,"results":"533","hashOfConfig":"457"},{"size":5769,"mtime":1660185984828,"results":"534","hashOfConfig":"457"},{"size":5178,"mtime":1660185984828,"results":"535","hashOfConfig":"457"},{"size":7528,"mtime":1660185984825,"results":"536","hashOfConfig":"457"},{"size":29574,"mtime":1660185984821,"results":"537","hashOfConfig":"457"},{"size":12789,"mtime":1660185984821,"results":"538","hashOfConfig":"457"},{"size":728,"mtime":1660185980960,"results":"539","hashOfConfig":"457"},{"size":7934,"mtime":1667203130008,"results":"540","hashOfConfig":"457"},{"size":7160,"mtime":1660185980615,"results":"541","hashOfConfig":"457"},{"size":8531,"mtime":1660185980615,"results":"542","hashOfConfig":"457"},{"size":6103,"mtime":1667205525146,"results":"543","hashOfConfig":"457"},{"size":5476,"mtime":1660185980540,"results":"544","hashOfConfig":"457"},{"size":2733,"mtime":1660185985028,"results":"545","hashOfConfig":"457"},{"size":11552,"mtime":1660185980627,"results":"546","hashOfConfig":"457"},{"size":1893,"mtime":1660185985028,"results":"547","hashOfConfig":"457"},{"size":51383,"mtime":1660185980626,"results":"548","hashOfConfig":"457"},{"size":105,"mtime":1660185980635,"results":"549","hashOfConfig":"457"},{"size":2954,"mtime":1660185980916,"results":"550","hashOfConfig":"457"},{"size":1488,"mtime":1660185980920,"results":"551","hashOfConfig":"457"},{"size":2203,"mtime":1660185980916,"results":"552","hashOfConfig":"457"},{"size":270,"mtime":1660185980923,"results":"553","hashOfConfig":"457"},{"size":751,"mtime":1660185980926,"results":"554","hashOfConfig":"457"},{"size":2284,"mtime":1660185980872,"results":"555","hashOfConfig":"457"},{"size":367,"mtime":1667204903293,"results":"556","hashOfConfig":"457"},{"size":16325,"mtime":1668314238328,"results":"557","hashOfConfig":"457"},{"size":22587,"mtime":1668013936962,"results":"558","hashOfConfig":"457"},{"size":1027,"mtime":1667211700110,"results":"559","hashOfConfig":"457"},{"size":6096,"mtime":1667637847422,"results":"560","hashOfConfig":"457"},{"size":10601,"mtime":1668000950742,"results":"561","hashOfConfig":"457"},{"size":1738,"mtime":1668963685341,"results":"562","hashOfConfig":"457"},{"size":3002,"mtime":1668358519992,"results":"563","hashOfConfig":"457"},{"size":18466,"mtime":1668448920565,"results":"564","hashOfConfig":"457"},{"size":3040,"mtime":1668352471252,"results":"565","hashOfConfig":"457"},{"size":38118,"mtime":1668896951837,"results":"566","hashOfConfig":"457"},{"size":1855,"mtime":1668963534079,"results":"567","hashOfConfig":"457"},{"size":89,"mtime":1668901358617,"results":"568","hashOfConfig":"457"},{"filePath":"569","messages":"570","suppressedMessages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},"2mfhjg",{"filePath":"573","messages":"574","suppressedMessages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"577","messages":"578","suppressedMessages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580","usedDeprecatedRules":"576"},{"filePath":"581","messages":"582","suppressedMessages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584","usedDeprecatedRules":"572"},{"filePath":"585","messages":"586","suppressedMessages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"588","messages":"589","suppressedMessages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"591","messages":"592","suppressedMessages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"594","messages":"595","suppressedMessages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"597","messages":"598","suppressedMessages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"600","messages":"601","suppressedMessages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603","usedDeprecatedRules":"572"},{"filePath":"604","messages":"605","suppressedMessages":"606","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"607","usedDeprecatedRules":"572"},{"filePath":"608","messages":"609","suppressedMessages":"610","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"611","usedDeprecatedRules":"576"},{"filePath":"612","messages":"613","suppressedMessages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"615","messages":"616","suppressedMessages":"617","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"618","messages":"619","suppressedMessages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"621","usedDeprecatedRules":"576"},{"filePath":"622","messages":"623","suppressedMessages":"624","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"625","messages":"626","suppressedMessages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"628","usedDeprecatedRules":"576"},{"filePath":"629","messages":"630","suppressedMessages":"631","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"632","messages":"633","suppressedMessages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"635","messages":"636","suppressedMessages":"637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"638","messages":"639","suppressedMessages":"640","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"641","messages":"642","suppressedMessages":"643","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"644","messages":"645","suppressedMessages":"646","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"647","messages":"648","suppressedMessages":"649","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"650","usedDeprecatedRules":"576"},{"filePath":"651","messages":"652","suppressedMessages":"653","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"654","messages":"655","suppressedMessages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"657","usedDeprecatedRules":"576"},{"filePath":"658","messages":"659","suppressedMessages":"660","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"661","usedDeprecatedRules":"576"},{"filePath":"662","messages":"663","suppressedMessages":"664","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"665","usedDeprecatedRules":"576"},{"filePath":"666","messages":"667","suppressedMessages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"669","usedDeprecatedRules":"576"},{"filePath":"670","messages":"671","suppressedMessages":"672","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"673","usedDeprecatedRules":"576"},{"filePath":"674","messages":"675","suppressedMessages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677","usedDeprecatedRules":"576"},{"filePath":"678","messages":"679","suppressedMessages":"680","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"681","usedDeprecatedRules":"576"},{"filePath":"682","messages":"683","suppressedMessages":"684","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"685","usedDeprecatedRules":"576"},{"filePath":"686","messages":"687","suppressedMessages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"689","usedDeprecatedRules":"576"},{"filePath":"690","messages":"691","suppressedMessages":"692","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"693","usedDeprecatedRules":"576"},{"filePath":"694","messages":"695","suppressedMessages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"697","usedDeprecatedRules":"576"},{"filePath":"698","messages":"699","suppressedMessages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"701","messages":"702","suppressedMessages":"703","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"704","messages":"705","suppressedMessages":"706","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"707","usedDeprecatedRules":"576"},{"filePath":"708","messages":"709","suppressedMessages":"710","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"711","usedDeprecatedRules":"576"},{"filePath":"712","messages":"713","suppressedMessages":"714","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"715","usedDeprecatedRules":"576"},{"filePath":"716","messages":"717","suppressedMessages":"718","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"719","messages":"720","suppressedMessages":"721","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"722","messages":"723","suppressedMessages":"724","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"725","messages":"726","suppressedMessages":"727","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"728","usedDeprecatedRules":"576"},{"filePath":"729","messages":"730","suppressedMessages":"731","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"732","messages":"733","suppressedMessages":"734","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"735","usedDeprecatedRules":"576"},{"filePath":"736","messages":"737","suppressedMessages":"738","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"739","messages":"740","suppressedMessages":"741","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"742","messages":"743","suppressedMessages":"744","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"745","messages":"746","suppressedMessages":"747","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"748","messages":"749","suppressedMessages":"750","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"751","messages":"752","suppressedMessages":"753","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"754","messages":"755","suppressedMessages":"756","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"757","usedDeprecatedRules":"576"},{"filePath":"758","messages":"759","suppressedMessages":"760","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"761","messages":"762","suppressedMessages":"763","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"764","messages":"765","suppressedMessages":"766","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"767","messages":"768","suppressedMessages":"769","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"770","usedDeprecatedRules":"576"},{"filePath":"771","messages":"772","suppressedMessages":"773","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"774","usedDeprecatedRules":"576"},{"filePath":"775","messages":"776","suppressedMessages":"777","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"778","messages":"779","suppressedMessages":"780","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"781","messages":"782","suppressedMessages":"783","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"784","messages":"785","suppressedMessages":"786","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"787","messages":"788","suppressedMessages":"789","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"790","messages":"791","suppressedMessages":"792","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"793","messages":"794","suppressedMessages":"795","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"796","messages":"797","suppressedMessages":"798","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"799","messages":"800","suppressedMessages":"801","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"802","messages":"803","suppressedMessages":"804","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"805","messages":"806","suppressedMessages":"807","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"808","messages":"809","suppressedMessages":"810","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"811","usedDeprecatedRules":"576"},{"filePath":"812","messages":"813","suppressedMessages":"814","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"815","usedDeprecatedRules":"576"},{"filePath":"816","messages":"817","suppressedMessages":"818","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"819","messages":"820","suppressedMessages":"821","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"822","usedDeprecatedRules":"576"},{"filePath":"823","messages":"824","suppressedMessages":"825","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"826","usedDeprecatedRules":"576"},{"filePath":"827","messages":"828","suppressedMessages":"829","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"830","messages":"831","suppressedMessages":"832","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"833","messages":"834","suppressedMessages":"835","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"836","usedDeprecatedRules":"576"},{"filePath":"837","messages":"838","suppressedMessages":"839","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"840","usedDeprecatedRules":"576"},{"filePath":"841","messages":"842","suppressedMessages":"843","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"844","usedDeprecatedRules":"576"},{"filePath":"845","messages":"846","suppressedMessages":"847","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"848","usedDeprecatedRules":"576"},{"filePath":"849","messages":"850","suppressedMessages":"851","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"852","messages":"853","suppressedMessages":"854","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"855","messages":"856","suppressedMessages":"857","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"858","messages":"859","suppressedMessages":"860","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"861","usedDeprecatedRules":"576"},{"filePath":"862","messages":"863","suppressedMessages":"864","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"865","messages":"866","suppressedMessages":"867","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"868","usedDeprecatedRules":"576"},{"filePath":"869","messages":"870","suppressedMessages":"871","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"872","messages":"873","suppressedMessages":"874","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"875","usedDeprecatedRules":"576"},{"filePath":"876","messages":"877","suppressedMessages":"878","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"879","usedDeprecatedRules":"576"},{"filePath":"880","messages":"881","suppressedMessages":"882","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"883","usedDeprecatedRules":"576"},{"filePath":"884","messages":"885","suppressedMessages":"886","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"887","messages":"888","suppressedMessages":"889","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"890","usedDeprecatedRules":"576"},{"filePath":"891","messages":"892","suppressedMessages":"893","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"894","usedDeprecatedRules":"576"},{"filePath":"895","messages":"896","suppressedMessages":"897","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"898","usedDeprecatedRules":"576"},{"filePath":"899","messages":"900","suppressedMessages":"901","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"902","messages":"903","suppressedMessages":"904","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"905","messages":"906","suppressedMessages":"907","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"908","messages":"909","suppressedMessages":"910","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"911","messages":"912","suppressedMessages":"913","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"914","usedDeprecatedRules":"576"},{"filePath":"915","messages":"916","suppressedMessages":"917","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"918","usedDeprecatedRules":"576"},{"filePath":"919","messages":"920","suppressedMessages":"921","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"922","messages":"923","suppressedMessages":"924","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"925","usedDeprecatedRules":"576"},{"filePath":"926","messages":"927","suppressedMessages":"928","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"929","usedDeprecatedRules":"576"},{"filePath":"930","messages":"931","suppressedMessages":"932","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"933","usedDeprecatedRules":"576"},{"filePath":"934","messages":"935","suppressedMessages":"936","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"937","usedDeprecatedRules":"576"},{"filePath":"938","messages":"939","suppressedMessages":"940","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"941","usedDeprecatedRules":"576"},{"filePath":"942","messages":"943","suppressedMessages":"944","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"945","usedDeprecatedRules":"576"},{"filePath":"946","messages":"947","suppressedMessages":"948","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"949","messages":"950","suppressedMessages":"951","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"952","usedDeprecatedRules":"576"},{"filePath":"953","messages":"954","suppressedMessages":"955","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"956","usedDeprecatedRules":"576"},{"filePath":"957","messages":"958","suppressedMessages":"959","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"960","messages":"961","suppressedMessages":"962","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"963","messages":"964","suppressedMessages":"965","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"966","messages":"967","suppressedMessages":"968","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"969","messages":"970","suppressedMessages":"971","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"972","messages":"973","suppressedMessages":"974","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"975","messages":"976","suppressedMessages":"977","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"978","messages":"979","suppressedMessages":"980","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"981","messages":"982","suppressedMessages":"983","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"984","messages":"985","suppressedMessages":"986","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"987","messages":"988","suppressedMessages":"989","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"990","messages":"991","suppressedMessages":"992","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"993","messages":"994","suppressedMessages":"995","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"996","messages":"997","suppressedMessages":"998","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"999","messages":"1000","suppressedMessages":"1001","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1002","messages":"1003","suppressedMessages":"1004","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1005","messages":"1006","suppressedMessages":"1007","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1008","messages":"1009","suppressedMessages":"1010","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1011","messages":"1012","suppressedMessages":"1013","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1014","messages":"1015","suppressedMessages":"1016","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1017","messages":"1018","suppressedMessages":"1019","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1020","messages":"1021","suppressedMessages":"1022","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1023","messages":"1024","suppressedMessages":"1025","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1026","messages":"1027","suppressedMessages":"1028","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1029","messages":"1030","suppressedMessages":"1031","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1032","messages":"1033","suppressedMessages":"1034","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1035","messages":"1036","suppressedMessages":"1037","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1038","messages":"1039","suppressedMessages":"1040","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1041","messages":"1042","suppressedMessages":"1043","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1044","usedDeprecatedRules":"572"},{"filePath":"1045","messages":"1046","suppressedMessages":"1047","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1048","messages":"1049","suppressedMessages":"1050","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1051","messages":"1052","suppressedMessages":"1053","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1054","messages":"1055","suppressedMessages":"1056","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1057","messages":"1058","suppressedMessages":"1059","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1060","messages":"1061","suppressedMessages":"1062","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1063","messages":"1064","suppressedMessages":"1065","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1066","messages":"1067","suppressedMessages":"1068","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1069","messages":"1070","suppressedMessages":"1071","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1072","messages":"1073","suppressedMessages":"1074","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1075","messages":"1076","suppressedMessages":"1077","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1078","messages":"1079","suppressedMessages":"1080","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1081","messages":"1082","suppressedMessages":"1083","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1084","messages":"1085","suppressedMessages":"1086","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1087","messages":"1088","suppressedMessages":"1089","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1090","usedDeprecatedRules":"572"},{"filePath":"1091","messages":"1092","suppressedMessages":"1093","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1094","messages":"1095","suppressedMessages":"1096","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1097","messages":"1098","suppressedMessages":"1099","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1100","messages":"1101","suppressedMessages":"1102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1103","messages":"1104","suppressedMessages":"1105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1106","messages":"1107","suppressedMessages":"1108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1109","messages":"1110","suppressedMessages":"1111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1112","messages":"1113","suppressedMessages":"1114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1115","messages":"1116","suppressedMessages":"1117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1118","messages":"1119","suppressedMessages":"1120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1121","messages":"1122","suppressedMessages":"1123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1124","messages":"1125","suppressedMessages":"1126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1127","messages":"1128","suppressedMessages":"1129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1130","messages":"1131","suppressedMessages":"1132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1133","messages":"1134","suppressedMessages":"1135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1136","messages":"1137","suppressedMessages":"1138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"1139","messages":"1140","suppressedMessages":"1141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},"1hy9s4q",{"filePath":"1143","messages":"1144","suppressedMessages":"1145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1146"},{"filePath":"1147","messages":"1148","suppressedMessages":"1149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580","usedDeprecatedRules":"1146"},{"filePath":"1150","messages":"1151","suppressedMessages":"1152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1153","messages":"1154","suppressedMessages":"1155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1156","messages":"1157","suppressedMessages":"1158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1146"},{"filePath":"1159","messages":"1160","suppressedMessages":"1161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1146"},{"filePath":"1162","messages":"1163","suppressedMessages":"1164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1165","messages":"1166","suppressedMessages":"1167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1146"},{"filePath":"1168","messages":"1169","suppressedMessages":"1170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1171","usedDeprecatedRules":"1142"},{"filePath":"1172","messages":"1173","suppressedMessages":"1174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1175","messages":"1176","suppressedMessages":"1177","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1178","usedDeprecatedRules":"1146"},{"filePath":"1179","messages":"1180","suppressedMessages":"1181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1182","messages":"1183","suppressedMessages":"1184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1185","messages":"1186","suppressedMessages":"1187","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"628","usedDeprecatedRules":"1146"},{"filePath":"1188","messages":"1189","suppressedMessages":"1190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1146"},{"filePath":"1191","messages":"1192","suppressedMessages":"1193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1146"},{"filePath":"1194","messages":"1195","suppressedMessages":"1196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1146"},{"filePath":"1197","messages":"1198","suppressedMessages":"1199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1200","messages":"1201","suppressedMessages":"1202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1146"},{"filePath":"1203","messages":"1204","suppressedMessages":"1205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1146"},{"filePath":"1206","messages":"1207","suppressedMessages":"1208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1209","messages":"1210","suppressedMessages":"1211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1212","messages":"1213","suppressedMessages":"1214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1215","messages":"1216","suppressedMessages":"1217","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1218","messages":"1219","suppressedMessages":"1220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1221","messages":"1222","suppressedMessages":"1223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1224","messages":"1225","suppressedMessages":"1226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1227","messages":"1228","suppressedMessages":"1229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1230","messages":"1231","suppressedMessages":"1232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1233","messages":"1234","suppressedMessages":"1235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1236","messages":"1237","suppressedMessages":"1238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1239","messages":"1240","suppressedMessages":"1241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1242","messages":"1243","suppressedMessages":"1244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1146"},{"filePath":"1245","messages":"1246","suppressedMessages":"1247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1248","messages":"1249","suppressedMessages":"1250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1251","messages":"1252","suppressedMessages":"1253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1254","messages":"1255","suppressedMessages":"1256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1257","messages":"1258","suppressedMessages":"1259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1260","messages":"1261","suppressedMessages":"1262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1263","messages":"1264","suppressedMessages":"1265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1266","messages":"1267","suppressedMessages":"1268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1269","messages":"1270","suppressedMessages":"1271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1272","messages":"1273","suppressedMessages":"1274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1275","messages":"1276","suppressedMessages":"1277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1278","messages":"1279","suppressedMessages":"1280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1281","messages":"1282","suppressedMessages":"1283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1284","messages":"1285","suppressedMessages":"1286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1287","messages":"1288","suppressedMessages":"1289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1290","messages":"1291","suppressedMessages":"1292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1293","messages":"1294","suppressedMessages":"1295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1296","messages":"1297","suppressedMessages":"1298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1299","messages":"1300","suppressedMessages":"1301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1302","messages":"1303","suppressedMessages":"1304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1305","messages":"1306","suppressedMessages":"1307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1308","messages":"1309","suppressedMessages":"1310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1311","messages":"1312","suppressedMessages":"1313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1314","messages":"1315","suppressedMessages":"1316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1317","messages":"1318","suppressedMessages":"1319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1320","messages":"1321","suppressedMessages":"1322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1323","messages":"1324","suppressedMessages":"1325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1326","messages":"1327","suppressedMessages":"1328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1329","messages":"1330","suppressedMessages":"1331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1332","messages":"1333","suppressedMessages":"1334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1335","messages":"1336","suppressedMessages":"1337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1338","messages":"1339","suppressedMessages":"1340","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1044"},{"filePath":"1341","messages":"1342","suppressedMessages":"1343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1344","messages":"1345","suppressedMessages":"1346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1347","messages":"1348","suppressedMessages":"1349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1350","messages":"1351","suppressedMessages":"1352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1353","messages":"1354","suppressedMessages":"1355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1356","messages":"1357","suppressedMessages":"1358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1359","messages":"1360","suppressedMessages":"1361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1362","messages":"1363","suppressedMessages":"1364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1365","messages":"1366","suppressedMessages":"1367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1368","messages":"1369","suppressedMessages":"1370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1371","messages":"1372","suppressedMessages":"1373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1374","messages":"1375","suppressedMessages":"1376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1377","messages":"1378","suppressedMessages":"1379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1380","messages":"1381","suppressedMessages":"1382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1383","messages":"1384","suppressedMessages":"1385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1386","messages":"1387","suppressedMessages":"1388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1142"},{"filePath":"1389","messages":"1390","suppressedMessages":"1391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1392","messages":"1393","suppressedMessages":"1394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1395","messages":"1396","suppressedMessages":"1397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1398","messages":"1399","suppressedMessages":"1400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1401","messages":"1402","suppressedMessages":"1403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1404","messages":"1405","suppressedMessages":"1406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1407","messages":"1408","suppressedMessages":"1409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1410","messages":"1411","suppressedMessages":"1412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1413","messages":"1414","suppressedMessages":"1415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1416","messages":"1417","suppressedMessages":"1418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1419","messages":"1420","suppressedMessages":"1421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1422","messages":"1423","suppressedMessages":"1424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1425","messages":"1426","suppressedMessages":"1427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1428","messages":"1429","suppressedMessages":"1430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1431","messages":"1432","suppressedMessages":"1433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1434","messages":"1435","suppressedMessages":"1436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1437","messages":"1438","suppressedMessages":"1439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1440","messages":"1441","suppressedMessages":"1442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1146"},{"filePath":"1443","messages":"1444","suppressedMessages":"1445","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1446","usedDeprecatedRules":"1146"},{"filePath":"1447","messages":"1448","suppressedMessages":"1449","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1450","usedDeprecatedRules":"1146"},{"filePath":"1451","messages":"1452","suppressedMessages":"1453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1146"},{"filePath":"1454","messages":"1455","suppressedMessages":"1456","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1457","usedDeprecatedRules":"1146"},{"filePath":"1458","messages":"1459","suppressedMessages":"1460","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1461","usedDeprecatedRules":"1146"},{"filePath":"1462","messages":"1463","suppressedMessages":"1464","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1465","messages":"1466","suppressedMessages":"1467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1146"},{"filePath":"1468","messages":"1469","suppressedMessages":"1470","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1471","usedDeprecatedRules":"1146"},{"filePath":"1472","messages":"1473","suppressedMessages":"1474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1146"},{"filePath":"1475","messages":"1476","suppressedMessages":"1477","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1478","messages":"1479","suppressedMessages":"1480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1481","messages":"1482","suppressedMessages":"1483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\index.tsx",[],[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\redux-module\\store.js",[],[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\configs\\SetupAxios.js",["1484"],[],"export default function SetupAxios(axios, store) {\r\n  axios.defaults.headers.Accept = \"application/json\";\r\n  axios.interceptors.request.use(\r\n    (config) => {\r\n      const {\r\n        auth: { access_token },\r\n      } = store.getState();\r\n      if (access_token) {\r\n        config.headers.Authorization = `Bearer ${access_token}`;\r\n      }\r\n      return config;\r\n    },\r\n    (err) => Promise.reject(err)\r\n  );\r\n  axios.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      // if (error.response.status == 401) {\r\n      //   localStorage.clear();\r\n      //   window.location.href = \"/connexion\";\r\n      // }\r\n      // reject with error if response status is not 403\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n}\r\n\r\nconst responseHandler = (response) => {\r\n  return response;\r\n};\r\n\r\n// const errorHandler = (error) => {\r\n//   console.log(\"error\", error.response);\r\n//   let { status } = error.response;\r\n//   switch (status) {\r\n//     case 400:\r\n//       const temp = errorCode?.find(\r\n//         (elem) => elem.key === error.response.data.errorCode\r\n//       );\r\n//       if (temp) {\r\n//         toast.error(temp.value, {\r\n//           position: \"top-right\",\r\n//           autoClose: 3000,\r\n//           hideProgressBar: false,\r\n//           closeOnClick: true,\r\n//           pauseOnHover: true,\r\n//           draggable: true,\r\n//           progress: undefined,\r\n//           toastId: \"error\",\r\n//         });\r\n//       }\r\n//       return Promise.reject(error);\r\n//     case 401:\r\n//       localStorage.removeItem(\"persist:root\");\r\n//       authHelper.removeAuth();\r\n//       toast.error(\"Token hết hạn!\", {\r\n//         position: \"top-right\",\r\n//         autoClose: 3000,\r\n//         hideProgressBar: false,\r\n//         closeOnClick: true,\r\n//         pauseOnHover: true,\r\n//         draggable: true,\r\n//         progress: undefined,\r\n//         toastId: \"error\",\r\n//       });\r\n//       window.location.reload();\r\n//       // navigate(0);\r\n//       return Promise.reject(error);\r\n//     case 500:\r\n//       localStorage.removeItem(\"persist:root\");\r\n//       authHelper.removeAuth();\r\n//       toast.error(\"Token hết hạn!\", {\r\n//         position: \"top-right\",\r\n//         autoClose: 3000,\r\n//         hideProgressBar: false,\r\n//         closeOnClick: true,\r\n//         pauseOnHover: true,\r\n//         draggable: true,\r\n//         progress: undefined,\r\n//         toastId: \"error\",\r\n//       });\r\n//       window.location.reload();\r\n//       // navigate(0);\r\n//       return Promise.reject(error);\r\n//     default:\r\n//       return Promise.reject(error);\r\n//   }\r\n// };\r\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\routing\\AppRoutes.tsx",["1485","1486","1487","1488","1489","1490","1491"],[],"/**\r\n * High level router.\r\n *\r\n * Note: It's recommended to compose related routes in internal router\r\n * components (e.g: `src/app/modules/Auth/pages/AuthPage`, `src/app/BasePage`).\r\n */\r\n\r\nimport { FC, useEffect, useState } from \"react\";\r\nimport \"react-block-ui/style.css\";\r\nimport { Toast } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BrowserRouter, Navigate, Route, Routes } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { onMessageListener } from \"../../firebaseNotifications/firebase\";\r\nimport { App } from \"../App\";\r\nimport { Logout } from \"../modules/apps/auth\";\r\nimport { ForgotPassword } from \"../modules/apps/auth/components/ForgotPassword\";\r\nimport { Login } from \"../modules/apps/auth/Login\";\r\nimport { DangKy } from \"../modules/apps/dang-ky/DangKy\";\r\nimport { In } from \"../modules/apps/In/In\";\r\nimport { ErrorsPage } from \"../modules/errors/ErrorsPage\";\r\nimport { selectCurrentUser } from \"../redux-module/auth/authSlice\";\r\nimport { notiActions } from \"../redux-module/noti/notiSlice\";\r\nimport { PrivateRoutes } from \"./PrivateRoutes\";\r\n\r\n/**\r\n * Base URL of the website.\r\n *\r\n * @see https://facebook.github.io/create-react-app/docs/using-the-public-folder\r\n */\r\nconst { PUBLIC_URL } = process.env;\r\n\r\nconst AppRoutes: FC = () => {\r\n  // const { currentUser } = useAuth();\r\n  const currentUser = useSelector(selectCurrentUser);\r\n\r\n  return (\r\n    <BrowserRouter basename={PUBLIC_URL}>\r\n      <Routes>\r\n        <Route element={<App />}>\r\n          <Route path=\"in-ho-so\" element={<In />} />\r\n          <Route path=\"dang-nhap/*\" element={<Login />} />\r\n\r\n          <Route path=\"error/*\" element={<ErrorsPage />} />\r\n          <Route path=\"logout\" element={<Logout />} />\r\n          <Route path=\"dang-ky\" element={<DangKy />} />\r\n          <Route path=\"dang-nhap\" element={<Login />} />\r\n          <Route path=\"forgot-password\" element={<ForgotPassword />} />\r\n          {currentUser ? (\r\n            <>\r\n              <Route path=\"/*\" element={<PrivateRoutes />} />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Route path=\"dang-nhap/*\" element={<Login />} />\r\n              <Route path=\"*\" element={<Navigate to=\"/dang-nhap\" />} />\r\n            </>\r\n          )}\r\n        </Route>\r\n      </Routes>\r\n      <ToastContainer\r\n        hideProgressBar\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        limit={1}\r\n      />\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport { AppRoutes };\r\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\i18n\\Metronici18n.tsx",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\redux-module\\rootReducer.js",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\redux-module\\rootSaga.js",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\redux-module\\auth\\authSlice.js",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\routing\\PrivateRoutes.tsx",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\App.tsx",["1492"],[],"import { Suspense, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { fetchToken } from \"../firebaseNotifications/firebase\";\r\nimport Notification from \"../firebaseNotifications/Notification\";\r\nimport { I18nProvider } from \"../_metronic/i18n/i18nProvider\";\r\nimport { LayoutProvider, LayoutSplashScreen } from \"../_metronic/layout/core\";\r\nimport { MasterInit } from \"../_metronic/layout/MasterInit\";\r\nimport { selectCurrentUser } from \"./redux-module/auth/authSlice\";\r\nimport { notiActions } from \"./redux-module/noti/notiSlice\";\r\n// import { AuthInit } from \"./modules/apps/auth\";\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const currentUser = useSelector(selectCurrentUser);\r\n\r\n  useEffect(() => {\r\n    console.log(\"localSt\", localStorage.getItem(\"tokenFirebase\"));\r\n    if (!localStorage.getItem(\"tokenFirebase\")) {\r\n      console.log(\"khong co token\");\r\n      fetchToken();\r\n    }\r\n    if (currentUser) {\r\n      dispatch(notiActions.getNoti(currentUser?.id));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Suspense fallback={<LayoutSplashScreen />}>\r\n      {/* <header className=\"App-header\">\r\n        {isTokenFound && <h1> Notification permission enabled 👍🏻 </h1>}\r\n        {!isTokenFound && <h1> Need notification permission ❗️ </h1>}\r\n        <Button onClick={() => onShowNotificationClicked()}>Show Toast</Button>\r\n      </header> */}\r\n      <I18nProvider>\r\n        <LayoutProvider>\r\n          {/* <AuthInit> */}\r\n          <Notification />\r\n          <Outlet />\r\n          <MasterInit />\r\n          {/* </AuthInit> */}\r\n        </LayoutProvider>\r\n      </I18nProvider>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport { App };\r\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\errors\\ErrorsPage.tsx",["1493","1494","1495"],[],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { Route, Link, Routes, Outlet } from \"react-router-dom\";\r\nimport { Error500 } from \"./components/Error500\";\r\nimport { Error404 } from \"./components/Error404\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/helpers\";\r\nimport PageNotFound from \"./PageNotFound\";\r\nimport Accessdenied from \"./Accessdenied\";\r\n\r\nconst ErrorsLayout = () => {\r\n  return (\r\n    <div className=\"d-flex flex-column flex-root\">\r\n      <div className=\"d-flex flex-column flex-column-fluid bgi-position-y-bottom position-x-center bgi-no-repeat bgi-size-contain bgi-attachment-fixed\">\r\n        <div className=\"d-flex flex-column flex-column-fluid text-center p-10 py-lg-20\">\r\n          <Outlet />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ErrorsPage = () => (\r\n  <Routes>\r\n    <Route element={<ErrorsLayout />}>\r\n      <Route path=\"404\" element={<PageNotFound />} />\r\n      <Route path=\"403\" element={<Accessdenied />} />\r\n      <Route index element={<Error404 />} />\r\n    </Route>\r\n  </Routes>\r\n);\r\n\r\nexport { ErrorsPage };\r\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\dang-ky\\DangKy.js",["1496"],[],"import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport api from \"../../../configs/api\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nexport function DangKy() {\r\n  const navigate = useNavigate();\r\n\r\n  const initialState = {\r\n    dien_thoai: \"\",\r\n    tai_khoan: \"\",\r\n    mat_khau: \"\",\r\n    retype: \"\",\r\n  };\r\n\r\n  const [form, setForm] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [activeToChuc, setActiveToChuc] = useState(false);\r\n  const [resetfield, setResetfield] = useState(initialState);\r\n  const [vaitro, setVaitro] = useState(\"96e2a4d8-6e15-4309-a91d-17ab26533552\");\r\n\r\n  const toggleClassds = () => {\r\n    setActiveToChuc(false);\r\n    setVaitro(\"96e2a4d8-6e15-4309-a91d-17ab26533552\");\r\n  };\r\n  const toggleClasstc = () => {\r\n    setActiveToChuc(true);\r\n    setVaitro(\"f9e88007-a940-483c-bb64-4e60379d25fb\");\r\n  };\r\n\r\n  const setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n    if (!!errors[field])\r\n      setErrors({\r\n        ...errors,\r\n        [field]: null,\r\n      });\r\n  };\r\n\r\n  const findFormErrors = () => {\r\n    const { tai_khoan, mat_khau, dien_thoai, retype } = form;\r\n    const newErrors = {};\r\n    // name errors\r\n    if (!tai_khoan || tai_khoan === \"\")\r\n      newErrors.tai_khoan = \"Tài khoản không được bỏ trống!\";\r\n    if (!mat_khau || mat_khau === \"\")\r\n      newErrors.mat_khau = \"Mật khẩu không được bỏ trống!\";\r\n    if (!dien_thoai || dien_thoai === \"\")\r\n      newErrors.dien_thoai = \"Điện thoại không được bỏ trống!\";\r\n    if (!retype || retype === \"\")\r\n      newErrors.retype = \"Xác nhận mật khẩu không được bỏ trống!\";\r\n    if (mat_khau !== retype) newErrors.retype = \"Mật khẩu không trùng\";\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newErrors = findFormErrors();\r\n    if (Object.keys(newErrors).length > 0) {\r\n      console.log(newErrors);\r\n      setErrors(newErrors);\r\n    } else {\r\n      register(e);\r\n    }\r\n  };\r\n\r\n  const register = async (e) => {\r\n    setIsLoading(true)\r\n    const { tai_khoan, mat_khau, dien_thoai } = form;\r\n    const json = {\r\n      tai_khoan,\r\n      mat_khau,\r\n      dien_thoai,\r\n      vai_tro_id: vaitro,\r\n    };\r\n    await axios\r\n      .post(api.API_REGISTER, json)\r\n      .then(async ({ data }) => {\r\n        toast.success(\"Tạo tài khoản thành công\", {\r\n          position: \"top-right\",\r\n          autoClose: 1000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          toastId: \"success\",\r\n        });\r\n        setResetfield(initialState);\r\n        navigate(`/dang-nhap`);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error?.response?.data?.error_message, {\r\n          position: \"top-right\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          toastId: \"error\",\r\n        });\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false)\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <div id=\"contaner-template\">\r\n        <div className=\"pt-10 pb-5 min-vh-100 pagee\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"box-login-wrapper col-sm-7 col-lg-6 col-xl-4\">\r\n              <div className=\"box-login-wrapper card border-0 position-relative\">\r\n                <Link to={\"/dang-nhap\"}>\r\n                  <i className=\"fas fa-times-circle position-absolute icon-close\"></i>\r\n                </Link>\r\n                <div className=\"card-body w-100 w-md-75 p-3 m-auto \">\r\n                  <div className=\"title-text text-center\">\r\n                    ĐĂNG KÝ TÀI KHOẢN\r\n                  </div>\r\n                  <Form action=\"#\" className=\"box-login-wrapper\">\r\n                    <div className=\"form-group my-2\">\r\n                      <div className=\"text-type-select text-center mb-2\">\r\n                        Chọn loại tài khoản\r\n                      </div>\r\n                      <div className=\"type-list d-flex justify-content-around\">\r\n                        <div\r\n                          className={\r\n                            activeToChuc\r\n                              ? \"type-item text-center type-no-select\"\r\n                              : \"type-item text-center type-selected\"\r\n                          }\r\n                          onClick={toggleClassds}\r\n                        >\r\n                          <label>\r\n                            <i className=\"fas fa-user-nurse\"></i>\r\n                            <span className=\"text-type-item pt-2\">Cá nhân</span>\r\n                          </label>\r\n                          <input type=\"radio\" name=\"role\" />\r\n                        </div>\r\n                        <div\r\n                          className={\r\n                            !activeToChuc\r\n                              ? \"type-item text-center type-no-select\"\r\n                              : \"type-item text-center type-selected\"\r\n                          }\r\n                          onClick={toggleClasstc}\r\n                        >\r\n                          <label>\r\n                            <i className=\"fas fa-hospital-alt \"></i>\r\n                            <span className=\"text-type-item pt-2\">Tổ chức</span>\r\n                          </label>\r\n                          <input type=\"radio\" name=\"role\" />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-group mt-10 mb-6 input-icon\">\r\n                      <label className=\"label-input fw-bold\">\r\n                        Nhập số điện thoại\r\n                      </label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Nhập số điện thoại\"\r\n                        className=\"input-register input-login\"\r\n                        style={{ fontSize: 14, fontWeight: 400 }}\r\n                        value={form.dien_thoai === null ? \"\" : form.dien_thoai}\r\n                        onChange={(e) => {\r\n                          setField(\"dien_thoai\", e.target.value);\r\n                        }}\r\n                        isInvalid={!!errors.dien_thoai}\r\n                      />\r\n                      {/* <i className=\"fa fa-user\"></i> */}\r\n\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.dien_thoai}\r\n                      </Form.Control.Feedback>\r\n                    </div>\r\n                    <div className=\"form-group mb-6\">\r\n                      <label className=\"label-input fw-bold\">Tài Khoản</label>\r\n                      <div className=\"input-group input-icon\">\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          placeholder=\"Nhập tài khoản\"\r\n                          className=\"input-register\"\r\n                          style={{ fontSize: 14, fontWeight: 400 }}\r\n                          value={form.tai_khoan === null ? \"\" : form.tai_khoan}\r\n                          onChange={(e) => {\r\n                            setField(\"tai_khoan\", e.target.value);\r\n                          }}\r\n                          isInvalid={!!errors.tai_khoan}\r\n                        />\r\n                        {/* <i className=\"fa fa-user\"></i> */}\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                          {errors.tai_khoan}\r\n                        </Form.Control.Feedback>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-6\">\r\n                      <label className=\"label-input fw-bold\">Mật khẩu</label>\r\n                      <div className=\"input-group input-icon\">\r\n                        <Form.Control\r\n                          type=\"password\"\r\n                          placeholder=\"Nhập mật khẩu\"\r\n                          className=\"input-register\"\r\n                          style={{ fontSize: 14, fontWeight: 400 }}\r\n                          value={form.mat_khau === null ? \"\" : form.mat_khau}\r\n                          onChange={(e) => {\r\n                            setField(\"mat_khau\", e.target.value);\r\n                          }}\r\n                          isInvalid={!!errors.mat_khau}\r\n                        />\r\n                        {/* <i className=\"fa fa-key\"></i> */}\r\n\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                          {errors.mat_khau}\r\n                        </Form.Control.Feedback>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-10\">\r\n                      <label className=\"label-input fw-bold\">\r\n                        Xác nhận mật khẩu\r\n                      </label>\r\n                      <div className=\"input-group input-icon\">\r\n                        <Form.Control\r\n                          type=\"password\"\r\n                          placeholder=\"Nhập lại mật khẩu\"\r\n                          className=\"input-register\"\r\n                          style={{ fontSize: 14, fontWeight: 400 }}\r\n                          value={form.retype === null ? \"\" : form.retype}\r\n                          onChange={(e) => {\r\n                            setField(\"retype\", e.target.value);\r\n                          }}\r\n                          isInvalid={!!errors.retype}\r\n                        />\r\n                        {/* <i className=\"fa fa-key\"></i> */}\r\n\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                          {errors.retype}\r\n                        </Form.Control.Feedback>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-group my-2 text-center\">\r\n                      {isLoading ? (\r\n                        <button\r\n                          className=\"btn btn-primary btn-block btn-login w-100 mb-8\"\r\n                          type=\"submit\"\r\n                          id=\"btn-register\"\r\n                          >\r\n                          <span\r\n                            className=\"indicator-progress\"\r\n                            style={{ display: \"block\" }}\r\n                          >\r\n                            Vui lòng chờ...\r\n                            <span className=\"spinner-border spinner-border-sm align-middle ms-2\"></span>\r\n                          </span>\r\n                        </button>\r\n                      ) : (\r\n                        <button\r\n                          className=\"btn btn-primary btn-block btn-login w-100 mb-8\"\r\n                          type=\"submit\"\r\n                          id=\"btn-register\"\r\n                          onClick={async (e) => {\r\n                            handleSubmit(e);\r\n                          }}\r\n                        >\r\n                          <span>\r\n                            <i className=\"fas fa-chevron-circle-right\"></i> Đăng ký\r\n                          </span>\r\n                        </button>\r\n                      )}\r\n\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <footer className=\"footer footer-alt text-footer\">\r\n          SỞ Y TẾ TP HỒ CHÍ MINH\r\n        </footer>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\In\\In.js",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\auth\\components\\ForgotPassword.tsx",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\auth\\Login.js",["1497","1498"],[],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport api from \"../../../configs/api\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  authActions,\r\n  selectCurrentUser,\r\n} from \"../../../redux-module/auth/authSlice\";\r\nimport { notiActions } from \"../../../redux-module/noti/notiSlice\";\r\nimport { KTSVG } from \"../../../../_metronic/helpers\";\r\nimport { fetchToken } from \"../../../../firebaseNotifications/firebase\";\r\n\r\nexport function Login() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [data, setData] = useState();\r\n  const [form, setForm] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [isDaCap, setIsDaCap] = useState(false);\r\n  const [currentRole, setCurrentRole] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const currentUser = useSelector(selectCurrentUser);\r\n\r\n  const [type, setType] = useState(\"password\");\r\n\r\n  const [icon, setIcon] = useState(\"fas fa-eye text-primary mx-auto\");\r\n\r\n  function showOrHide(e) {\r\n    e.preventDefault();\r\n    type === \"password\" ? setType(\"text\") : setType(\"password\");\r\n\r\n    if (type === \"password\") {\r\n      setType(\"text\");\r\n      setIcon(\"fas fa-eye-slash text-primary mx-auto\");\r\n    } else if (type === \"text\") {\r\n      setType(\"password\");\r\n      setIcon(\"fas fa-eye text-primary mx-auto\");\r\n    }\r\n  }\r\n\r\n  const setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n    if (!!errors[field])\r\n      setErrors({\r\n        ...errors,\r\n        [field]: null,\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      navigate(\"/dashboard\");\r\n    }\r\n  }, []);\r\n\r\n  const findFormErrors = () => {\r\n    const { username, password } = form;\r\n    const newErrors = {};\r\n    // name errors\r\n    if (!username || username === \"\")\r\n      newErrors.username = \"Tên đăng nhập không được bỏ trống!\";\r\n    if (!password || password === \"\")\r\n      newErrors.password = \"Mật khẩu không được bỏ trống!\";\r\n    return newErrors;\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    const newErrors = findFormErrors();\r\n    if (Object.keys(newErrors).length > 0) {\r\n      setErrors(newErrors);\r\n      setIsLoading(false);\r\n    } else {\r\n      onChoosen();\r\n    }\r\n  };\r\n\r\n  const onNavigate = (status) => {\r\n    if (data && data?.userInfo?.assigned_role[0]?.ten_en === \"duocsi\") {\r\n      if (status === \"dacap\") {\r\n        navigate(\"/admin/chung-chi-hanh-nghe\");\r\n      } else if (status === \"chuacap\") {\r\n        navigate(\"/thong-tin-duoc-si\");\r\n      }\r\n    } else if (data && data?.userInfo?.assigned_role[0]?.ten_en === \"tochuc\") {\r\n      if (status === \"dacap\") {\r\n        navigate(\"/admin/giay-phep-kinh-doanh\");\r\n      } else if (status === \"chuacap\") {\r\n      }\r\n    }\r\n    toast.success(\"Đăng nhập thành công\", {\r\n      position: \"top-right\",\r\n      autoClose: 1000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      toastId: \"success\",\r\n    });\r\n  };\r\n\r\n  const onChoosen = () => {\r\n    const { username, password } = form;\r\n    const json = { username, password };\r\n    axios\r\n      .post(api.API_LOGIN, json)\r\n      .then(async ({ data }) => {\r\n        setData(data);\r\n        dispatch(authActions.loginSuccess(data));\r\n        dispatch(notiActions.getNoti(data?.userInfo?.id));\r\n        setCurrentRole(data?.userInfo?.assigned_role[0]?.ten_en);\r\n\r\n        if (data?.userInfo?.last_login == null) {\r\n          if (\r\n            data?.userInfo?.assigned_role[0]?.ten_en === \"duocsi\" ||\r\n            data?.userInfo?.assigned_role[0]?.ten_en === \"tochuc\"\r\n          ) {\r\n            setIsDaCap(true);\r\n          } else {\r\n            navigate(\"/dashboard\");\r\n          }\r\n        } else {\r\n          switch (data?.userInfo?.assigned_role[0]?.ten_en) {\r\n            case \"duocsi\":\r\n              navigate(\"/admin/chung-chi-hanh-nghe\");\r\n              break;\r\n            case \"tochuc\":\r\n              navigate(\"/admin/giay-phep-kinh-doanh\");\r\n              break;\r\n            default:\r\n              navigate(\"/dashboard\");\r\n              break;\r\n          }\r\n        }\r\n        setIsLoading(false);\r\n        if (!localStorage.getItem(\"tokenFirebase\")) {\r\n          registerNoti(fetchToken());\r\n        } else {\r\n          registerNoti(localStorage.getItem(\"tokenFirebase\"));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error?.response?.data?.msg, {\r\n          position: \"top-right\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          toastId: \"error\",\r\n        });\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const registerNoti = (fcm_token) => {\r\n    axios\r\n      .post(\r\n        api.API_REGISTER_NOTIFICATION,\r\n        {},\r\n        {\r\n          headers: {\r\n            fcm_token: btoa(fcm_token),\r\n          },\r\n        }\r\n      )\r\n      .then(async ({ data }) => {\r\n        console.log(\"data data register success\", data);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"pagee\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-sm-8 col-lg-5 col-xl-4\">\r\n          <div className=\"text-center w-100 m-auto\">\r\n            <div className=\"auth-logo\">\r\n              <NavLink to=\"/\" className=\"logo logo-dark text-center\">\r\n                <span className=\"logo\">\r\n                  <img\r\n                    className=\"img-logo\"\r\n                    src=\"media/logos/Logo_BoYTe.png\"\r\n                    alt=\"\"\r\n                    height=\"90\"\r\n                    width=\"90\"\r\n                  />\r\n                </span>\r\n              </NavLink>\r\n            </div>\r\n            <div className=\"auth-name my-6\" style={{ fontSize: \"1.3rem\" }}>\r\n              HỆ THỐNG QUẢN LÝ HÀNH NGHỀ DƯỢC\r\n            </div>\r\n          </div>\r\n          <div className=\"box-login-wrapper card border-0\">\r\n            <div className=\"card-body w-100 w-md-75 py-6 px-2 m-auto\">\r\n              <Form onSubmit={onSubmit}>\r\n                <Form.Group>\r\n                  <div className=\"row mb-8\">\r\n                    <span\r\n                      className=\"mb-3\"\r\n                      style={{ fontSize: \"1rem\", fontWeight: 600 }}\r\n                    >\r\n                      Tên đăng nhập\r\n                    </span>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Tên đăng nhập\"\r\n                      style={{ fontSize: 14, fontWeight: 400 }}\r\n                      onChange={(e) => {\r\n                        setField(\"username\", e.target.value);\r\n                      }}\r\n                      isInvalid={!!errors.username}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.username}\r\n                    </Form.Control.Feedback>\r\n                  </div>\r\n                  <div className=\"row mb-9\">\r\n                    <span\r\n                      className=\"mb-3\"\r\n                      style={{ fontSize: \"1rem\", fontWeight: 600 }}\r\n                    >\r\n                      Mật khẩu\r\n                    </span>\r\n                    <div className=\"input-group px-0\" id=\"show_hide_password\">\r\n                      <Form.Control\r\n                        className=\"inputPassword\"\r\n                        type={type}\r\n                        placeholder=\"Mật khẩu\"\r\n                        style={{ fontSize: 14, fontWeight: 400 }}\r\n                        onChange={(e) => {\r\n                          setField(\"password\", e.target.value);\r\n                        }}\r\n                        autoComplete=\"off\"\r\n                        isInvalid={!!errors.password}\r\n                      />\r\n                      <div className=\"input-group-addon\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-light showHidePassword ps-4 pe-3\"\r\n                          onClick={showOrHide}\r\n                        >\r\n                          <i className={icon}></i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.password}\r\n                    </Form.Control.Feedback>\r\n                  </div>\r\n                </Form.Group>\r\n\r\n                <div className=\"form-group mb-1 text-center\">\r\n                  <button\r\n                    className=\"btn btn-primary btn-block btn-login\"\r\n                    style={{ width: \"100%\" }}\r\n                    type=\"submit\"\r\n                    onClick={(e) => {\r\n                      onSubmit(e);\r\n                    }}\r\n                  >\r\n                    {isLoading ? (\r\n                      <span\r\n                        className=\"indicator-progress\"\r\n                        style={{ display: \"block\" }}\r\n                      >\r\n                        Vui lòng chờ...\r\n                        <span className=\"spinner-border spinner-border-sm align-middle ms-2\"></span>\r\n                      </span>\r\n                    ) : (\r\n                      <span>\r\n                        <i className=\"fas fa-chevron-circle-right\"></i>\r\n                        Đăng nhập\r\n                      </span>\r\n                    )}\r\n                  </button>\r\n                </div>\r\n              </Form>\r\n              <div className=\"form-group text-center mb-3\">\r\n                <NavLink to=\"/dang-ky\">Bạn chưa có tài khoản?</NavLink>\r\n              </div>\r\n\r\n              <div className=\"form-group float-start\">\r\n                <div className=\"form-check\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    value=\"\"\r\n                    id=\"flexCheckDefault\"\r\n                    defaultChecked\r\n                  />\r\n                  <label\r\n                    className=\"form-check-label\"\r\n                    htmlFor=\"flexCheckDefault\"\r\n                  >\r\n                    Lưu mật khẩu\r\n                  </label>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-group float-end\">\r\n                <NavLink to=\"/forgot-password\" className=\"forgot-password\">\r\n                  Quên mật khẩu\r\n                </NavLink>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"footer footer-alt text-footer\">\r\n        SỞ Y TẾ TP HỒ CHÍ MINH\r\n      </div>\r\n      <Modal\r\n        className=\"d-flex\"\r\n        size=\"lg\"\r\n        style={{ justifyContent: \"center\", top: \"20vh\" }}\r\n        show={isDaCap}\r\n        onHide={() => setIsDaCap(false)}\r\n      >\r\n        <Modal.Header className=\"px-5 py-5\">\r\n          <div className=\"row w-100\">\r\n            <div className=\"col-12 px-0 text-end\">\r\n              <button\r\n                className=\"btn btn-link py-0\"\r\n                onClick={() => {\r\n                  setIsDaCap(false);\r\n                }}\r\n              >\r\n                <i className=\"fas fa-times\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div\r\n            className=\"row justify-content-center text-center\"\r\n            style={{ width: \"40vw\" }}\r\n          >\r\n            <div className=\"col-11\">\r\n              {currentRole === \"duocsi\" ? (\r\n                <h3 style={{ textTransform: \"uppercase\" }}>\r\n                  ông/bà đã đươc sở y tế tp. hồ chí minh cấp chứng chỉ hành nghề\r\n                  dược hay chưa ?\r\n                </h3>\r\n              ) : (\r\n                <h3 style={{ textTransform: \"uppercase\" }}>\r\n                  tổ chức/đơn vị đã được sở y tế tp.hồ chí minh cấp chứng chỉ\r\n                  hành nghề dược hay chưa ?\r\n                </h3>\r\n              )}\r\n            </div>\r\n            <div className=\"col-6 mt-7 mb-4 text-end\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  onNavigate(\"chuacap\");\r\n                }}\r\n              >\r\n                {\" \"}\r\n                Chưa được cấp{\" \"}\r\n              </button>\r\n            </div>\r\n            <div className=\"col-6 mt-7 mb-4 text-start\">\r\n              <button\r\n                className=\"btn btn-warning\"\r\n                onClick={() => {\r\n                  onNavigate(\"dacap\");\r\n                }}\r\n              >\r\n                {\" \"}\r\n                Đã được cấp\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\auth\\index.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\redux-module\\auth\\authSaga.js",["1499","1500"],[],"import { fork, take } from \"redux-saga/effects\";\nimport { authActions } from \"./authSlice\";\n\nfunction* handleLogin(payload) {\n  yield console.log(\"handleLogin\", payload);\n}\nfunction* handleLogout() {\n  yield console.log(\"handle logout\");\n}\nfunction* handleLoginSuccess() { }\nfunction* watchLoginFlow() {\n  while (true) {\n    const action = yield take(authActions.login.type);\n    yield fork(handleLogin, action.payload);\n\n    yield take(authActions.logout.type);\n    yield fork(handleLogout);\n  }\n}\n\nexport default function* authSaga() {\n  //   yield fork(watchLoginFlow);\n  //   yield takeEvery(authActions.loginSuccess.type, handleLogin);\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\redux-module\\noti\\notiSlice.js",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\redux-module\\locations\\locationSaga.js",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\redux-module\\noti\\notiSaga.js",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\redux-module\\locations\\locationSlice.js",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\redux-module\\common\\commonSlice.js",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\chung-chi-hanh-nghe\\ChungChiHanhNghePage.js",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\chung-chi-hanh-nghe\\ChungChiHanhNgheDuoc.js",["1501"],[],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { KTSVG } from \"../../../../_metronic/helpers\";\nimport { PageTitle } from \"../../../../_metronic/layout/core\";\nimport {\n  authActions,\n  selectCurrentUser\n} from \"../../../redux-module/auth/authSlice\";\nimport PopupCapNhatYeuCauLienKetDS from \"../popup/PopupCapNhatYeuCauLienKetDS\";\n\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { useNavigate } from \"react-router-dom\";\nimport LoadingIndicator from \"../../../components/LoadingIndicator\";\nimport api from \"../../../configs/api\";\nimport { HinhThuc, TrangThaiLienKetDuocSi } from \"../../../data\";\nimport { BangCap } from \"../duoc-si/bang-cap/BangCap\";\nimport { LichSuChungChi } from \"../duoc-si/lich-su-chung-chi/LichSuChungChi\";\nimport { LichSuDaoTao } from \"../duoc-si/lich-su-dao-tao/LichSuDaoTao\";\nimport { LichSuThucHanh } from \"../duoc-si/lich-su-thuc-hanh/LichSuThucHanh\";\nimport { commonActions, selectIsLastLogin } from \"../../../redux-module/common/commonSlice\";\n\n\nexport function ChungChiHanhNgheDuoc() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const currentUser = useSelector(selectCurrentUser);\n  const isLastLogin = useSelector(selectIsLastLogin)\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [showModalYCLK, setShowModalYCLK] = useState(false);\n  const [ThongTinChungChi, setThongTinChungChi] = useState(null);\n\n  const closeModalCapNhatYeuCauLK = () => setShowModalYCLK(false);\n  const showModalCapNhatYeuCauLK = () => setShowModalYCLK(true);\n\n  useEffect(() => {\n    getChungChiUser();\n  }, []);\n\n  useEffect(() => {\n    if (currentUser.last_login === null) {\n      if (isLastLogin === false) {\n        setShowModalYCLK(true);\n        dispatch(commonActions.setIsLastLogin(true));\n      } else if (isLastLogin === true) {\n        setShowModalYCLK(false);\n      }\n    }\n  }, [currentUser])\n\n\n  const getChungChiUser = async () => {\n    await setIsLoading(true);\n    axios\n      .get(api.API_THONG_TIN_LIEN_KET_DUOC_SI)\n      .then(({ data }) => {\n        setThongTinChungChi(data?.results);\n      })\n      .catch(() => { })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n\n  const usersBreadcrumbs = [\n    {\n      title: \"Trang chủ\",\n      path: \"/\",\n      isSeparator: false,\n      isActive: false,\n    },\n    {\n      title: \"\",\n      path: \"\",\n      isSeparator: true,\n      isActive: false,\n    },\n  ];\n\n  const checkHinhThuc = (id) => {\n    let hinhThuc = HinhThuc.find((e) => e.id === id);\n    return <span>{hinhThuc.name}</span>;\n  }\n\n  const checkStatus = (id) => {\n    let status = TrangThaiLienKetDuocSi.find((e) => e.id === id);\n    return <span className={`text-${status.color}`}>{status.name}</span>;\n  };\n\n  return (\n    <>\n      <div className=\"row mt-5 mx-0 w-100\">\n        <PageTitle breadcrumbs={usersBreadcrumbs}>\n          Chứng chỉ hành nghề\n        </PageTitle>\n\n        <PopupCapNhatYeuCauLienKetDS\n          show={showModalYCLK}\n          hide={closeModalCapNhatYeuCauLK}\n          getChungChiUser={getChungChiUser}\n        />\n\n        <div className=\"col-3\">\n          <div className=\"card-box bg-white px-0 py-0 h-100\">\n            <div className=\"col-xxl-12 py-5 px-5\">\n              <div className=\"text-center mb-5\">\n                <div className=\"symbol symbol-150px symbol-circle text-center\">\n                  <img alt=\"Pic\" src=\"/media/assets/noPicture.jpeg\" />\n                </div>\n                <div className=\"mt-2 fs-2 fw-bold\">\n                  {currentUser?.ho_ten != null ? currentUser?.ho_ten : \"\"}\n                </div>\n              </div>\n\n              <div className=\"row mb-1\">\n                <div className=\"col-xl-5 text-blue2 fw-bold fs-6 \">Email</div>\n                <div className=\"col-xl-7 mb-2 fs-6\">\n                  {currentUser?.email != null ? currentUser?.email : \"\"}\n                </div>\n              </div>\n\n              <div className=\"row mb-1\">\n                <div\n                  onClick={() => {\n                    dispatch(authActions.changeToken());\n                  }}\n                  className=\"col-xl-5 text-blue2 fw-bold fs-6 \"\n                >\n                  Ngày sinh\n                </div>\n                <div className=\"col-xl-7 mb-2 fs-6\">\n                  <span>{currentUser.ngay_sinh ? moment(currentUser?.ngay_sinh).format(\"DD/MM/YYYY\") : \"\"}</span>\n                </div>\n              </div>\n\n              <div className=\"row mb-1\">\n                <div className=\"col-xl-5 text-blue2 fw-bold fs-6 \">\n                  CMND/CCCD\n                </div>\n                <div className=\"col-xl-7 mb-2 fs-6\">\n                  {currentUser?.ma_cong_dan || \"\"}\n                </div>\n              </div>\n\n              <div className=\"row mb-1\">\n                <div className=\"col-xl-5 text-blue2 fw-bold fs-6 \">\n                  Điện thoại\n                </div>\n                <div className=\"col-xl-7 mb-2 fs-6\">\n                  {currentUser?.dien_thoai || \"\"}\n                </div>\n              </div>\n\n              <div className=\"text-center mt-2\">\n                <button className=\"btn btn-sm btn-primary\"\n                  onClick={() => navigate(\"/thong-tin-duoc-si\")}>\n                  <KTSVG\n                    path=\"/media/icons/duotune/art/art005.svg\"\n                    className=\"svg-icon-2\"\n                  />\n                  Cập nhật thông tin\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-9\">\n          <div className=\"row\">\n            <div className=\"col-xl-3 mb-2\">\n              <a\n                href=\"/#\"\n                className=\"card bg-danger hoverable card-xl-stretch mb-xl-5\"\n              >\n                <div className=\"card-body\">\n                  <div className=\"text-white fw-bolder fs-1 mb-2 text-center\">\n                    1.000\n                  </div>\n\n                  <div className=\"fw-bold text-white fs-7 text-center\">\n                    SỐ CƠ SỞ ĐÃ THỰC HÀNH\n                  </div>\n                </div>\n              </a>\n            </div>\n\n            <div className=\"col-xl-3 mb-2\">\n              <a\n                href=\"/#\"\n                className=\"card bg-primary hoverable card-xl-stretch mb-xl-5\"\n              >\n                <div className=\"card-body\">\n                  <div className=\"text-white fw-bolder fs-1 mb-2 text-center\">\n                    1.000\n                  </div>\n\n                  <div className=\"fw-bold text-white fs-7 text-center\">\n                    THỰC HÀNH CHUYÊN MÔN\n                  </div>\n                </div>\n              </a>\n            </div>\n\n            <div className=\"col-xl-3 mb-2\">\n              <a\n                href=\"/#\"\n                className=\"card bg-success hoverable card-xl-stretch mb-xl-5\"\n              >\n                <div className=\"card-body\">\n                  <div className=\"text-white fw-bolder fs-1 mb-2 text-center\">\n                    1.000\n                  </div>\n\n                  <div className=\"fw-bold text-white fs-7 text-center\">\n                    CHỨNG NHẬN ĐÀO TẠO\n                  </div>\n                </div>\n              </a>\n            </div>\n\n            <div className=\"col-xl-3 mb-2\">\n              <a\n                href=\"/#\"\n                className=\"card bg-warning hoverable card-xl-stretch mb-xl-5\"\n              >\n                <div className=\"card-body\">\n                  <div className=\"text-white fw-bolder fs-1 mb-2 text-center\">\n                    1.000\n                  </div>\n\n                  <div className=\"fw-bold text-white fs-7 text-center\">\n                    GIỜ ĐÀO TẠO\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n          <div className=\"col-xl-12\">\n            <div className=\"card-box px-6 py-6 mb-0\">\n              <div className=\"row pb-5\">\n                <div className=\"col-md-6 col-sm-6\">\n                  <label className=\"fw-bold fs-5\">CHỨNG CHỈ HÀNH NGHỀ</label>\n                </div>\n              </div>\n              {isLoading && <LoadingIndicator />}\n              {!isLoading && !ThongTinChungChi ? (\n                <>\n                  <div className=\"text-tb-chungchi text-center p-20\">\n                    Nếu bạn đã được SYT TP. HCM cấp giấy chứng nhận hành nghề\n                    dược, hãy gửi yêu cầu liên kết để quản lý tại đây\n                  </div>\n                  <div className=\"text-center\">\n                    <button\n                      onClick={() => {\n                        showModalCapNhatYeuCauLK();\n                      }}\n                      className=\"btn btn-outline-primary\"\n                    >\n                      Cấp chứng chỉ hành nghề dược\n                    </button>\n                  </div>\n                </>\n              ) : (\n                !isLoading &&\n                ThongTinChungChi && (\n                  <>\n                    <div className=\"row mb-4\">\n                      <div className=\"col-xl-6\">\n                        <div className=\"row\">\n                          <div className=\"col-xl-5\">\n                            <span className=\" text-blue2 fw-bold fs-6\">Số giấy phép:</span>\n                          </div>\n                          <div className=\"col-xl-7 fs-6\">\n                            {ThongTinChungChi?.so_giay_phep || \"\"}\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"col-xl-6\">\n                        <div className=\"row\">\n                          <div className=\"col-xl-5\">\n                            <span className=\" text-blue2 fw-bold fs-6\">Nơi cấp:</span>\n                          </div>\n                          <div className=\"col-xl-7 fs-6\">\n                            {ThongTinChungChi?.co_quan_cap || \"\"}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"row mb-4\">\n                      <div className=\"col-xl-6\">\n                        <div className=\"row\">\n                          <div className=\"col-xl-5\">\n                            <span className=\"text-blue2 fw-bold fs-6\">Ngày hiệu lực:</span>\n                          </div>\n                          <div className=\"col-xl-7 fs-6\">\n                            {ThongTinChungChi?.ngay_hieu_luc || \"\"}\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"col-xl-6\">\n                        <div className=\"row\">\n                          <div className=\"col-xl-5\">\n                            <span className=\"text-blue2 fw-bold fs-6\">Phụ trách chuyên môn tại:</span>\n                          </div>\n                          <div className=\"col-xl-7 fs-6\">\n                              {ThongTinChungChi?.phu_trach_chuyen_mon || \"\"}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"row mb-4\">\n                      <div className=\"col-xl-6\">\n                        <div className=\"row\">\n                          <div className=\"col-xl-5\">\n                              <span className=\"text-blue2 fw-bold fs-6\">Văn bằng chuyên môn:</span>\n                          </div>\n                          <div className=\"col-xl-7 fs-6\">\n                              {ThongTinChungChi?.van_bang_chuyen_mon || \"\"}\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"col-xl-6\">\n                        <div className=\"row\">\n                          <div className=\"col-xl-5\">\n                              <span className=\"text-blue2 fw-bold fs-6\">Phạm vi hoạt động chuyên môn:</span>\n                          </div>\n                            <div className=\"col-xl-7 fs-6\">\n                              {ThongTinChungChi?.pham_vi_hoat_dong_chuyen_mon || \"\"}\n                            </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"row mb-4\">\n                      <div className=\"col-xl-6\">\n                        <div className=\"row\">\n                          <div className=\"col-xl-5 text-blue2 fw-bold fs-6\">\n                              <span className=\"text-blue2 fw-bold fs-6\">Ngày hết hạn:</span>\n                          </div>\n                          <div className=\"col-xl-7 fs-6\">30/05/2022</div>\n                        </div>\n                      </div>\n\n                      <div className=\"col-xl-6\">\n                        <div className=\"row\">\n                          <div className=\"col-xl-5 text-blue2 fw-bold fs-6\">\n                            Hình thức:\n                          </div>\n                            <div className=\"col-xl-7 fs-6\">\n                              {ThongTinChungChi?.hinh_thuc_thi\n                                ? checkHinhThuc(ThongTinChungChi?.hinh_thuc_thi)\n                                : \"\"}\n                            </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"row mb-4\">\n                      <div className=\"col-xl-6\">\n                        <div className=\"row\">\n                          <div className=\"col-xl-12 text-blue2 fw-bold fs-6 mb-1\">\n                            Đủ điều kiện hành nghề dược tại các vị trí:\n                          </div>\n                            <div className=\"col-xl-12 fs-6\" style={{lineHeight: \"1.8\"}}>\n                              {ThongTinChungChi?.vi_tri_hanh_nghe || \"\"}\n                            </div>\n                        </div>\n                      </div>\n\n                      <div className=\"col-xl-6\">\n                        <div className=\"row\">\n                          <div className=\"col-xl-5 text-blue2 fw-bold fs-6\">\n                            Trạng thái:\n                          </div>\n                          <div className=\"col-xl-7 fs-6\">\n                            {ThongTinChungChi?.trang_thai_ho_so\n                              ? checkStatus(ThongTinChungChi?.trang_thai_ho_so)\n                              : \"\"}\n                            <button\n                              onClick={() => {\n                                showModalCapNhatYeuCauLK();\n                              }}\n                              className=\"btn btn-sm pl-5 btn-primary\"\n                              style={{ marginLeft: 10 }}\n                            >\n                              Chỉnh sửa\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </>\n                )\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"gy-5 g-xl-8 my-5\">\n        <div className=\"col-xl-12\">\n          <BangCap userId={currentUser.id} hideButtons={true} />\n          <LichSuThucHanh userId={currentUser.id} hideButtons={true} />\n          <LichSuDaoTao userId={currentUser.id} hideButtons={true} />\n          <LichSuChungChi userId={currentUser.id} />\n        </div>\n      </div>\n    </>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-chung-chi\\ChiTietChungChi.js",["1502","1503","1504","1505","1506","1507","1508","1509","1510","1511","1512","1513","1514","1515","1516","1517","1518","1519","1520","1521","1522","1523","1524","1525","1526","1527"],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-thu-ly-duoc-si\\ChiTietHoSoThuLyTuChoi.js",["1528","1529"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { PageTitle } from \"../../../../_metronic/layout/core\";\nimport api from \"../../../configs/api\";\nimport { selectRoleUser } from \"../../../redux-module/auth/authSlice\";\nimport { LichSuThucHanh } from \"../duoc-si/lich-su-thuc-hanh/LichSuThucHanh\";\nimport ThongTinCaNhan from \"./components/thong-tin-ca-nhan/ThongTinCaNhan\";\n\nLoadingOverlay.propTypes = undefined;\nexport function ChiTietHoSoThuLyTuChoi(props) {\n  const roleUser = useSelector(selectRoleUser);\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (id) {\n      getThongTinHoSo(id);\n    }\n  }, []);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [thongTinHoSo, setThongTinHoSo] = useState({});\n  const [DeNghi, setDeNghi] = useState(\"\");\n\n  const getThongTinHoSo = async (id) => {\n    await setIsLoading(true);\n    axios\n      .get(api.API_DETAIL_HO_SO_THU_LY_DUOC_SI + \"/\" + id)\n      .then(async ({ data }) => {\n        const { result } = data;\n        if (result) {\n          setDeNghi(result?.de_nghi);\n          setThongTinHoSo(result);\n          setField(\n            \"ly_do_tu_choi\",\n            roleUser[0]?.ten_en === \"lanhdao\"\n              ? result?.yeu_cau_cchnd?.ly_do_tu_choi_lanh_dao\n              : roleUser[0]?.ten_en === \"chuyenvien\"\n              ? result?.yeu_cau_cchnd?.ly_do_tu_choi_chuyen_vien\n              : \"\"\n          );\n        }\n      })\n      .catch((error) => {\n        toast.error(\"Lấy thông tin chứng chỉ không thành công\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n        navigate(\"/error/404\");\n      })\n      .finally(() => {\n        setTimeout(() => {\n          setIsLoading(false);\n        }, 1000);\n      });\n  };\n\n  //validate thêm vị trí hành nghề\n  const [form, setForm] = useState({});\n  const [errors, setErrors] = useState({});\n\n  const setField = (field, value) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n    if (!!errors[field])\n      setErrors({\n        ...errors,\n        [field]: null,\n      });\n  };\n\n  const findFormErrors = () => {\n    const { ly_do_tu_choi } = form;\n    const newErrors = {};\n    // name errors\n    if (!ly_do_tu_choi || ly_do_tu_choi === \"\")\n      newErrors.ly_do_tu_choi = \"Lý do từ chối không được bỏ trống!\";\n    return newErrors;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const newErrors = findFormErrors();\n    // Conditional logic:\n    if (Object.keys(newErrors).length > 0) {\n      console.log(newErrors);\n      // We got errors!\n      setErrors(newErrors);\n      for (const property in newErrors) {\n        toast.error(newErrors[property], {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n        return;\n      }\n    } else {\n      // No errors! Put any logic here for the form submission!\n      updateHoSo();\n    }\n  };\n\n  const updateHoSo = async () => {\n    await setIsLoading(true);\n    const { ly_do_tu_choi } = form;\n    const jsonCancel = {\n      trang_thai_ho_so: \"3\",\n      ly_do_tu_choi,\n    };\n    axios\n      .put(\n        api.API_YEU_CAU_CHUNG_CHI_HANH_NGHE + `/update_inform/${id}`,\n        jsonCancel\n      )\n      .then(async ({ data }) => {\n        toast.success(\"Cập nhật thành công\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        navigate(-1);\n      })\n      .catch((error) => {\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const usersBreadcrumbs = [\n    {\n      title: \"Trang chủ\",\n      path: \"/\",\n      isSeparator: false,\n      isActive: false,\n    },\n    {\n      title: \"\",\n      path: \"\",\n      isSeparator: true,\n      isActive: false,\n    },\n  ];\n\n  return (\n    <div>\n      <PageTitle breadcrumbs={usersBreadcrumbs}>Chi tiết hồ sơ</PageTitle>\n      <LoadingOverlay spinner active={isLoading} text=\"Đang tải dữ liệu ...\">\n        {/* Thủ tục */}\n        <div className=\"card py-6 px-6 mx-3 my-3\">\n          <label className=\"fw-bold fs-5\">THỦ TỤC</label>\n          <div className=\"text py-2\">\n            {thongTinHoSo?.thu_tuc ? thongTinHoSo?.thu_tuc?.ten : \"\"}\n          </div>\n        </div>\n\n        {/* THÔNG TIN CÁ NHÂN */}\n        <ThongTinCaNhan thongTinHoSo={thongTinHoSo} />\n        {/* THỰC HÀNH TẠI CƠ SỞ DƯỢC */}\n        <LichSuThucHanh userId={thongTinHoSo?.user?.id} />\n\n        <div className=\"card-box py-6 px-6 mx-3 my-3\">\n          <div className=\"fw-bold fs-5 mb-2\">LÝ DO TỪ CHỐI</div>\n\n          <div className=\"col-12 d-flex px-0\">\n            <Form.Control\n              as=\"textarea\"\n              rows={3}\n              style={{ fontSize: 14, fontWeight: 500 }}\n              value={form.ly_do_tu_choi === null ? \"\" : form.ly_do_tu_choi}\n              onChange={(e) => {\n                setField(\"ly_do_tu_choi\", e.target.value);\n              }}\n              isInvalid={!!errors.ly_do_tu_choi}\n            />\n            {/* <Form.Control.Feedback type=\"invalid\">\n              {errors.ly_do_tu_choi}\n            </Form.Control.Feedback> */}\n          </div>\n        </div>\n\n        <div className=\"row w-100\">\n          <div className=\"col-12 mt-4 mb-5 text-center\">\n            <div\n              onClick={() => {\n                navigate(-1);\n              }}\n              className=\"btn bg-primary2 text-white px-4 py-2 mx-2 font-weight-bold\"\n            >\n              QUAY LẠI\n            </div>\n\n            <div\n              onClick={(e) => {\n                handleSubmit(e);\n              }}\n              className=\"btn btn-success text-white px-4 py-2 mx-2 font-weight-bold \"\n            >\n              LƯU\n            </div>\n            <div\n              onClick={() => {}}\n              className=\"btn btn-primary text-white px-4 py-2 mx-2 font-weight-bold \"\n            >\n              IN VĂN BẢN TỪ CHỐI\n            </div>\n            <div\n              onClick={() => {}}\n              className=\"btn btn-primary text-white px-4 py-2 mx-2 font-weight-bold \"\n            >\n              IN PHIẾU THẨM XÉT\n            </div>\n          </div>\n        </div>\n      </LoadingOverlay>\n    </div>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-thu-ly-duoc-si\\ChiTietHoSoThuLyDuThaoCapPhep.js",["1530","1531","1532","1533","1534","1535","1536","1537"],[],"import { enAU } from \"date-fns/locale\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers\";\n\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { toast } from \"react-toastify\";\nimport api from \"../../../configs/api\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport { BangCap } from \"../duoc-si/bang-cap/BangCap\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { PageTitle } from \"../../../../_metronic/layout/core\";\nimport { ThongTinCapCCHN } from \"./components/ThongTinCapCCHN\";\nimport {\n  commonActions,\n  doiTuong,\n  selectDataCVHD,\n  selectDataVT,\n  selectIsSubmitted,\n  selectListIdCheckedPVCM,\n  selectListIdCheckedVTHN,\n} from \"../../../redux-module/common/commonSlice\";\n\nimport ThongTinCaNhanCapNhat from \"./components/thong-tin-ca-nhan/ThongTinCaNhanCapNhat\";\nimport {\n  selectCurrentUser,\n  selectRoleUser,\n} from \"../../../redux-module/auth/authSlice\";\n\nimport moment from \"moment\";\nimport LyDoHeader from \"./components/LyDoHeader\";\nimport PopupCancel from \"../popup/PopupCancel\";\nimport { LichSuThucHanh } from \"../duoc-si/lich-su-thuc-hanh/LichSuThucHanh\";\nimport { LichSuDaoTao } from \"../duoc-si/lich-su-dao-tao/LichSuDaoTao\";\nimport { PhamViVaViTriChuyenMon } from \"./components/PhamViChuyenMon\";\nimport { In } from \"../In/In\";\n\nLoadingOverlay.propTypes = undefined;\nexport function ChiTietHoSoThuLyDuThaoCapPhep(props) {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const currentUser = useSelector(selectCurrentUser);\n  const roleUser = useSelector(selectRoleUser);\n  const hsDoiTuong = useSelector(doiTuong);\n  const DataCVHD = useSelector(selectDataCVHD);\n  const DataVT = useSelector(selectDataVT);\n  const ListIdCheckedPVCM = useSelector(selectListIdCheckedPVCM);\n  const listIdCheckedVTHN = useSelector(selectListIdCheckedVTHN);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [validateCapNhatTT, setValidateCapNhatTT] = useState(false);\n  const [validateVTHNvsPVCM, setValidateVTHNvsPVCM] = useState(false);\n  const [jsonUpdate, setJsonUpdate] = useState();\n  const [thongTinHoSo, setThongTinHoSo] = useState({});\n  const [TypeHoSo, setTypeHoSo] = useState(\"\");\n  const [DeNghi, setDeNghi] = useState(\"\");\n  const [yKienLanhDao, setYKienLanhDao] = useState([]);\n  const [ListLoaiChungChi, setListLoaiChungChi] = useState([]);\n  //open modal Cancel\n  const [isvisibleCancel, setIsvisibleCancel] = useState(false);\n  const closeModalCancel = () => setIsvisibleCancel(false);\n  const showModalCancel = () => setIsvisibleCancel(true);\n\n  //validate thêm vị trí hành nghề\n  const [form, setForm] = useState({});\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    if (id) {\n      getThongTinHoSo(id);\n    }\n  }, []);\n\n  useEffect(() => {\n    setJsonUpdate({ ...hsDoiTuong, trang_thai_ho_so: 4 });\n  }, [hsDoiTuong]);\n\n  const setField = (field, value) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n    dispatch(\n      commonActions.setDoiTuong({\n        key: field,\n        value,\n      })\n    );\n    if (!!errors[field])\n      setErrors({\n        ...errors,\n        [field]: null,\n      });\n  };\n  const inHoSo = async (id) => {\n    let file_type = \"PhieuDuThao\";\n    let file_name = \"HoSoPhieuDuThao\";\n\n    if (file_type !== \"\") {\n      await setIsLoading(true);\n      axios\n        .post(api.API_YEU_CAU, {\n          file_type,\n          file_name,\n          url: \"http://10.14.141.29:7791/yeucau\" + \"/phieuduthao/\" + id,\n        })\n        .then(async ({ data }) => {\n          if (data?.path[0]) {\n            const url = window.location.origin + \"/in-ho-so\";\n            localStorage.setItem(\"url\", data?.path[0]);\n            window.open(url, \"_blank\");\n          }\n        })\n        .catch((error) => {\n          toast.error(error?.response?.data?.msg, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            toastId: \"error\",\n          });\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    } else {\n      toast.error(\"Lỗi thông tin hồ sơ\", {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        toastId: \"error\",\n      });\n    }\n  };\n  const inHoSoYeuCau = async (id) => {\n    let file_type = \"VanBanBoSung\";\n    let file_name = \"HoSoVanBanBoSung\";\n\n    if (file_type !== \"\") {\n      await setIsLoading(true);\n      axios\n        .post(api.API_YEU_CAU, {\n          file_type,\n          file_name,\n          url: \"http://10.14.141.29:7791/yeucau\" + \"/vanbanbosung/\" + id,\n        })\n        .then(async ({ data }) => {\n          if (data?.path[0]) {\n            const url = window.location.origin + \"/in-ho-so\";\n            localStorage.setItem(\"url\", data?.path[0]);\n            window.open(url, \"_blank\");\n          }\n        })\n        .catch((error) => {\n          toast.error(error?.response?.data?.msg, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            toastId: \"error\",\n          });\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    } else {\n      toast.error(\"Lỗi thông tin hồ sơ\", {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        toastId: \"error\",\n      });\n    }\n  };\n\n  const getThongTinHoSo = async (id) => {\n    await setIsLoading(true);\n    axios\n      .get(api.API_DETAIL_HO_SO_THU_LY_DUOC_SI + \"/\" + id)\n      .then(async ({ data }) => {\n        const { result } = data;\n        if (result) {\n          setThongTinHoSo(result);\n          setTypeHoSo(result?.trang_thai_ho_so);\n          setDeNghi(result?.de_nghi);\n          setField(\"noi_dung_de_nghi\", result?.yeu_cau_cchnd?.noi_dung_de_nghi);\n          setField(\n            \"noi_dung_tham_xet\",\n            result?.yeu_cau_cchnd?.noi_dung_tham_xet\n          );\n          setYKienLanhDao(result?.yeu_cau_cchnd?.y_kien_lanh_dao || []);\n          getLoaiChungChi(result?.thu_tuc?.doi_tuong);\n        }\n      })\n      .catch((error) => {\n        toast.error(\"Lấy thông tin chứng chỉ không thành công\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n        navigate(\"/error/404\");\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const getLoaiChungChi = (value) => {\n    axios\n      .get(api.API_GET_LOAI_CHUNG_CHI + \"/\" + value)\n      .then(async ({ data }) => {\n        setListLoaiChungChi(data?.results);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => { });\n  };\n\n  const updateHoSo = (value) => {\n    const { noi_dung_tham_xet, noi_dung_de_nghi } = form;\n    if (validateCapNhatTT === true && validateVTHNvsPVCM === true) {\n      setIsLoading(true);\n\n      const jsonUpdateHoSo = {\n        ...hsDoiTuong,\n        vi_tri_hanh_nghe_ids: listIdCheckedVTHN,\n        pham_vi_hoat_dong_chuyen_mon_ids: ListIdCheckedPVCM,\n        trang_thai_ho_so: value,\n        noi_dung_tham_xet,\n        noi_dung_de_nghi,\n        y_kien_lanh_dao: yKienLanhDao,\n      };\n\n      axios\n        .put(\n          api.API_YEU_CAU_CHUNG_CHI_HANH_NGHE + \"/update_du_thao/\" + id,\n          jsonUpdateHoSo\n        )\n        .then(async ({ data }) => {\n          toast.success(data?.msg, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            toastId: \"success\",\n          });\n          navigate(0);\n        })\n        .catch((error) => {\n          toast.error(error?.data?.errors, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            toastId: \"error\",\n          });\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  };\n\n  const updateHoSoCVHD = (value) => {\n    const { noi_dung_tham_xet, noi_dung_de_nghi } = form;\n\n    if (DataCVHD.hoi_dong_id === null || DataCVHD.hoi_dong_id === \"\") {\n      if (roleUser[0]?.ten_en === \"chuyenvienhoidong\") {\n        toast.error(\"Vui lòng chọn hội đồng\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      }\n    } else {\n      setIsLoading(true);\n      const jsonUpdateHoSoCVHD = {\n        ...DataCVHD,\n        ngay_hieu_luc: new Date(DataCVHD.ngay_hieu_luc).getTime(),\n        ngay_het_han: new Date(DataCVHD.ngay_het_han).getTime(),\n        ngay_het_han_cchnd_cu: new Date(\n          DataCVHD.ngay_het_han_cchnd_cu\n        ).getTime(),\n        so_cchnd: String(DataCVHD.so_cchnd),\n        trang_thai_ho_so: value,\n        noi_dung_tham_xet,\n        noi_dung_de_nghi,\n        yeu_cau_phien_dich: true,\n      };\n      axios\n        .put(\n          api.API_YEU_CAU_CHUNG_CHI_HANH_NGHE + \"/trinh_hoi_dong/\" + id,\n          jsonUpdateHoSoCVHD\n        )\n        .then(async ({ data }) => {\n          toast.success(data?.msg, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            toastId: \"success\",\n          });\n          navigate(0);\n        })\n        .catch((error) => {\n          toast.error(error?.data?.errors, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            toastId: \"error\",\n          });\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  };\n\n  const updateHoSoVT = (value) => {\n    setIsLoading(true);\n    const json = {\n      ...DataVT,\n      ids: [`${id}`],\n      trang_thai_ho_so: value,\n      ngay_quyet_dinh: new Date(DataVT.ngay_quyet_dinh).getTime(),\n    };\n    axios\n      .put(api.API_DUYET_MULTI_YEU_CAU_CHUNG_CHI, json)\n      .then(async ({ data }) => {\n        await toast.success(data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const usersBreadcrumbs = [\n    {\n      title: \"Trang chủ\",\n      path: \"/\",\n      isSeparator: false,\n      isActive: false,\n    },\n    {\n      title: \"\",\n      path: \"\",\n      isSeparator: true,\n      isActive: false,\n    },\n  ];\n  const renderBtnBottom = () => {\n    switch (roleUser[0]?.ten_en) {\n      case \"chuyenvien\":\n        return (\n          <div className=\"col-12 mt-4 mb-5 text-center\">\n            {TypeHoSo === \"4\" || TypeHoSo === \"5\" ? (\n              <>\n                <div className=\"col-12 mt-4 mb-5 text-center\">\n                  <div\n                    onClick={() => {\n                      navigate(-1);\n                    }}\n                    className=\"btn bg-primary2 text-white px-4 py-2 mx-2 font-weight-bold\"\n                  >\n                    QUAY LẠI\n                  </div>\n                  <div\n                    onClick={() => {\n                      dispatch(commonActions.setIsSubmitted(true))\n                      updateHoSo(thongTinHoSo?.trang_thai_ho_so);\n                    }}\n                    className=\"btn btn-success text-white px-4 py-2 mx-2 font-weight-bold \"\n                  >\n                    LƯU\n                  </div>\n                  <div\n                    onClick={() => {\n                      updateHoSo(\"6\");\n                    }}\n                    className=\"btn btn-primary text-white px-4 py-2 mx-2 font-weight-bold \"\n                  >\n                    TRÌNH LÃNH ĐẠO\n                  </div>\n                  <div\n                    onClick={() => {\n                      inHoSo(thongTinHoSo?.yeu_cau_cchnd?.id);\n                    }}\n                    className=\"btn bg-blue2 text-white px-4 py-2 mx-2 font-weight-bold \"\n                  >\n                    IN PHIẾU DỰ THẢO\n                  </div>\n                </div>\n              </>\n            ) : (\n              <div\n                onClick={() => {\n                  navigate(-1);\n                }}\n                className=\"btn bg-primary2 text-white px-4 py-2 mx-2 font-weight-bold\"\n              >\n                QUAY LẠI\n              </div>\n            )}\n          </div>\n        );\n      case \"lanhdao\":\n        return (\n          <div className=\"col-12 mt-4 mb-5 text-center\">\n            {TypeHoSo === \"6\" ? (\n              <>\n                <div\n                  onClick={() => {\n                    navigate(-1);\n                  }}\n                  className=\"btn bg-primary2 text-white px-4 py-2 mx-2 font-weight-bold\"\n                >\n                  QUAY LẠI\n                </div>\n                <div\n                  onClick={() => {\n                    updateHoSo(thongTinHoSo?.trang_thai_ho_so);\n                  }}\n                  className=\"btn btn-success text-white px-4 py-2 mx-2 font-weight-bold \"\n                >\n                  LƯU\n                </div>\n                <div\n                  onClick={() => {\n                    updateHoSo(\"9\");\n                  }}\n                  className=\"btn btn-primary text-white px-4 py-2 mx-2 font-weight-bold \"\n                >\n                  CHUYỂN CHUYÊN VIÊN HỘI ĐỒNG\n                </div>\n                <div\n                  onClick={() => {\n                    navigate(\n                      `/admin/danhsach-hoso-thuly-duocsi/yeucaubosung/${id}`\n                    );\n                  }}\n                  className=\"btn btn-warning text-white px-4 py-2 mx-2 font-weight-bold \"\n                >\n                  BỔ SUNG\n                </div>\n                <div\n                  onClick={() => {\n                    showModalCancel();\n                  }}\n                  className=\"btn btn-danger text-white px-4 py-2 mx-2 font-weight-bold \"\n                >\n                  TỪ CHỐI\n                </div>\n\n              </>\n            ) : TypeHoSo === \"12\" ? (\n              <>\n                <div\n                  onClick={() => {\n                    navigate(-1);\n                  }}\n                  className=\"btn bg-primary2 text-white px-4 py-2 mx-2 font-weight-bold\"\n                >\n                  QUAY LẠI\n                </div>\n                <div\n                  onClick={() => {\n                    updateHoSo(\"5\");\n                  }}\n                  className=\"btn btn-primary text-white px-4 py-2 mx-2 font-weight-bold \"\n                >\n                  ĐỒNG Ý BỔ SUNG\n                </div>\n\n                <div\n                  onClick={() => {\n                    updateHoSo(\"4\");\n                  }}\n                  className=\"btn btn-danger text-white px-4 py-2 mx-2 font-weight-bold \"\n                >\n                  CHUYỂN CHUYÊN VIÊN THỤ LÝ\n                </div>\n\n              </>\n            ) : (\n              <>\n                <div\n                  onClick={() => {\n                    navigate(-1);\n                  }}\n                  className=\"btn bg-primary2 text-white px-4 py-2 mx-2 font-weight-bold\"\n                >\n                  QUAY LẠI\n                </div>\n              </>\n            )}\n          </div>\n\n        );\n      case \"chuyenvienhoidong\":\n        return (\n          <div className=\"col-12 mt-4 mb-5 text-center\">\n            {TypeHoSo === \"9\" ? (\n              <>\n                <div\n                  onClick={() => {\n                    navigate(-1);\n                  }}\n                  className=\"btn bg-primary2 text-white px-4 py-2 mx-2 font-weight-bold\"\n                >\n                  QUAY LẠI\n                </div>\n                <div\n                  onClick={() => {\n                    updateHoSoCVHD(thongTinHoSo?.trang_thai_ho_so);\n                  }}\n                  className=\"btn btn-success text-white px-4 py-2 mx-2 font-weight-bold \"\n                >\n                  LƯU\n                </div>\n                <div\n                  onClick={() => {\n                    updateHoSoCVHD(\"2\");\n                  }}\n                  className=\"btn btn-primary text-white px-4 py-2 mx-2 font-weight-bold \"\n                >\n                  CHUYỂN CHUYÊN VIÊN THỤ LÝ\n                </div>\n                <div\n                  onClick={() => {\n                    updateHoSoCVHD(\"10\");\n                  }}\n                  className=\"btn btn-warning text-white px-4 py-2 mx-2 font-weight-bold \"\n                >\n                  CHUYỂN VĂN THƯ CẤP SỐ\n                </div>\n                <div\n                  onClick={() => {\n                    inHoSo(thongTinHoSo?.yeu_cau_cchnd?.id);\n                  }}\n                  className=\"btn bg-blue2 text-white px-4 py-2 mx-2 font-weight-bold \"\n                >\n                  IN PHIẾU DỰ THẢO\n                </div>\n              </>\n            ) : (\n              <div\n                onClick={() => {\n                  navigate(-1);\n                }}\n                className=\"btn bg-primary2 text-white px-4 py-2 mx-2 font-weight-bold\"\n              >\n                QUAY LẠI\n              </div>\n            )}\n          </div>\n        );\n      case \"vanthu\":\n        return (\n          <div className=\"col-12 mt-4 mb-5 text-center\">\n            {TypeHoSo === \"10\" ? (\n              <>\n                <div\n                  onClick={() => {\n                    navigate(-1);\n                  }}\n                  className=\"btn bg-primary2 text-white px-4 py-2 mx-2 font-weight-bold\"\n                >\n                  QUAY LẠI\n                </div>\n                <div\n                  onClick={() => {\n                    updateHoSoVT(thongTinHoSo?.trang_thai_ho_so);\n                  }}\n                  className=\"btn btn-success text-white px-4 py-2 mx-2 font-weight-bold \"\n                >\n                  LƯU\n                </div>\n                <div\n                  onClick={() => {\n                    updateHoSoVT(\"11\");\n                  }}\n                  className=\"btn btn-primary text-white px-4 py-2 mx-2 font-weight-bold \"\n                >\n                  HOÀN THÀNH\n                </div>\n              </>\n            ) : (\n              <div\n                onClick={() => {\n                  navigate(-1);\n                }}\n                className=\"btn bg-primary2 text-white px-4 py-2 mx-2 font-weight-bold\"\n              >\n                QUAY LẠI\n              </div>\n            )}\n          </div>\n        );\n      default:\n        break;\n    }\n  };\n\n  const callBackValidateTTCN = () => {\n    setValidateCapNhatTT(false);\n  };\n\n  const callBackValidateVTHNvsPVCM = () => {\n    setValidateVTHNvsPVCM(false);\n  };\n\n  const addRow = async () => {\n    const hoTen = yKienLanhDao[yKienLanhDao?.length - 1]?.ho_ten;\n    const noiDung = yKienLanhDao[yKienLanhDao?.length - 1]?.noi_dung;\n    console.log(yKienLanhDao);\n\n    if ((!noiDung || !hoTen) && yKienLanhDao?.length >= 1) {\n      toast.error(\"Vui lòng nhập đầy đủ ý kiến lãnh đạo.\", {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        toastId: \"error\",\n      });\n    } else {\n      let newRow = initRow;\n      var stt = 0;\n      if (yKienLanhDao.length === 0) {\n        stt = 1;\n      } else {\n        stt = yKienLanhDao[yKienLanhDao.length - 1].stt + 1;\n      }\n      newRow.stt = stt;\n      await setYKienLanhDao(yKienLanhDao.concat(newRow));\n    }\n  };\n\n  const setRowDateValue = async (e, ndth, type) => {\n    const dataRow = {\n      ...ndth,\n      [type]: e,\n    };\n    const updatedData = yKienLanhDao.map((x) =>\n      x.stt === ndth.stt ? { ...x, ...dataRow } : x\n    );\n    await setYKienLanhDao(updatedData);\n  };\n\n  const initRow = {\n    stt: 1,\n    ho_ten: currentUser.ho_ten ? currentUser.ho_ten : \"\",\n    noi_dung: \"\",\n    thoi_gian: new Date(),\n  };\n\n  const removeRow = (stt) => {\n    const formArray = yKienLanhDao.filter((row) => row.stt !== stt);\n    setYKienLanhDao(formArray);\n  };\n\n  const renderTable = (arrayTest) => {\n    return (\n      <>\n        {yKienLanhDao?.length > 0 ? (\n          <table className=\"table mt-4\">\n            <thead>\n              <tr>\n                <th\n                  className=\"fw-bolder px-3 text-center\"\n                  style={{ width: \"4%\" }}\n                >\n                  STT\n                </th>\n                <th className=\"fw-bolder px-3\" style={{ width: \"10%\" }}>\n                  Họ tên\n                </th>\n                <th className=\"fw-bolder px-3\" style={{ width: \"70%\" }}>\n                  Nội dung ý kiến\n                </th>\n                <th className=\"fw-bolder px-3\">Thời gian</th>\n                <th className=\"fw-bolder px-3\"></th>\n              </tr>\n            </thead>\n            <tbody>\n              {arrayTest.map((ykld, index) => (\n                <tr key={ykld.stt}>\n                  <td\n                    className=\"px-3 py-0 text-center\"\n                    style={{ verticalAlign: \"middle\" }}\n                  >\n                    <span className=\"fw-bold\">{ykld.stt}</span>\n                  </td>\n                  <td className=\"px-3 py-0\" style={{ verticalAlign: \"middle\" }}>\n                    <span className=\"fw-bolder\">{ykld.ho_ten}</span>\n                  </td>\n                  <td className=\"px-3 py-0\">\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Nhập nội dung ý kiến\"\n                      style={{\n                        fontSize: 14,\n                        fontWeight: 400,\n                        height: \"38px\",\n                        margin: \"10px 0 10px 0\",\n                      }}\n                      onChange={(e) => {\n                        setRowDateValue(e.target.value, ykld, \"noi_dung\");\n                      }}\n                      value={ykld?.noi_dung}\n                    />\n                  </td>\n                  <td className=\"px-3 py-0\" style={{ verticalAlign: \"middle\" }}>\n                    <span className=\"fw-bolder\">\n                      {moment(new Date(ykld?.thoi_gian)).format(\n                        \"hh:mm DD/MM/YYYY\"\n                      )}\n                    </span>\n                  </td>\n                  <td\n                    className=\"px-3 py-0\"\n                    style={{ verticalAlign: \"middle\", textAlign: \"center\" }}\n                  >\n                    <button\n                      className=\"btn btn-danger px-0 py-0 mb-4\"\n                      style={{\n                        width: \"38px\",\n                        height: \"38px\",\n                        fontSize: \"12px\",\n                        margin: \"10px 0 10px 0\",\n                      }}\n                      onClick={() => {\n                        removeRow(ykld.stt);\n                      }}\n                    >\n                      X\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        ) : null}\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <LocalizationProvider dateAdapter={AdapterDateFns} locale={enAU}>\n        <PageTitle breadcrumbs={usersBreadcrumbs}>Chi tiết hồ sơ</PageTitle>\n        <LoadingOverlay spinner active={isLoading} text=\"Đang tải dữ liệu ...\">\n          <LyDoHeader thongTinHoSo={thongTinHoSo} />\n          {/* Thủ tục */}\n          <div className=\"card py-6 px-6 mx-3 my-3\">\n            <label className=\"fw-bold fs-5\">THỦ TỤC</label>\n            <div className=\"text py-2\">\n              {thongTinHoSo?.thu_tuc ? thongTinHoSo?.thu_tuc?.ten : \"\"}\n            </div>\n          </div>\n          {/* THÔNG TIN CÁ NHÂN */}\n          <ThongTinCaNhanCapNhat\n            validate={validateCapNhatTT}\n            changeValidate={callBackValidateTTCN}\n            data={thongTinHoSo?.yeu_cau_cchnd?.doi_tuong}\n          />\n          {/* BẰNG CẤP  */}\n          <BangCap userId={thongTinHoSo?.user?.id} />\n          {/* THỰC HÀNH TẠI CƠ SỞ DƯỢC */}\n          <LichSuThucHanh userId={thongTinHoSo?.user?.id} />\n          {/* ĐÀO TẠO LIÊN TỤC */}\n          <LichSuDaoTao userId={thongTinHoSo?.user?.id} />\n\n          <div className=\"card py-7 px-7 mx-3 my-3\">\n            <PhamViVaViTriChuyenMon\n              validate={validateVTHNvsPVCM}\n              changeValidate={callBackValidateVTHNvsPVCM}\n              hideGhiChu={true}\n              dataDMPVCM={thongTinHoSo?.danh_muc_pham_vi_chuyen_mon}\n              dataVTHN={thongTinHoSo?.danh_muc_vi_tri_hanh_nghe}\n              listCheckedDMPVCM={\n                thongTinHoSo?.yeu_cau_cchnd?.pham_vi_chuyen_mon?.id || []\n              }\n              listCheckedVTHN={\n                thongTinHoSo?.yeu_cau_cchnd?.vi_tri_hanh_nghe_cchn?.id || []\n              }\n            />\n          </div>\n\n          <ThongTinCapCCHN\n            loaiThuTuc={thongTinHoSo?.thu_tuc?.loai}\n            data={thongTinHoSo?.yeu_cau_cchnd}\n            ListLoaiChungChi={ListLoaiChungChi}\n          />\n\n          {/* KẾT QUẢ THẨM XÉT */}\n          <div className=\"card-box py-6 px-6 mx-3 my-3\">\n            <label className=\"fw-bold fs-5 mb-2\">KẾT QUẢ THẨM XÉT</label>\n            <div className=\"col-12 d-flex px-0\">\n              <div className=\"col-6 pl-1\">\n                <label>1. Nội dung thẩm xét, lý do</label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows={3}\n                  style={{ fontSize: 14, fontWeight: 500 }}\n                  value={\n                    form.noi_dung_tham_xet === null\n                      ? \"\"\n                      : form.noi_dung_tham_xet\n                  }\n                  onChange={(e) => {\n                    setField(\"noi_dung_tham_xet\", e.target.value);\n                  }}\n                  isInvalid={!!errors.noi_dung_tham_xet}\n                />\n              </div>\n              <div className=\"col-6 px-1\">\n                <label>2. Nội dung đề nghị</label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows={3}\n                  style={{ fontSize: 14, fontWeight: 500 }}\n                  value={\n                    form.noi_dung_de_nghi === null ? \"\" : form.noi_dung_de_nghi\n                  }\n                  onChange={(e) => {\n                    setField(\"noi_dung_de_nghi\", e.target.value);\n                  }}\n                  isInvalid={!!errors.noi_dung_de_nghi}\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Ý KIẾN LÃNH ĐẠO */}\n          {roleUser[0]?.ten_en === \"lanhdao\" ? (\n            <div className=\"card-box py-6 px-6 mx-3 my-3\">\n              <div className=\"row pb-2\">\n                <div className=\"col-md-6 col-sm-6\">\n                  <label className=\"fw-bold fs-5\">\n                    Ý KIẾN CỦA LÃNH ĐẠO PHÒNG\n                  </label>\n                </div>\n                <div className=\"col-md-6 col-sm-6 text-end\">\n                  <button\n                    className=\"btn btn-primary ms-3 px-1 py-2 fw-normal\"\n                    style={{ width: \"120px\" }}\n                    onClick={() => {\n                      addRow();\n                    }}\n                  >\n                    THÊM MỚI\n                  </button>\n                </div>\n              </div>\n              {renderTable(yKienLanhDao)}\n            </div>\n          ) : null}\n\n          <div className=\"row w-100\">{renderBtnBottom()}</div>\n        </LoadingOverlay>\n      </LocalizationProvider>\n      <PopupCancel\n        // data={}\n        id={id}\n        title={\"Xác nhận từ chối\"}\n        show={isvisibleCancel}\n        onHide={closeModalCancel}\n      />\n    </div>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-phe-duyet-to-chuc\\DanhSachHoSoPheDuyetToChuc.js",["1538","1539","1540","1541","1542","1543","1544","1545","1546","1547","1548","1549","1550","1551"],[],"import { vi } from \"date-fns/locale\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider, DesktopDatePicker } from \"@mui/x-date-pickers\";\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Dropdown, Form } from \"react-bootstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Oval } from \"react-loader-spinner\";\nimport { TextField } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport { toast } from \"react-toastify\";\nimport { KTCard, useDebounce } from \"../../../../_metronic/helpers\";\nimport { PageTitle } from \"../../../../_metronic/layout/core\";\nimport api from \"../../../configs/api\";\nimport { TrangThaiHoSo } from \"../../../data\";\n\nexport function DanhSachHoSoPheDuyetToChuc() {\n  const navigate = useNavigate();\n  const [listHoSoThuLy, setListHoSoThuLy] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n  const [page, setPage] = useState(1);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [stt, setStt] = useState(0);\n  const [trang_thai, setTrang_thai] = useState(true);\n\n  //open modal delete\n  const [isvisibleDelete, setIsvisibleDelete] = useState(false);\n  const [idDelete, setIdDelete] = useState(\"\");\n  const closeModalDelete = () => setIsvisibleDelete(false);\n  const showModalDelete = () => setIsvisibleDelete(true);\n  const [searchMaHoSo, setSearchMaHoSo] = useState(\"\");\n  const [searchHoTen, setSearchHoTen] = useState(\"\");\n  const [dateHanDen, setDateHanDen] = useState(new Date());\n  const [dateHanTu, setDateHanTu] = useState(new Date());\n  const [dateNopDen, setDateNopDen] = useState(new Date());\n  const [dateNopTu, setDateNopTu] = useState(new Date());\n  const [ListDMHetHan, setListDMHetHan] = useState([]);\n  const [ListDMThuTuc, setListDMThuTuc] = useState([]);\n  const [valueThuTuc, setValueThuTuc] = useState({\n    label: \"Tất cả\",\n    value: \"\",\n  });\n  const [valueTrangThai, setValueTrangThai] = useState({\n    label: \"Tất cả\",\n    value: \"\",\n  });\n  const [valueTrangThaiHetHan, setValueTrangThaiHetHan] = useState({\n    label: \"Tất cả\",\n    value: \"\",\n  });\n  const [ListDMTrangThaiHoSo, setListDMTrangThaiHoSo] = useState([]);\n  const [selectedRows, setSelectedRows] = React.useState(false);\n  const [toggledClearRows, setToggleClearRows] = React.useState(false);\n\n  const handleChange = ({ selectedRows }) => {\n    setSelectedRows(selectedRows);\n  };\n\n  // Toggle the state so React Data Table changes to clearSelectedRows are triggered\n  const handleClearRows = () => {\n    setToggleClearRows(!toggledClearRows);\n  };\n\n  const debouncedSearchMaHoSo = useDebounce(searchMaHoSo, 1000);\n  const debouncedSearchHoTen = useDebounce(searchHoTen, 1000);\n\n  useEffect(\n    () => {\n      getListDM();\n    },\n    [] // Only call effect if debounced search term changes\n  );\n\n  useEffect(\n    () => {\n      if (\n        (debouncedSearchMaHoSo !== undefined && searchMaHoSo !== undefined) ||\n        (debouncedSearchHoTen !== undefined && searchMaHoSo !== undefined)\n      ) {\n        getList({\n          page_number: 1,\n          ma_ho_so: debouncedSearchMaHoSo,\n          ho_ten: debouncedSearchHoTen,\n        });\n      }\n    },\n    [debouncedSearchMaHoSo, debouncedSearchHoTen] // Only call effect if debounced search term changes\n  );\n\n  const getListDM = () => {\n    axios\n      .get(api.API_DANH_MUC_HO_SO_THU_LY_DUOC_SI)\n      .then(async ({ data }) => {\n        let { het_hans } = data?.results;\n        let { thu_tuc } = data?.results;\n        let { trang_thai_ho_so } = data?.results;\n        het_hans.unshift({\n          label: \"Tất cả\",\n          value: \"\",\n        });\n        thu_tuc.unshift({\n          label: \"Tất cả\",\n          value: \"\",\n        });\n        trang_thai_ho_so.unshift({\n          label: \"Tất cả\",\n          value: \"\",\n        });\n        setListDMHetHan(het_hans);\n        setListDMThuTuc(thu_tuc);\n        setListDMTrangThaiHoSo(trang_thai_ho_so);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {});\n  };\n\n  const getList = ({\n    page_number = page,\n    size = perPage,\n    ma_ho_so = searchMaHoSo,\n    ho_ten = searchHoTen,\n    // nop_tu = String(new Date(dateNopTu).getTime()),\n    // nop_den = String(new Date(dateNopDen).getTime()),\n    // han_tu = String(new Date(dateHanTu).getTime()),\n    // han_den = String(new Date(dateHanDen).getTime()),\n    nop_tu = \"\",\n    nop_den = \"\",\n    han_tu = \"\",\n    han_den = \"\",\n    thu_tuc_id = valueThuTuc?.value || \"\",\n    trang_thai = valueTrangThai?.value || \"\",\n    trang_thai_het_han = valueTrangThaiHetHan?.value || \"\",\n  }) => {\n    setIsLoading(true);\n    axios\n      .post(\n        api.API_LIST_HO_SO_THU_LY_DUOC_SI +\n          `?page=${page_number}&per_page=${size}`,\n        {\n          ma_ho_so,\n          ho_ten,\n          nop_tu,\n          nop_den,\n          han_tu,\n          han_den,\n          thu_tuc_id,\n          trang_thai,\n          trang_thai_het_han,\n        }\n      )\n      .then(async ({ data }) => {\n        setListHoSoThuLy(data?.results);\n        setTotalRows(data?.total);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  // handle api\n\n  const resetState = async () => {\n    await setSearchHoTen(\"\");\n    await setSearchMaHoSo(\"\");\n    await setDateHanDen(null);\n    await setDateHanTu(null);\n    await setDateNopDen(null);\n    await setDateNopTu(null);\n    await setValueThuTuc({\n      label: \"Tất cả\",\n      value: \"\",\n    });\n    await setValueTrangThai({\n      label: \"Tất cả\",\n      value: \"\",\n    });\n    await setValueTrangThaiHetHan({\n      label: \"Tất cả\",\n      value: \"\",\n    });\n  };\n\n  // DETAIL\n  const detail = async (data) => {\n    setTrang_thai(data?.trang_thai);\n    setShowUpdate(true);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    await setIsLoading(true);\n    axios\n      .post(\n        api.API_LIST_NOI_TOT_NGHIEP + `?page=${page}&per_page=${newPerPage}`,\n        {}\n      )\n      .then(({ data }) => {\n        if (data?.results) {\n          setListHoSoThuLy(data?.results);\n          setPerPage(newPerPage);\n        }\n      })\n      .catch(() => {})\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const handlePageChange = (page) => {\n    setPage(page);\n    getList({ page_number: page });\n  };\n\n  const handleRowClicked = (row) => {};\n\n  const formatGroupLabel = (listTemp) => (\n    <div style={groupStyles}>\n      <span>{listTemp.ten}</span>\n    </div>\n  );\n\n  const groupStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  };\n  const paginationOptions = {\n    rowsPerPageText: \"Dòng hiển thị\",\n    rangeSeparatorText: \"trên\",\n  };\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: \"solid\",\n        borderTopWidth: \"1px\",\n        borderTopColor: \"#e0e0e0\",\n        borderBottomColor: \"#e0e0e0\",\n      },\n    },\n    headCells: {\n      style: {\n        color: \"#202124\",\n        fontSize: \"16px\",\n      },\n    },\n    rows: {\n      highlightOnHoverStyle: {\n        backgroundColor: \"rgb(230, 244, 244)\",\n        borderBottomColor: \"#FFFFFF\",\n        outline: \"1px solid #FFFFFF\",\n      },\n    },\n    pagination: {\n      style: {\n        border: \"none\",\n      },\n    },\n  };\n  const columns = [\n    {\n      name: \"Mã hồ sơ\",\n      selector: (row) => <span>{row.ma_ho_so}</span>,\n      grow: 1,\n      style: {\n        color: \"#1251ff\",\n        fontSize: \"14px\",\n        fontWeight: 500,\n        width: 300,\n        cursor: \"pointer\",\n      },\n    },\n    {\n      name: \"Họ tên\",\n      selector: (row) => <span>{row.ten_nguoi_yeu_cau}</span>,\n      grow: 1,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Số điện thoại\",\n      selector: (row) => <span>{row?.so_dien_thoai}</span>,\n      grow: 1,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Thủ tục\",\n      selector: (row) => <span>{row.ten_thu_tuc}</span>,\n      grow: 2,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Ngày nộp\",\n      selector: (row) => <span>{row.thoi_gian_nop_ho_so}</span>,\n      grow: 1,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Ngày hết hạn\",\n      selector: (row) => <span>{row.thoi_gian_nop_ho_so}</span>,\n      grow: 1,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Trạng thái\",\n      selector: (row) => <span>{checkStatus(row?.trang_thai_ho_so)}</span>,\n      grow: 1,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      grow: 1.5,\n      cell: (row) => (\n        <div className=\"container my-3\">\n          <button\n            onClick={async () => {}}\n            className=\"btn btn-bg-primary btn-color-white btn-sm\"\n            style={{ marginRight: 5 }}\n          >\n            Xem chi tiết\n          </button>\n        </div>\n      ),\n    },\n  ];\n\n  const checkStatus = (id) => {\n    let status = TrangThaiHoSo.find((e) => e.id === id);\n    return status.name;\n  };\n  const usersBreadcrumbs = [\n    {\n      title: \"Trang chủ\",\n      path: \"/\",\n      isSeparator: false,\n      isActive: false,\n    },\n    {\n      title: \"\",\n      path: \"\",\n      isSeparator: true,\n      isActive: false,\n    },\n  ];\n\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.toggleSelected,\n      style: {\n        backgroundColor: \"#f5f5f5\",\n        userSelect: \"none\",\n      },\n    },\n  ];\n\n  return (\n    <KTCard>\n      {/* <div className=\"page\"> */}\n      <div className=\"container-fluid\" style={{ marginTop: \" 30px\" }}>\n        <PageTitle breadcrumbs={usersBreadcrumbs}>\n          Danh sách hồ sơ chờ phê duyệt\n        </PageTitle>\n        <LocalizationProvider dateAdapter={AdapterDateFns} locale={vi}>\n          <div className=\"card-box\">\n            <div className=\"row mb-7\">\n              <div className=\"row col-12 mb-2\">\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Mã hồ sơ</label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Nhập mã hồ sơ...\"\n                    onChange={(e) => {\n                      setSearchMaHoSo(e.target.value);\n                    }}\n                    style={{ height: 38 }}\n                    value={searchMaHoSo}\n                  />\n                </div>\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Họ tên</label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Nhập họ tên...\"\n                    onChange={(e) => {\n                      setSearchHoTen(e.target.value);\n                    }}\n                    style={{ height: 38 }}\n                    value={searchHoTen}\n                    className=\"text-uppercase\"\n                  />\n                </div>\n\n                <div className=\"row col-6\">\n                  <div className=\"col-3\">\n                    <label className=\"fw-bold fs-6 mb-2\">Nộp từ</label>\n                    <DesktopDatePicker\n                      inputFormat=\"dd/MM/yyyy\"\n                      label=\" \"\n                      value={dateNopTu}\n                      onChange={(value) => {\n                        setDateNopTu(value);\n                        getList({\n                          nop_tu: String(new Date(value).getTime()),\n                        });\n                        console.log(\"log value\", value);\n                      }}\n                      maxDate={new Date()}\n                      renderInput={(params) => (\n                        <TextField size=\"small\" {...params} />\n                      )}\n                    />\n                  </div>\n                  <div className=\"col-3\">\n                    <label className=\"fw-bold fs-6 mb-2\">Nộp đến</label>\n                    <DesktopDatePicker\n                      inputFormat=\"dd/MM/yyyy\"\n                      label=\" \"\n                      value={dateNopDen}\n                      onChange={(value) => {\n                        setDateNopDen(value);\n                        getList({\n                          nop_den: String(new Date(value).getTime()),\n                        });\n                        console.log(\"log value\", value);\n                      }}\n                      maxDate={new Date()}\n                      renderInput={(params) => (\n                        <TextField size=\"small\" {...params} />\n                      )}\n                    />\n                  </div>\n                  <div className=\"col-3\">\n                    <label className=\"fw-bold fs-6 mb-2\">Hạn từ</label>\n                    <DesktopDatePicker\n                      inputFormat=\"dd/MM/yyyy\"\n                      label=\" \"\n                      value={dateHanTu}\n                      onChange={(value) => {\n                        setDateHanTu(value);\n                        getList({\n                          han_tu: String(new Date(value).getTime()),\n                        });\n                        console.log(\"log value\", value);\n                      }}\n                      maxDate={new Date()}\n                      renderInput={(params) => (\n                        <TextField size=\"small\" {...params} />\n                      )}\n                    />\n                  </div>\n                  <div className=\"col-3\">\n                    <label className=\"fw-bold fs-6 mb-2\">Hạn đến</label>\n                    <DesktopDatePicker\n                      inputFormat=\"dd/MM/yyyy\"\n                      label=\" \"\n                      value={dateHanDen}\n                      onChange={(value) => {\n                        setDateHanDen(value);\n                        getList({\n                          han_den: String(new Date(value).getTime()),\n                        });\n                        console.log(\"log value\", value);\n                      }}\n                      maxDate={new Date()}\n                      renderInput={(params) => (\n                        <TextField size=\"small\" {...params} />\n                      )}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row col-12\">\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Thủ tục</label>\n                  <Select\n                    value={valueThuTuc}\n                    key={\"id\"}\n                    options={ListDMThuTuc}\n                    formatGroupLabel={formatGroupLabel}\n                    onChange={(data) => {\n                      setValueThuTuc(data);\n                      getList({ thu_tuc_id: data?.value });\n                    }}\n                  />\n                </div>\n\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Trạng thái</label>\n                  <Select\n                    value={valueTrangThai}\n                    key={\"id\"}\n                    options={ListDMTrangThaiHoSo}\n                    formatGroupLabel={formatGroupLabel}\n                    onChange={(data) => {\n                      setValueTrangThai(data);\n                      getList({ trang_thai: data?.value });\n                    }}\n                  />\n                </div>\n\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Trạng thái thụ lý</label>\n                  <Select\n                    value={valueTrangThaiHetHan}\n                    key={\"id\"}\n                    options={ListDMHetHan}\n                    formatGroupLabel={formatGroupLabel}\n                    onChange={(data) => {\n                      setValueTrangThaiHetHan(data);\n                      getList({ trang_thai_het_han: data?.value });\n                    }}\n                  />\n                </div>\n\n                <div className=\"row col-3\">\n                  <div className=\"col-6 pt-8\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-sm btn-trolai mb-5\"\n                      onClick={() => {\n                        resetState();\n                        getList({\n                          page_number: 1,\n                          han_den: \"\",\n                          han_tu: \"\",\n                          nop_den: \"\",\n                          nop_tu: \"\",\n                          trang_thai: \"\",\n                          trang_thai_het_han: \"\",\n                          thu_tuc_id: \"\",\n                          ho_ten: \"\",\n                          ma_ho_so: \"\",\n                        });\n                      }}\n                    >\n                      Xóa bộ lọc\n                    </button>\n                  </div>\n                  <div className=\"col-6 pt-8\">\n                    <Dropdown>\n                      <Dropdown.Toggle\n                        size=\"sm\"\n                        variant=\"primary\"\n                        id=\"dropdown-basic\"\n                      >\n                        Tùy chọn\n                      </Dropdown.Toggle>\n\n                      <Dropdown.Menu>\n                        <Dropdown.Item href=\"#/action-1\">Duyệt</Dropdown.Item>\n                        <Dropdown.Item href=\"#/action-2\">Bổ sung</Dropdown.Item>\n                        <Dropdown.Item href=\"#/action-3\">Từ chối</Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </div>\n                  {/* <div className=\"col-4 pt-8\"></div> */}\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <DataTable\n                  noDataComponent={\n                    <img\n                      style={{ width: \"30%\", height: \"auto\" }}\n                      src=\"/media/nodata-found.svg\"\n                    />\n                  }\n                  sortServer\n                  progressPending={isLoading}\n                  columns={columns}\n                  data={listHoSoThuLy}\n                  customStyles={customStyles}\n                  pagination\n                  highlightOnHover\n                  pointerOnHover\n                  paginationServer\n                  paginationTotalRows={totalRows}\n                  onChangeRowsPerPage={handlePerRowsChange}\n                  onChangePage={handlePageChange}\n                  selectableRows\n                  onSelectedRowsChange={handleChange}\n                  clearSelectedRows={toggledClearRows}\n                  paginationComponentOptions={paginationOptions}\n                  conditionalRowStyles={conditionalRowStyles}\n                  onRowClicked={(data) => {\n                    detail(data);\n                    handleRowClicked(data);\n                  }}\n                  progressComponent={\n                    <div\n                      style={{\n                        padding: \"24px\",\n                      }}\n                    >\n                      <Oval\n                        arialLabel=\"loading-indicator\"\n                        color=\"#007bff\"\n                        height={40}\n                      />\n                    </div>\n                  }\n                />\n              </div>\n            </div>\n          </div>\n        </LocalizationProvider>\n      </div>\n      {/* </div> */}\n    </KTCard>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-cho-in\\DanhSachHoSoChoIn.js",["1552","1553","1554","1555","1556","1557","1558","1559","1560","1561","1562","1563","1564","1565","1566","1567","1568","1569","1570","1571","1572","1573","1574","1575"],[],"import { TextField } from \"@mui/material\";\nimport { DesktopDatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport axios from \"axios\";\nimport { enAU } from \"date-fns/locale\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { Dropdown, Form, Modal } from \"react-bootstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Oval } from \"react-loader-spinner\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport { toast } from \"react-toastify\";\nimport { KTCard, useDebounce } from \"../../../../_metronic/helpers\";\nimport { PageTitle } from \"../../../../_metronic/layout/core\";\nimport api from \"../../../configs/api\";\nimport { TenChucVu, TrangThaiHoSo } from \"../../../data\";\nimport { selectRoleUser } from \"../../../redux-module/auth/authSlice\";\nimport { In } from \"../In/In\";\nimport { PopupThongTinHoSoDuocSi } from \"../popup/PopupThongTinHoSoDuocSi\";\n// import { PopupThongTinHoSoDuocSiToTrinh } from \"../popup/PopupThongTinHoSoDuocSiToTrinh\";\n// import { PopupThongTinHoSoDuocSiQuyetDinh } from \"../popup/PopupThongTinHoSoDuocSiQuyetDinh\";\n\nexport function DanhSachHoSoChoIn() {\n  const navigate = useNavigate();\n  const roleUser = useSelector(selectRoleUser);\n\n  const [form, setForm] = useState({});\n\n  const [listHoSoThuLy, setListHoSoThuLy] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n  const [page, setPage] = useState(1);\n  const [roles, setRoles] = useState({});\n\n  //open modal chi tiet\n  const [chitiet, setChiTiet] = useState(false);\n  const showModalChiTiet = () => setChiTiet(true);\n  const closeModalChiTiet = () => setChiTiet(false);\n  const [errors, setErrors] = useState({});\n  const [rowData, setRowData] = useState();\n  const [searchMaHoSo, setSearchMaHoSo] = useState(\"\");\n  const [searchHoTen, setSearchHoTen] = useState(\"\");\n  const [dateHanDen, setDateHanDen] = useState(null);\n  const [dateHanTu, setDateHanTu] = useState(null);\n  const [dateNopDen, setDateNopDen] = useState(null);\n  const [dateNopTu, setDateNopTu] = useState(null);\n  const [ListDMHetHan, setListDMHetHan] = useState([]);\n  const [ListDMThuTuc, setListDMThuTuc] = useState([]);\n  const [valueThuTuc, setValueThuTuc] = useState({\n    label: \"Tất cả\",\n    value: \"\",\n  });\n\n  const [valueTrangThai, setValueTrangThai] = useState({\n    label: \"Đang Trình HĐTV Duyệt\",\n    value: \"9\",\n  });\n  const [valueTrangThaiHetHan, setValueTrangThaiHetHan] = useState({\n    label: \"Tất cả\",\n    value: \"\",\n  });\n  const [valueTenChucVu, setValueTenChucVu] = useState({\n    label: \"PHÓ GIÁM ĐỐC\",\n    value: \"PHÓ GIÁM ĐỐC\",\n  });\n  const [ListDMTrangThaiHoSo, setListDMTrangThaiHoSo] = useState([]);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [toggledClearRows, setToggleClearRows] = React.useState(false);\n  // filter\n  const filters = JSON.parse(localStorage.getItem(\"filters\"));\n  const filterHoTen = JSON.parse(localStorage.getItem(\"filterHoTen\"));\n  const filterMaHoSo = JSON.parse(localStorage.getItem(\"filterMaHoSo\"));\n  const filterStatusThuLy = JSON.parse(\n    localStorage.getItem(\"filterTrangThaiThuLy\")\n  );\n\n  const handleChange = ({ selectedRows }) => {\n    setSelectedRows(selectedRows);\n  };\n\n  // Toggle the state so React Data Table changes to clearSelectedRows are triggered\n  const handleClearRows = () => {\n    setToggleClearRows(!toggledClearRows);\n  };\n  const [file_url, setFileUrl] = useState(\"\");\n  const [isvisibleIn, setIsvisibleIn] = useState(false);\n  const closeModalIn = () => setIsvisibleIn(false);\n  const showModalIn = (value) => {\n    setIsvisibleIn(true);\n    inHoSo();\n  };\n  // moldal\n\n  const [listChucVu, setListChucVu] = useState([]);\n  const [modalChucVu, setModalChucVu] = useState(false);\n  const closeModalChucVu = () => setModalChucVu(false);\n  const showModalChucVu = async () => {\n    const arrayIdChecked = selectedRows.map((e) => e.id);\n    if (arrayIdChecked.length === 0) {\n      await toast.error(\"Chưa có hồ sơ nào được chọn\", {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        toastId: \"success\",\n      });\n      setIsLoading(false);\n      return;\n    } else {\n      setModalChucVu(true);\n    }\n  };\n\n  const debouncedSearchMaHoSo = useDebounce(searchMaHoSo, 1000);\n  const debouncedSearchHoTen = useDebounce(searchHoTen, 1000);\n\n  useEffect(\n    () => {\n      getListDM();\n    },\n    [] // Only call effect if debounced search term changes\n  );\n  useEffect(() => {\n    if (roleUser) {\n      setRoles(roleUser[0]?.ten_en);\n    }\n  }, [roleUser]);\n  useEffect(() => {\n    if (filters) {\n      setSearchMaHoSo(filterMaHoSo);\n      setSearchHoTen(filterHoTen);\n      setValueTrangThaiHetHan(filterStatusThuLy);\n      setValueTrangThai(filters);\n      getList({\n        page_number: 1,\n        trang_thai: filters?.value,\n        // ho_ten: searchHoTen,\n        // ma_ho_so: searchMaHoSo,\n        trang_thai_het_han: filterStatusThuLy?.value,\n      });\n\n      localStorage.removeItem(\"filterMaHoSo\");\n      localStorage.removeItem(\"filterHoTen\");\n      localStorage.removeItem(\"filterTrangThaiThuLy\");\n      localStorage.removeItem(\"filters\");\n    }\n  }, []);\n\n  useEffect(\n    () => {\n      if (!filters || !filterStatusThuLy) {\n        if (\n          (debouncedSearchMaHoSo !== undefined && searchMaHoSo !== undefined) ||\n          (debouncedSearchHoTen !== undefined && searchMaHoSo !== undefined)\n        ) {\n          getList({\n            page_number: 1,\n            ma_ho_so: debouncedSearchMaHoSo,\n            ho_ten: debouncedSearchHoTen,\n          });\n        }\n      }\n    },\n    [debouncedSearchMaHoSo, debouncedSearchHoTen] // Only call effect if debounced search term changes\n  );\n  const resetStateModalChucVu = () => {\n    setField(\"ten_nguoi_ky\", \"\");\n  };\n\n  const setField = (field, value) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n    if (!!errors[field])\n      setErrors({\n        ...errors,\n        [field]: null,\n      });\n  };\n\n  const findFormErrors = () => {\n    const { ten_nguoi_ky } = form;\n    const newErrors = {};\n    // name errors\n    if (!ten_nguoi_ky || ten_nguoi_ky === \"\")\n      newErrors.ten_nguoi_ky = \"Tên người ký không được bỏ trống!\";\n    return newErrors;\n  };\n\n  const inHoSo = async () => {\n    const newErrors = findFormErrors();\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n    } else {\n      setIsLoading(true);\n      const { ids, ten_nguoi_ky } = form;\n\n      let file_type = \"FormInList\";\n      let file_name = \"HoSoFormInList\";\n      const arrayIdChecked = selectedRows.map((e) => e.id);\n      const json = {\n        ids: arrayIdChecked,\n        file_type,\n        file_name,\n        url: \"http://10.14.141.29:7791/yeucau/formInList\",\n        ten_chuc_vu: valueTenChucVu.label,\n        ten_nguoi_ky,\n      };\n      if (file_type !== \"\") {\n        await setIsLoading(true);\n        axios\n          .post(api.API_YEU_CAU + \"?many=true\", json)\n          .then(async ({ data }) => {\n            // setFileUrl(data?.path[0]);\n            // window.open(file_url, \"_blank\", \"noopener,noreferrer\");\n            // console.log(data?.path[0]);\n            if (data?.path[0]) {\n              const url = window.location.origin + \"/in-ho-so\";\n              localStorage.setItem(\"url\", data?.path[0]);\n              window.open(url, \"_blank\");\n            }\n            // resetStateModalChucVu()\n          })\n          .catch((error) => {\n            toast.error(error?.response?.data?.msg, {\n              position: \"top-right\",\n              autoClose: 2000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n              toastId: \"error\",\n            });\n          })\n          .finally(() => {\n            setIsLoading(false);\n          });\n      } else {\n        toast.error(\"Lỗi thông tin hồ sơ\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      }\n    }\n  };\n  const inHoSoToTrinh = async () => {\n    const newErrors = findFormErrors();\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n    } else {\n      setIsLoading(true);\n      const { ids, ten_nguoi_ky } = form;\n\n      let file_type = \"FormInListToTrinh\";\n      let file_name = \"HoSoFormInListToTrinh\";\n      const arrayIdChecked = selectedRows.map((e) => e.id);\n      const json = {\n        ids: arrayIdChecked,\n        file_type,\n        file_name,\n        url: \"http://10.14.141.29:7791/yeucau/danhsachCapLaiCCHND\",\n        ten_chuc_vu: valueTenChucVu.label,\n        ten_nguoi_ky,\n      };\n      if (file_type !== \"\") {\n        await setIsLoading(true);\n        axios\n          .post(api.API_YEU_CAU + \"?many=true\", json)\n          .then(async ({ data }) => {\n            // setFileUrl(data?.path[0]);\n            // window.open(file_url, \"_blank\", \"noopener,noreferrer\");\n            // console.log(data?.path[0]);\n            if (data?.path[0]) {\n              const url = window.location.origin + \"/in-ho-so\";\n              localStorage.setItem(\"url\", data?.path[0]);\n              window.open(url, \"_blank\");\n            }\n            // resetStateModalChucVu()\n          })\n          .catch((error) => {\n            toast.error(error?.response?.data?.msg, {\n              position: \"top-right\",\n              autoClose: 2000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n              toastId: \"error\",\n            });\n          })\n          .finally(() => {\n            setIsLoading(false);\n          });\n      } else {\n        toast.error(\"Lỗi thông tin hồ sơ\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      }\n    }\n  };\n  const inHoSoQuyetDinh = async () => {\n    const newErrors = findFormErrors();\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n    } else {\n      setIsLoading(true);\n      const { ids, ten_nguoi_ky } = form;\n\n      let file_type = \"FormInListChucVu\";\n      let file_name = \"HoSoFormInListChucVu\";\n      const arrayIdChecked = selectedRows.map((e) => e.id);\n      const json = {\n        ids: arrayIdChecked,\n        file_type,\n        file_name,\n        url: \"http://10.14.141.29:7791/yeucau/danhsachCapCCHND\",\n        ten_chuc_vu: valueTenChucVu.label,\n        ten_nguoi_ky,\n      };\n      if (file_type !== \"\") {\n        await setIsLoading(true);\n        axios\n          .post(api.API_YEU_CAU + \"?many=true\", json)\n          .then(async ({ data }) => {\n            // setFileUrl(data?.path[0]);\n            // window.open(file_url, \"_blank\", \"noopener,noreferrer\");\n            // console.log(data?.path[0]);\n            if (data?.path[0]) {\n              const url = window.location.origin + \"/in-ho-so\";\n              localStorage.setItem(\"url\", data?.path[0]);\n              window.open(url, \"_blank\");\n            }\n            // resetStateModalChucVu()\n          })\n          .catch((error) => {\n            toast.error(error?.response?.data?.msg, {\n              position: \"top-right\",\n              autoClose: 2000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n              toastId: \"error\",\n            });\n          })\n          .finally(() => {\n            setIsLoading(false);\n          });\n      } else {\n        toast.error(\"Lỗi thông tin hồ sơ\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      }\n    }\n  };\n\n  // const inToTrinh = async () => {\n  //   const newErrors = findFormErrors();\n  //   if (Object.keys(newErrors).length > 0) {\n  //     setErrors(newErrors);\n  //   } else {\n  //     setIsLoading(true);\n  //     const { ids, ten_nguoi_ky } = form;\n\n  //     let file_type = \"FormInList\";\n  //     let file_name = \"HoSoFormInList\";\n  //     const arrayIdChecked = selectedRows.map((e) => e.id);\n  //     const json = {\n  //       ids: arrayIdChecked,\n  //       file_type,\n  //       file_name,\n  //       url: \"http://10.14.141.29:7791/yeucau/formInList\",\n  //       ten_chuc_vu: valueTenChucVu.label,\n  //       ten_nguoi_ky\n  //     };\n  //     if (file_type !== \"\") {\n  //       await setIsLoading(true);\n  //       axios\n  //         .post(api.API_YEU_CAU + \"?many=true\", json)\n  //         .then(async ({ data }) => {\n  //           // setFileUrl(data?.path[0]);\n  //           // window.open(file_url, \"_blank\", \"noopener,noreferrer\");\n  //           // console.log(data?.path[0]);\n  //           if (data?.path[0]) {\n  //             const url = window.location.origin + \"/in-ho-so\";\n  //             localStorage.setItem(\"url\", data?.path[0]);\n  //             window.open(url, \"_blank\");\n  //           }\n  //           resetStateModalChucVu()\n  //         })\n  //         .catch((error) => {\n  //           toast.error(error?.response?.data?.msg, {\n  //             position: \"top-right\",\n  //             autoClose: 2000,\n  //             hideProgressBar: false,\n  //             closeOnClick: true,\n  //             pauseOnHover: true,\n  //             draggable: true,\n  //             progress: undefined,\n  //             toastId: \"error\",\n  //           });\n  //         })\n  //         .finally(() => {\n  //           setIsLoading(false);\n  //         });\n  //     } else {\n  //       toast.error(\"Lỗi thông tin hồ sơ\", {\n  //         position: \"top-right\",\n  //         autoClose: 2000,\n  //         hideProgressBar: false,\n  //         closeOnClick: true,\n  //         pauseOnHover: true,\n  //         draggable: true,\n  //         progress: undefined,\n  //         toastId: \"error\",\n  //       });\n  //     }\n  //   }\n  // };\n\n  // const inQuyetDinh = async () => {\n  //   const newErrors = findFormErrors();\n  //   if (Object.keys(newErrors).length > 0) {\n  //     setErrors(newErrors);\n  //   } else {\n  //     setIsLoading(true);\n  //     const { ids, ten_nguoi_ky } = form;\n\n  //     let file_type = \"FormInList\";\n  //     let file_name = \"HoSoFormInList\";\n  //     const arrayIdChecked = selectedRows.map((e) => e.id);\n  //     const json = {\n  //       ids: arrayIdChecked,\n  //       file_type,\n  //       file_name,\n  //       url: \"http://10.14.141.29:7791/yeucau/formInList\",\n  //       ten_chuc_vu: valueTenChucVu.label,\n  //       ten_nguoi_ky\n  //     };\n  //     if (file_type !== \"\") {\n  //       await setIsLoading(true);\n  //       axios\n  //         .post(api.API_YEU_CAU + \"?many=true\", json)\n  //         .then(async ({ data }) => {\n  //           // setFileUrl(data?.path[0]);\n  //           // window.open(file_url, \"_blank\", \"noopener,noreferrer\");\n  //           // console.log(data?.path[0]);\n  //           if (data?.path[0]) {\n  //             const url = window.location.origin + \"/in-ho-so\";\n  //             localStorage.setItem(\"url\", data?.path[0]);\n  //             window.open(url, \"_blank\");\n  //           }\n  //           resetStateModalChucVu()\n  //         })\n  //         .catch((error) => {\n  //           toast.error(error?.response?.data?.msg, {\n  //             position: \"top-right\",\n  //             autoClose: 2000,\n  //             hideProgressBar: false,\n  //             closeOnClick: true,\n  //             pauseOnHover: true,\n  //             draggable: true,\n  //             progress: undefined,\n  //             toastId: \"error\",\n  //           });\n  //         })\n  //         .finally(() => {\n  //           setIsLoading(false);\n  //         });\n  //     } else {\n  //       toast.error(\"Lỗi thông tin hồ sơ\", {\n  //         position: \"top-right\",\n  //         autoClose: 2000,\n  //         hideProgressBar: false,\n  //         closeOnClick: true,\n  //         pauseOnHover: true,\n  //         draggable: true,\n  //         progress: undefined,\n  //         toastId: \"error\",\n  //       });\n  //     }\n  //   }\n\n  // };\n\n  const getListDM = () => {\n    axios\n      .get(api.API_DANH_MUC_HO_SO_THU_LY_DUOC_SI)\n      .then(async ({ data }) => {\n        let { het_hans } = data?.results;\n        let { thu_tuc } = data?.results;\n        let { trang_thai_ho_so } = data?.results;\n        het_hans.unshift({\n          label: \"Tất cả\",\n          value: \"\",\n        });\n        thu_tuc.unshift({\n          label: \"Tất cả\",\n          value: \"\",\n        });\n        trang_thai_ho_so.unshift({\n          label: \"Tất cả\",\n          value: \"\",\n        });\n        setListDMHetHan(het_hans);\n        setListDMThuTuc(thu_tuc);\n        setListDMTrangThaiHoSo(trang_thai_ho_so);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {});\n  };\n\n  const getList = ({\n    page_number = page,\n    size = perPage,\n    ma_ho_so = searchMaHoSo,\n    ho_ten = searchHoTen,\n    nop_tu = dateNopTu !== null ? String(new Date(dateNopTu).getTime()) : \"\",\n    nop_den = dateNopDen !== null ? String(new Date(dateNopDen).getTime()) : \"\",\n    han_tu = dateHanTu !== null ? String(new Date(dateHanTu).getTime()) : \"\",\n    han_den = dateHanDen !== null ? String(new Date(dateHanDen).getTime()) : \"\",\n    thu_tuc_id = valueThuTuc?.value || \"\",\n    trang_thai = valueTrangThai?.value || \"\",\n    trang_thai_het_han = valueTrangThaiHetHan?.value || \"\",\n  }) => {\n    setIsLoading(true);\n    axios\n      .post(\n        api.API_LIST_HO_SO_THU_LY_DUOC_SI +\n          `?page=${page_number}&per_page=${size}`,\n        {\n          ma_ho_so,\n          ho_ten,\n          nop_tu,\n          nop_den,\n          han_tu,\n          han_den,\n          thu_tuc_id,\n          trang_thai,\n          trang_thai_het_han,\n        }\n      )\n      .then(async ({ data }) => {\n        setListHoSoThuLy(data?.results);\n        setTotalRows(data?.total);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  // handle api\n\n  const resetState = async () => {\n    await setSearchHoTen(\"\");\n    await setSearchMaHoSo(\"\");\n    await setDateHanDen(null);\n    await setDateHanTu(null);\n    await setDateNopDen(null);\n    await setDateNopTu(null);\n    await setValueThuTuc({\n      label: \"Tất cả\",\n      value: \"\",\n    });\n    await setValueTrangThai({\n      label: \"Tất cả\",\n      value: \"\",\n    });\n    await setValueTrangThaiHetHan({\n      label: \"Tất cả\",\n      value: \"\",\n    });\n  };\n\n  // DETAIL\n  // const detail = async (data) => {\n  //   setTrang_thai(data?.trang_thai);\n  //   setShowUpdate(true);\n  // };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    await setIsLoading(true);\n    axios\n      .post(\n        api.API_LIST_NOI_TOT_NGHIEP + `?page=${page}&per_page=${newPerPage}`,\n        {}\n      )\n      .then(({ data }) => {\n        if (data?.results) {\n          setListHoSoThuLy(data?.results);\n          setPerPage(newPerPage);\n        }\n      })\n      .catch(() => {})\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const changeStatus = async (valuebuton) => {\n    setIsLoading(true);\n    const {\n      ids,\n      trang_thai_ho_so,\n      ly_do_tu_choi,\n      so_quyet_dinh,\n      ngay_quyet_dinh,\n    } = form;\n    const arrayIdChecked = selectedRows.map((e) => e.id);\n    const json = {\n      ids: arrayIdChecked,\n      trang_thai_ho_so: valuebuton,\n      ly_do_tu_choi: \"\",\n      so_quyet_dinh: \"\",\n      ngay_quyet_dinh: \"\",\n    };\n    if (arrayIdChecked.length === 0) {\n      await toast.error(\"Chưa có hồ sơ nào được chọn\", {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        toastId: \"success\",\n      });\n      setIsLoading(false);\n      return;\n    }\n    await axios\n      .put(api.API_DUYET_MULTI_YEU_CAU_CHUNG_CHI, json)\n      .then(async ({ data }) => {\n        await toast.success(data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        getList({});\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setSelectedRows([]);\n        setTimeout(() => {\n          setIsLoading(false);\n        }, 1000);\n      });\n  };\n\n  const handlePageChange = (page) => {\n    setPage(page);\n    getList({ page_number: page });\n  };\n\n  const handleRowClicked = (row) => {};\n\n  const formatGroupLabel = (listTemp) => (\n    <div style={groupStyles}>\n      <span>{listTemp.ten}</span>\n    </div>\n  );\n\n  const groupStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  };\n  const paginationOptions = {\n    rowsPerPageText: \"Dòng hiển thị\",\n    rangeSeparatorText: \"trên\",\n  };\n  const btnDuyet = {\n    fontWeight: \"500\",\n    backgroundColor: \"#1abc9c\",\n    color: \"white\",\n    borderRadius: \"3px\",\n  };\n  const btnBoSung = {\n    fontWeight: \"500\",\n    backgroundColor: \"#f5a51a\",\n    color: \"white\",\n    borderRadius: \"3px\",\n  };\n  const btnTuChoi = {\n    fontWeight: \"500\",\n    backgroundColor: \"#1ab6d0\",\n    color: \"white\",\n    borderRadius: \"3px\",\n  };\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: \"solid\",\n        borderTopWidth: \"1px\",\n        borderTopColor: \"#e0e0e0\",\n        borderBottomColor: \"#e0e0e0\",\n      },\n    },\n    headCells: {\n      style: {\n        color: \"#202124\",\n        fontSize: \"16px\",\n      },\n    },\n    rows: {\n      highlightOnHoverStyle: {\n        backgroundColor: \"rgb(230, 244, 244)\",\n        borderBottomColor: \"#FFFFFF\",\n        outline: \"1px solid #FFFFFF\",\n      },\n    },\n    pagination: {\n      style: {\n        border: \"none\",\n      },\n    },\n  };\n  const columns = [\n    {\n      name: \"Mã hồ sơ\",\n      selector: (row) => <span>{row.ma_ho_so}</span>,\n      grow: 1,\n      style: {\n        color: \"#1251ff\",\n        fontSize: \"14px\",\n        fontWeight: 500,\n        width: 300,\n        cursor: \"pointer\",\n      },\n    },\n    {\n      name: \"Họ tên\",\n      selector: (row) => <span>{row.ten_nguoi_yeu_cau}</span>,\n      grow: 1,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Số điện thoại\",\n      selector: (row) => <span>{row?.so_dien_thoai}</span>,\n      grow: 1,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Thủ tục\",\n      selector: (row) => <span>{row.ten_thu_tuc}</span>,\n      grow: 2,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Ngày nộp\",\n      selector: (row) => (\n        <span>\n          {moment(Number(row.thoi_gian_nop_ho_so)).format(\"DD/MM/YYYY\")}\n        </span>\n      ),\n      grow: 1,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Ngày hết hạn\",\n      selector: (row) => (\n        <span>\n          {moment(Number(row.ngay_het_han_ho_so)).format(\"DD/MM/YYYY\")}\n        </span>\n      ),\n      grow: 1,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Trạng thái\",\n      selector: (row) => <span>{checkStatus(row?.trang_thai_ho_so)}</span>,\n      grow: 1,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      grow: 1.5,\n      cell: (row) => (\n        <div className=\"container my-3\">\n          <button\n            onClick={() => {\n              // showModalChiTiet();\n              // setRowData(row);\n              // dispatch(commonActions.setDoiTuongAll(row?.doi_tuong));\n              if (\n                roles === \"chuyenvienhoidong\" ||\n                roles === \"lanhdao\" ||\n                roles === \"vanthu\"\n              ) {\n                navigate(\n                  `/admin/danhsach-hoso-thuly-duocsi/duthaocapphep/${row?.id}`\n                );\n              }\n              if (roles === \"chuyenvien\") {\n                navigate(`/admin/danhsach-hoso-thuly-duocsi/capmoi/${row?.id}`);\n              }\n              localStorage.setItem(\n                \"filterMaHoSo\",\n                JSON.stringify(searchMaHoSo)\n              );\n              localStorage.setItem(\"filterHoTen\", JSON.stringify(searchHoTen));\n              localStorage.setItem(\n                \"filterTrangThaiThuLy\",\n                JSON.stringify({ ...valueTrangThaiHetHan })\n              );\n              localStorage.setItem(\n                \"filters\",\n                JSON.stringify({ ...valueTrangThai })\n              );\n            }}\n            className=\"btn btn-bg-primary btn-color-white btn-sm\"\n            style={{ marginRight: 5 }}\n          >\n            Xem chi tiết\n          </button>\n        </div>\n      ),\n    },\n  ];\n\n  const checkStatus = (id) => {\n    let status = TrangThaiHoSo.find((e) => e.id === id);\n    return status.name;\n  };\n  const usersBreadcrumbs = [\n    {\n      title: \"Trang chủ\",\n      path: \"/\",\n      isSeparator: false,\n      isActive: false,\n    },\n    {\n      title: \"\",\n      path: \"\",\n      isSeparator: true,\n      isActive: false,\n    },\n  ];\n\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.toggleSelected,\n      style: {\n        backgroundColor: \"#f5f5f5\",\n        userSelect: \"none\",\n      },\n    },\n  ];\n\n  return (\n    <KTCard>\n      {/* <div className=\"page\"> */}\n      <div className=\"container-fluid\" style={{ marginTop: \" 30px\" }}>\n        <PageTitle breadcrumbs={usersBreadcrumbs}>\n          Danh sách hồ sơ chờ phê duyệt\n        </PageTitle>\n        <LocalizationProvider dateAdapter={AdapterDateFns} locale={enAU}>\n          <div className=\"card-box\">\n            <div className=\"row mb-7\">\n              <div className=\"row col-12 mb-2\">\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Mã hồ sơ</label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Nhập mã hồ sơ...\"\n                    onChange={(e) => {\n                      setSearchMaHoSo(e.target.value);\n                    }}\n                    style={{ height: 38 }}\n                    value={searchMaHoSo}\n                  />\n                </div>\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Họ tên</label>\n                  <Form.Control\n                    className=\"text-uppercase\"\n                    type=\"text\"\n                    placeholder=\"Nhập họ tên...\"\n                    onChange={(e) => {\n                      setSearchHoTen(e.target.value);\n                    }}\n                    style={{ height: 38 }}\n                    value={searchHoTen}\n                  />\n                </div>\n\n                <div className=\"row col-6\">\n                  <div className=\"col-3\">\n                    <label className=\"fw-bold fs-6 mb-2\">Nộp từ</label>\n                    <DesktopDatePicker\n                      inputFormat=\"dd/MM/yyyy\"\n                      label=\" \"\n                      value={dateNopTu}\n                      onChange={(value) => {\n                        setDateNopTu(value);\n                        getList({\n                          nop_tu: String(new Date(value).getTime()),\n                        });\n                      }}\n                      maxDate={new Date()}\n                      renderInput={(params) => (\n                        <TextField size=\"small\" {...params} />\n                      )}\n                    />\n                  </div>\n                  <div className=\"col-3\">\n                    <label className=\"fw-bold fs-6 mb-2\">Nộp đến</label>\n                    <DesktopDatePicker\n                      inputFormat=\"dd/MM/yyyy\"\n                      label=\" \"\n                      value={dateNopDen}\n                      onChange={(value) => {\n                        setDateNopDen(value);\n                        getList({\n                          nop_den: String(new Date(value).getTime()),\n                        });\n                      }}\n                      maxDate={new Date()}\n                      renderInput={(params) => (\n                        <TextField size=\"small\" {...params} />\n                      )}\n                    />\n                  </div>\n                  <div className=\"col-3\">\n                    <label className=\"fw-bold fs-6 mb-2\">Hạn từ</label>\n                    <DesktopDatePicker\n                      inputFormat=\"dd/MM/yyyy\"\n                      label=\" \"\n                      value={dateHanTu}\n                      onChange={(value) => {\n                        setDateHanTu(value);\n                        getList({\n                          han_tu: String(new Date(value).getTime()),\n                        });\n                      }}\n                      maxDate={new Date()}\n                      renderInput={(params) => (\n                        <TextField size=\"small\" {...params} />\n                      )}\n                    />\n                  </div>\n                  <div className=\"col-3\">\n                    <label className=\"fw-bold fs-6 mb-2\">Hạn đến</label>\n                    <DesktopDatePicker\n                      inputFormat=\"dd/MM/yyyy\"\n                      label=\" \"\n                      value={dateHanDen}\n                      onChange={(value) => {\n                        setDateHanDen(value);\n                        getList({\n                          han_den: String(new Date(value).getTime()),\n                        });\n                      }}\n                      maxDate={new Date()}\n                      renderInput={(params) => (\n                        <TextField size=\"small\" {...params} />\n                      )}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row col-12\">\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Thủ tục</label>\n                  <Select\n                    value={valueThuTuc}\n                    key={\"id\"}\n                    options={ListDMThuTuc}\n                    formatGroupLabel={formatGroupLabel}\n                    onChange={(data) => {\n                      setValueThuTuc(data);\n                      getList({ thu_tuc_id: data?.value });\n                    }}\n                  />\n                </div>\n\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Trạng thái</label>\n                  <Select\n                    value={valueTrangThai}\n                    key={\"id\"}\n                    options={ListDMTrangThaiHoSo}\n                    formatGroupLabel={formatGroupLabel}\n                    onChange={(data) => {\n                      setValueTrangThai(data);\n                      getList({ trang_thai: data?.value });\n                    }}\n                  />\n                </div>\n\n                <div className=\"col-2\">\n                  <label className=\"fw-bold fs-6 mb-2\">Trạng thái thụ lý</label>\n                  <Select\n                    value={valueTrangThaiHetHan}\n                    key={\"id\"}\n                    options={ListDMHetHan}\n                    formatGroupLabel={formatGroupLabel}\n                    onChange={(data) => {\n                      setValueTrangThaiHetHan(data);\n                      getList({ trang_thai_het_han: data?.value });\n                    }}\n                  />\n                </div>\n\n                <div className=\"row col-4\">\n                  <div className=\"col-3 mt-8\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-sm btn-secondary mb-5\"\n                      onClick={() => {\n                        resetState();\n                        getList({\n                          page_number: 1,\n                          han_den: \"\",\n                          han_tu: \"\",\n                          nop_den: \"\",\n                          nop_tu: \"\",\n                          trang_thai: \"\",\n                          trang_thai_het_han: \"\",\n                          thu_tuc_id: \"\",\n                          ho_ten: \"\",\n                          ma_ho_so: \"\",\n                        });\n                      }}\n                    >\n                      Xóa bộ lọc\n                    </button>\n                  </div>\n                  <div className=\"col-3 mt-8\">\n                    <Dropdown>\n                      <Dropdown.Toggle\n                        size=\"sm\"\n                        variant=\"primary\"\n                        id=\"dropdown-basic\"\n                      >\n                        Tùy chọn\n                      </Dropdown.Toggle>\n\n                      {roles === \"lanhdao\" ? (\n                        <Dropdown.Menu>\n                          <Dropdown.Item\n                            onClick={() => {\n                              showModalChucVu();\n                            }}\n                            style={btnDuyet}\n                          >\n                            In\n                          </Dropdown.Item>\n                        </Dropdown.Menu>\n                      ) : (\n                        <Dropdown.Menu>\n                          <Dropdown.Item\n                            onClick={() => {\n                              showModalChucVu();\n                            }}\n                            style={btnDuyet}\n                          >\n                            In\n                          </Dropdown.Item>\n\n                          <Dropdown.Item\n                            style={btnBoSung}\n                            onClick={() => changeStatus(\"2\")}\n                          >\n                            Chuyển CVTL\n                          </Dropdown.Item>\n                          <Dropdown.Item\n                            style={btnTuChoi}\n                            onClick={() => changeStatus(\"10\")}\n                          >\n                            Chuyển VTCS\n                          </Dropdown.Item>\n                        </Dropdown.Menu>\n                      )}\n                    </Dropdown>\n                  </div>\n                  {/* <div className=\"col-3 mt-8\">\n                      <button className= \"btn btn-info btn-sm\" onClick={inToTrinh()}>tờ trình</button>\n                    </div>\n                    <div className=\"col-3 mt-8\">\n                      <button className= \"btn btn-danger btn-sm\" onClick={inQuyetDinh()}>quyết định</button>\n                    </div> */}\n\n                  {/* <div className=\"col-4 pt-8\"></div> */}\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <DataTable\n                  noDataComponent={\n                    <img\n                      style={{ width: \"30%\", height: \"auto\" }}\n                      src=\"/media/nodata-found.svg\"\n                    />\n                  }\n                  sortServer\n                  progressPending={isLoading}\n                  columns={columns}\n                  data={listHoSoThuLy}\n                  customStyles={customStyles}\n                  pagination\n                  highlightOnHover\n                  pointerOnHover\n                  paginationServer\n                  paginationTotalRows={totalRows}\n                  onChangeRowsPerPage={handlePerRowsChange}\n                  onChangePage={handlePageChange}\n                  selectableRows\n                  onSelectedRowsChange={handleChange}\n                  clearSelectedRows={toggledClearRows}\n                  paginationComponentOptions={paginationOptions}\n                  conditionalRowStyles={conditionalRowStyles}\n                  onRowClicked={(data) => {\n                    // detail(data);\n                    handleRowClicked(data);\n                  }}\n                  progressComponent={\n                    <div\n                      style={{\n                        padding: \"24px\",\n                      }}\n                    >\n                      <Oval\n                        arialLabel=\"loading-indicator\"\n                        color=\"#007bff\"\n                        height={40}\n                      />\n                    </div>\n                  }\n                />\n              </div>\n            </div>\n          </div>\n        </LocalizationProvider>\n      </div>\n      {/* </div> */}\n\n      <PopupThongTinHoSoDuocSi\n        show={chitiet}\n        hide={() => setChiTiet(false)}\n        data={rowData}\n      />\n      {/* <PopupThongTinHoSoDuocSiToTrinh\n        show={chitiet}\n        hide={() => setChiTiet(false)}\n        data={rowData}\n      />\n      <PopupThongTinHoSoDuocSiQuyetDinh\n        show={chitiet}\n        hide={() => setChiTiet(false)}\n        data={rowData}\n      /> */}\n      <Modal show={modalChucVu} onHide={closeModalChucVu}>\n        <Modal.Header className=\"font-weight-bold\">\n          Nhập chức vụ và tên\n        </Modal.Header>\n        <Modal.Body>\n          <div>\n            <label className=\"fw-bold fs-6 mb-2\">Tên chức vụ</label>\n            <Select\n              key={\"id\"}\n              className=\"mt-2\"\n              options={TenChucVu}\n              value={valueTenChucVu ? valueTenChucVu : null}\n              style={{ height: \"44px\" }}\n              placeholder={\"Tên chức vụ\"}\n              onChange={(e) => {\n                setValueTenChucVu(e);\n              }}\n            />\n          </div>\n          <div>\n            <label className=\"fw-bold fs-6 mb-2 mt-5 required \">\n              Tên người ký:\n            </label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Tên người ký\"\n              style={{ fontSize: 14, fontWeight: 500 }}\n              onChange={(e) => {\n                setField(\"ten_nguoi_ky\", e.target.value);\n              }}\n              isInvalid={!!errors.ten_nguoi_ky}\n              className=\"text-uppercase\"\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.ten_nguoi_ky}\n            </Form.Control.Feedback>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div\n                onClick={() => {\n                  resetStateModalChucVu();\n                  closeModalChucVu();\n                }}\n                className=\"btn px-4 py-2 mx-2 font-weight-bold btn-trolai\"\n              >\n                Đóng\n              </div>\n              <div\n                onClick={() => {\n                  inHoSo();\n                }}\n                className=\"btn btn-primary text-white px-4 py-2 mx-2 font-weight-bold ml-5\"\n              >\n                In\n              </div>\n              <div\n                onClick={() => {\n                  inHoSoToTrinh();\n                }}\n                className=\"btn btn-primary text-white px-4 py-2 mx-2 font-weight-bold ml-5\"\n              >\n                In tờ trình\n              </div>\n              <div\n                onClick={() => {\n                  inHoSoQuyetDinh();\n                }}\n                className=\"btn btn-primary text-white px-4 py-2 mx-2 font-weight-bold ml-5\"\n              >\n                In quyết định\n              </div>\n            </div>\n          </div>\n        </Modal.Footer>\n      </Modal>\n    </KTCard>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-cho-in-to-chuc\\DanhSachHoSoChoInToChuc.js",["1576","1577","1578","1579","1580","1581","1582","1583","1584","1585","1586","1587","1588","1589"],[],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Dropdown, Form } from \"react-bootstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Oval } from \"react-loader-spinner\";\n// import { useDispatch } from \"react-redux\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider, DesktopDatePicker } from \"@mui/x-date-pickers\";\nimport { TextField } from \"@mui/material\";\nimport { vi } from \"date-fns/locale\";\nimport { useNavigate } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport { toast } from \"react-toastify\";\nimport { KTCard, useDebounce } from \"../../../../_metronic/helpers\";\nimport { PageTitle } from \"../../../../_metronic/layout/core\";\nimport api from \"../../../configs/api\";\nimport { TrangThaiHoSo } from \"../../../data\";\n\nexport function DanhSachHoSoChoInToChuc() {\n  const navigate = useNavigate();\n  const [listHoSoThuLy, setListHoSoThuLy] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n  const [page, setPage] = useState(1);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [stt, setStt] = useState(0);\n  const [trang_thai, setTrang_thai] = useState(true);\n\n  //open modal delete\n  const [isvisibleDelete, setIsvisibleDelete] = useState(false);\n  const [idDelete, setIdDelete] = useState(\"\");\n  const closeModalDelete = () => setIsvisibleDelete(false);\n  const showModalDelete = () => setIsvisibleDelete(true);\n  const [searchMaHoSo, setSearchMaHoSo] = useState(\"\");\n  const [searchHoTen, setSearchHoTen] = useState(\"\");\n  const [dateHanDen, setDateHanDen] = useState(new Date());\n  const [dateHanTu, setDateHanTu] = useState(new Date());\n  const [dateNopDen, setDateNopDen] = useState(new Date());\n  const [dateNopTu, setDateNopTu] = useState(new Date());\n  const [ListDMHetHan, setListDMHetHan] = useState([]);\n  const [ListDMThuTuc, setListDMThuTuc] = useState([]);\n  const [valueThuTuc, setValueThuTuc] = useState({\n    label: \"Tất cả\",\n    value: \"\",\n  });\n  const [valueTrangThai, setValueTrangThai] = useState({\n    label: \"Tất cả\",\n    value: \"\",\n  });\n  const [valueTrangThaiHetHan, setValueTrangThaiHetHan] = useState({\n    label: \"Tất cả\",\n    value: \"\",\n  });\n  const [ListDMTrangThaiHoSo, setListDMTrangThaiHoSo] = useState([]);\n  const [selectedRows, setSelectedRows] = React.useState(false);\n  const [toggledClearRows, setToggleClearRows] = React.useState(false);\n\n  const handleChange = ({ selectedRows }) => {\n    setSelectedRows(selectedRows);\n  };\n\n  // Toggle the state so React Data Table changes to clearSelectedRows are triggered\n  const handleClearRows = () => {\n    setToggleClearRows(!toggledClearRows);\n  };\n\n  const debouncedSearchMaHoSo = useDebounce(searchMaHoSo, 1000);\n  const debouncedSearchHoTen = useDebounce(searchHoTen, 1000);\n\n  useEffect(\n    () => {\n      getListDM();\n    },\n    [] // Only call effect if debounced search term changes\n  );\n\n  useEffect(\n    () => {\n      if (\n        (debouncedSearchMaHoSo !== undefined && searchMaHoSo !== undefined) ||\n        (debouncedSearchHoTen !== undefined && searchMaHoSo !== undefined)\n      ) {\n        getList({\n          page_number: 1,\n          ma_ho_so: debouncedSearchMaHoSo,\n          ho_ten: debouncedSearchHoTen,\n        });\n      }\n    },\n    [debouncedSearchMaHoSo, debouncedSearchHoTen] // Only call effect if debounced search term changes\n  );\n  const getListDM = () => {\n    axios\n      .get(api.API_DANH_MUC_HO_SO_THU_LY_DUOC_SI)\n      .then(async ({ data }) => {\n        let { het_hans } = data?.results;\n        let { thu_tuc } = data?.results;\n        let { trang_thai_ho_so } = data?.results;\n        het_hans.unshift({\n          label: \"Tất cả\",\n          value: \"\",\n        });\n        thu_tuc.unshift({\n          label: \"Tất cả\",\n          value: \"\",\n        });\n        trang_thai_ho_so.unshift({\n          label: \"Tất cả\",\n          value: \"\",\n        });\n        setListDMHetHan(het_hans);\n        setListDMThuTuc(thu_tuc);\n        setListDMTrangThaiHoSo(trang_thai_ho_so);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {});\n  };\n\n  const getList = ({\n    page_number = page,\n    size = perPage,\n    ma_ho_so = searchMaHoSo,\n    ho_ten = searchHoTen,\n    // nop_tu = String(new Date(dateNopTu).getTime()),\n    // nop_den = String(new Date(dateNopDen).getTime()),\n    // han_tu = String(new Date(dateHanTu).getTime()),\n    // han_den = String(new Date(dateHanDen).getTime()),\n    nop_tu = \"\",\n    nop_den = \"\",\n    han_tu = \"\",\n    han_den = \"\",\n    thu_tuc_id = valueThuTuc?.value || \"\",\n    trang_thai = valueTrangThai?.value || \"\",\n    trang_thai_het_han = valueTrangThaiHetHan?.value || \"\",\n  }) => {\n    setIsLoading(true);\n    axios\n      .post(\n        api.API_LIST_HO_SO_THU_LY_DUOC_SI +\n          `?page=${page_number}&per_page=${size}`,\n        {\n          ma_ho_so,\n          ho_ten,\n          nop_tu,\n          nop_den,\n          han_tu,\n          han_den,\n          thu_tuc_id,\n          trang_thai,\n          trang_thai_het_han,\n        }\n      )\n      .then(async ({ data }) => {\n        setListHoSoThuLy(data?.results);\n        setTotalRows(data?.total);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  // handle api\n\n  const resetState = async () => {\n    await setSearchHoTen(\"\");\n    await setSearchMaHoSo(\"\");\n    await setDateHanDen(null);\n    await setDateHanTu(null);\n    await setDateNopDen(null);\n    await setDateNopTu(null);\n    await setValueThuTuc({\n      label: \"Tất cả\",\n      value: \"\",\n    });\n    await setValueTrangThai({\n      label: \"Tất cả\",\n      value: \"\",\n    });\n    await setValueTrangThaiHetHan({\n      label: \"Tất cả\",\n      value: \"\",\n    });\n  };\n\n  // DETAIL\n  const detail = async (data) => {\n    setTrang_thai(data?.trang_thai);\n    setShowUpdate(true);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    await setIsLoading(true);\n    axios\n      .post(\n        api.API_LIST_NOI_TOT_NGHIEP + `?page=${page}&per_page=${newPerPage}`,\n        {}\n      )\n      .then(({ data }) => {\n        if (data?.results) {\n          setListHoSoThuLy(data?.results);\n          setPerPage(newPerPage);\n        }\n      })\n      .catch(() => {})\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const handlePageChange = (page) => {\n    setPage(page);\n    getList({ page_number: page });\n  };\n\n  const handleRowClicked = (row) => {};\n\n  const formatGroupLabel = (listTemp) => (\n    <div style={groupStyles}>\n      <span>{listTemp.ten}</span>\n    </div>\n  );\n\n  const groupStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  };\n  const paginationOptions = {\n    rowsPerPageText: \"Dòng hiển thị\",\n    rangeSeparatorText: \"trên\",\n  };\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: \"solid\",\n        borderTopWidth: \"1px\",\n        borderTopColor: \"#e0e0e0\",\n        borderBottomColor: \"#e0e0e0\",\n      },\n    },\n    headCells: {\n      style: {\n        color: \"#202124\",\n        fontSize: \"16px\",\n      },\n    },\n    rows: {\n      highlightOnHoverStyle: {\n        backgroundColor: \"rgb(230, 244, 244)\",\n        borderBottomColor: \"#FFFFFF\",\n        outline: \"1px solid #FFFFFF\",\n      },\n    },\n    pagination: {\n      style: {\n        border: \"none\",\n      },\n    },\n  };\n\n  const columns = [\n    {\n      name: \"Mã hồ sơ\",\n      selector: (row) => <span>{row.ma_ho_so}</span>,\n      grow: 2,\n      style: {\n        color: \"#1251ff\",\n        fontSize: \"14px\",\n        fontWeight: 500,\n        width: 300,\n        cursor: \"pointer\",\n      },\n    },\n    {\n      name: \"Họ tên\",\n      selector: (row) => <span>{row.ten_nguoi_yeu_cau}</span>,\n      grow: 2,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Số điện thoại\",\n      selector: (row) => <span>{row?.so_dien_thoai}</span>,\n      grow: 2,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Thủ tục\",\n      selector: (row) => <span>{row.ten_thu_tuc}</span>,\n      grow: 3,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Ngày nộp\",\n      selector: (row) => <span>{row.thoi_gian_nop_ho_so}</span>,\n      grow: 2,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Trạng thái\",\n      selector: (row) => <span>{checkStatus(row?.trang_thai_ho_so)}</span>,\n      grow: 1,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n  ];\n\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.toggleSelected,\n      style: {\n        backgroundColor: \"#f5f5f5\",\n        userSelect: \"none\",\n      },\n    },\n  ];\n\n  const checkStatus = (id) => {\n    let status = TrangThaiHoSo.find((e) => e.id === id);\n    return status.name;\n  };\n  const usersBreadcrumbs = [\n    {\n      title: \"Trang chủ\",\n      path: \"/\",\n      isSeparator: false,\n      isActive: false,\n    },\n    {\n      title: \"\",\n      path: \"\",\n      isSeparator: true,\n      isActive: false,\n    },\n  ];\n\n  return (\n    <KTCard>\n      {/* <div className=\"page\"> */}\n      <div className=\"container-fluid\" style={{ marginTop: \" 30px\" }}>\n        <PageTitle breadcrumbs={usersBreadcrumbs}>\n          Danh sách hồ sơ chờ in\n        </PageTitle>\n        <LocalizationProvider dateAdapter={AdapterDateFns} locale={vi}>\n          <div className=\"card-box\">\n            <div className=\"row mb-7\">\n              <div className=\"row col-12 mb-2\">\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Mã hồ sơ</label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Nhập mã hồ sơ...\"\n                    onChange={(e) => {\n                      setSearchMaHoSo(e.target.value);\n                    }}\n                    style={{ height: 38 }}\n                    value={searchMaHoSo}\n                  />\n                </div>\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Họ tên</label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Nhập họ tên...\"\n                    onChange={(e) => {\n                      setSearchHoTen(e.target.value);\n                    }}\n                    style={{ height: 38 }}\n                    value={searchHoTen}\n                    className=\"text-uppercase\"\n                  />\n                </div>\n\n                <div className=\"row col-6\">\n                  <div className=\"col-3\">\n                    <label className=\"fw-bold fs-6 mb-2\">Nộp từ</label>\n                    <DesktopDatePicker\n                      inputFormat=\"dd/MM/yyyy\"\n                      label=\" \"\n                      value={dateNopTu}\n                      onChange={(value) => {\n                        setDateNopTu(value);\n                        getList({\n                          nop_tu: String(new Date(value).getTime()),\n                        });\n                        console.log(\"log value\", value);\n                      }}\n                      maxDate={new Date()}\n                      renderInput={(params) => (\n                        <TextField size=\"small\" {...params} />\n                      )}\n                    />\n                  </div>\n                  <div className=\"col-3\">\n                    <label className=\"fw-bold fs-6 mb-2\">Nộp đến</label>\n                    <DesktopDatePicker\n                      inputFormat=\"dd/MM/yyyy\"\n                      label=\" \"\n                      value={dateNopDen}\n                      onChange={(value) => {\n                        setDateNopDen(value);\n                        getList({\n                          nop_den: String(new Date(value).getTime()),\n                        });\n                        console.log(\"log value\", value);\n                      }}\n                      maxDate={new Date()}\n                      renderInput={(params) => (\n                        <TextField size=\"small\" {...params} />\n                      )}\n                    />\n                  </div>\n                  <div className=\"col-3\">\n                    <label className=\"fw-bold fs-6 mb-2\">Hạn từ</label>\n                    <DesktopDatePicker\n                      inputFormat=\"dd/MM/yyyy\"\n                      label=\" \"\n                      value={dateHanTu}\n                      onChange={(value) => {\n                        setDateHanTu(value);\n                        getList({\n                          han_tu: String(new Date(value).getTime()),\n                        });\n                        console.log(\"log value\", value);\n                      }}\n                      maxDate={new Date()}\n                      renderInput={(params) => (\n                        <TextField size=\"small\" {...params} />\n                      )}\n                    />\n                  </div>\n                  <div className=\"col-3\">\n                    <label className=\"fw-bold fs-6 mb-2\">Hạn đến</label>\n                    <DesktopDatePicker\n                      inputFormat=\"dd/MM/yyyy\"\n                      label=\" \"\n                      value={dateHanDen}\n                      onChange={(value) => {\n                        setDateHanDen(value);\n                        getList({\n                          han_den: String(new Date(value).getTime()),\n                        });\n                        console.log(\"log value\", value);\n                      }}\n                      maxDate={new Date()}\n                      renderInput={(params) => (\n                        <TextField size=\"small\" {...params} />\n                      )}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row col-12\">\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Thủ tục</label>\n                  <Select\n                    value={valueThuTuc}\n                    key={\"id\"}\n                    options={ListDMThuTuc}\n                    formatGroupLabel={formatGroupLabel}\n                    onChange={(data) => {\n                      setValueThuTuc(data);\n                      getList({ thu_tuc_id: data?.value });\n                    }}\n                  />\n                </div>\n\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Trạng thái</label>\n                  <Select\n                    value={valueTrangThai}\n                    key={\"id\"}\n                    options={ListDMTrangThaiHoSo}\n                    formatGroupLabel={formatGroupLabel}\n                    onChange={(data) => {\n                      setValueTrangThai(data);\n                      getList({ trang_thai: data?.value });\n                    }}\n                  />\n                </div>\n\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Trạng thái thụ lý</label>\n                  <Select\n                    value={valueTrangThaiHetHan}\n                    key={\"id\"}\n                    options={ListDMHetHan}\n                    formatGroupLabel={formatGroupLabel}\n                    onChange={(data) => {\n                      setValueTrangThaiHetHan(data);\n                      getList({ trang_thai_het_han: data?.value });\n                    }}\n                  />\n                </div>\n\n                <div className=\"row col-3\">\n                  <div className=\"col-6 pt-8\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-sm btn-trolai mb-5\"\n                      onClick={() => {\n                        resetState();\n                        getList({\n                          page_number: 1,\n                          han_den: \"\",\n                          han_tu: \"\",\n                          nop_den: \"\",\n                          nop_tu: \"\",\n                          trang_thai: \"\",\n                          trang_thai_het_han: \"\",\n                          thu_tuc_id: \"\",\n                          ho_ten: \"\",\n                          ma_ho_so: \"\",\n                        });\n                      }}\n                    >\n                      Xóa bộ lọc\n                    </button>\n                  </div>\n                  <div className=\"col-6 pt-8\">\n                    <Dropdown>\n                      <Dropdown.Toggle\n                        size=\"sm\"\n                        variant=\"primary\"\n                        id=\"dropdown-basic\"\n                      >\n                        Tùy chọn\n                      </Dropdown.Toggle>\n\n                      <Dropdown.Menu>\n                        <Dropdown.Item href=\"#/action-1\">\n                          Nhập số QĐ\n                        </Dropdown.Item>\n                        <Dropdown.Item href=\"#/action-2\">In</Dropdown.Item>\n                        <Dropdown.Item href=\"#/action-3\">\n                          Chuyển CVTL\n                        </Dropdown.Item>\n                        <Dropdown.Item href=\"#/action-3\">\n                          Chuyển VTCS\n                        </Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </div>\n                  {/* <div className=\"col-4 pt-8\"></div> */}\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <DataTable\n                  noDataComponent={\n                    <img\n                      style={{ width: \"30%\", height: \"auto\" }}\n                      src=\"/media/nodata-found.svg\"\n                    />\n                  }\n                  sortServer\n                  progressPending={isLoading}\n                  columns={columns}\n                  data={listHoSoThuLy}\n                  customStyles={customStyles}\n                  pagination\n                  highlightOnHover\n                  pointerOnHover\n                  paginationServer\n                  paginationTotalRows={totalRows}\n                  onChangeRowsPerPage={handlePerRowsChange}\n                  onChangePage={handlePageChange}\n                  selectableRows\n                  onSelectedRowsChange={handleChange}\n                  clearSelectedRows={toggledClearRows}\n                  paginationComponentOptions={paginationOptions}\n                  conditionalRowStyles={conditionalRowStyles}\n                  onRowClicked={(data) => {\n                    detail(data);\n                    handleRowClicked(data);\n                  }}\n                  progressComponent={\n                    <div\n                      style={{\n                        padding: \"24px\",\n                      }}\n                    >\n                      <Oval\n                        arialLabel=\"loading-indicator\"\n                        color=\"#007bff\"\n                        height={40}\n                      />\n                    </div>\n                  }\n                />\n              </div>\n            </div>\n          </div>\n        </LocalizationProvider>\n      </div>\n      {/* </div> */}\n    </KTCard>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-chung-chi\\DanhSachChungChi.js",["1590","1591","1592","1593","1594","1595"],[],"import { vi } from \"date-fns/locale\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useEffect, useState } from \"react\";\r\nimport api from \"../../../configs/api\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport Status from \"../../../components/Status\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { Oval } from \"react-loader-spinner\";\r\nimport moment from \"moment\";\r\n\r\nexport function DanhSachChungChi() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerPage] = useState(10);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const navigate = useNavigate();\r\n\r\n  const [chungChiList, setChungChiList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getListChungChi();\r\n  }, []);\r\n\r\n  const getListChungChi = () => {\r\n    axios\r\n      .post(api.API_CHUNG_CHI_HANH_NGHE_DA_CAP + \"/get_list\", {})\r\n      .then(({ data }) => {\r\n        setChungChiList(data?.results);\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.data) {\r\n          toast.error(error.response.data.msg, {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            toastId: \"success\",\r\n          });\r\n        }\r\n      })\r\n      .finally(() => {});\r\n  };\r\n\r\n  const handlePerRowsChange = async (newPerPage, page) => {\r\n    setIsLoading(true);\r\n    axios\r\n      .post(\r\n        api.API_CHUNG_CHI_HANH_NGHE_DA_CAP +\r\n          `/get_list?page=${page}&per_page=${newPerPage}`,\r\n        {}\r\n      )\r\n      .then(({ data }) => {\r\n        if (data?.results) {\r\n          setChungChiList(data?.results);\r\n          setPerPage(newPerPage);\r\n        }\r\n      })\r\n      .catch(() => {})\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    setPage(page);\r\n    getListChungChi({ page_number: page });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"STT\",\r\n      grow: 1,\r\n      selector: (row) => (\r\n        <div>\r\n          <span>1</span>\r\n        </div>\r\n      ),\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: 400,\r\n        width: 300,\r\n        cursor: \"pointer\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Số CCHND\",\r\n      grow: 6,\r\n      style: {\r\n        color: \"#1251ff\",\r\n        fontSize: \"14px\",\r\n        fontWeight: 500,\r\n        width: 300,\r\n        cursor: \"pointer\",\r\n      },\r\n      selector: (row) => (\r\n        <div>\r\n          <span\r\n            onClick={() => {\r\n              navigate(`chi-tiet/${row?.id}`);\r\n            }}\r\n          >\r\n            {row.so_giay_phep}\r\n          </span>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Ngày cấp\",\r\n      grow: 3,\r\n      selector: (row) => (\r\n        <div>\r\n          <span>\r\n            {row.ngay_cap\r\n              ? moment(Number(row.ngay_cap)).format(\"DD/MM/YYYY\")\r\n              : \"\"}\r\n          </span>\r\n        </div>\r\n      ),\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: 400,\r\n        width: 300,\r\n        cursor: \"pointer\",\r\n      },\r\n    },\r\n    {\r\n      name: \"CMND\",\r\n      grow: 3,\r\n      selector: (row) => (\r\n        <div>\r\n          <span>{row.cmnd}</span>\r\n        </div>\r\n      ),\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: 400,\r\n        width: 300,\r\n        cursor: \"pointer\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Nơi làm việc\",\r\n      grow: 6,\r\n      selector: (row) => (\r\n        <div>\r\n          <span>{row.co_quan_cap}</span>\r\n        </div>\r\n      ),\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: 400,\r\n        width: 300,\r\n        cursor: \"pointer\",\r\n      },\r\n    },\r\n  ];\r\n\r\n  const conditionalRowStyles = [\r\n    {\r\n      when: (row) => row.toggleSelected,\r\n      style: {\r\n        backgroundColor: \"#f5f5f5\",\r\n        userSelect: \"none\",\r\n      },\r\n    },\r\n  ];\r\n  const paginationOptions = {\r\n    rowsPerPageText: \"Dòng hiển thị\",\r\n    rangeSeparatorText: \"trên\",\r\n  };\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: \"solid\",\r\n        borderTopWidth: \"1px\",\r\n        borderTopColor: \"#e0e0e0\",\r\n        borderBottomColor: \"#e0e0e0\",\r\n      },\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"16px\",\r\n      },\r\n    },\r\n    rows: {\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        outline: \"1px solid #FFFFFF\",\r\n      },\r\n    },\r\n    pagination: {\r\n      style: {\r\n        border: \"none\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns} locale={vi}>\r\n      <div className=\"bg-white py-5 px-5 my-5\">\r\n        <div className=\"row\" style={{ padding: \"8px 16px 8px 16px\" }}>\r\n          <div className=\"col-12 text-center\">\r\n            <label className=\"text-primary fw-bold fs-1\">\r\n              DANH SÁCH CHỨNG CHỈ\r\n            </label>\r\n          </div>\r\n          <div className=\"col-9 mt-5\">\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Tìm kiếm chứng chỉ\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"col-3 mt-5 text-end\">\r\n            <button className=\"btn btn-success ms-3\">Import</button>\r\n            <button className=\"btn btn-primary ms-3\">Export</button>\r\n          </div>\r\n        </div>\r\n\r\n        <DataTable\r\n          noDataComponent={\r\n            <img\r\n              style={{ width: \"30%\", height: \"auto\" }}\r\n              src=\"/media/nodata-found.svg\"\r\n            />\r\n          }\r\n          sortServer\r\n          progressPending={isLoading}\r\n          columns={columns}\r\n          data={chungChiList}\r\n          customStyles={customStyles}\r\n          pagination\r\n          highlightOnHover\r\n          pointerOnHover\r\n          paginationServer\r\n          paginationTotalRows={totalRows}\r\n          onChangeRowsPerPage={handlePerRowsChange}\r\n          onChangePage={handlePageChange}\r\n          paginationComponentOptions={paginationOptions}\r\n          conditionalRowStyles={conditionalRowStyles}\r\n          // onRowClicked={(data) => {\r\n          //   detail(data);\r\n          //   handleRowClicked(data);\r\n          //   setShowAdd(true);\r\n          // }}\r\n          progressComponent={\r\n            <div\r\n              style={{\r\n                padding: \"24px\",\r\n              }}\r\n            >\r\n              <Oval\r\n                arialLabel=\"loading-indicator\"\r\n                color=\"#007bff\"\r\n                height={40}\r\n              />\r\n            </div>\r\n          }\r\n        />\r\n      </div>\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-phe-duyet\\DanhSachHoSoPheDuyet.js",["1596","1597","1598","1599","1600","1601","1602","1603","1604"],[],"import { TextField } from \"@mui/material\";\nimport { DesktopDatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport axios from \"axios\";\nimport { enAU } from \"date-fns/locale\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { Dropdown, Form } from \"react-bootstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Oval } from \"react-loader-spinner\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport { toast } from \"react-toastify\";\nimport { KTCard, useDebounce } from \"../../../../_metronic/helpers\";\nimport { PageTitle } from \"../../../../_metronic/layout/core\";\nimport api from \"../../../configs/api\";\nimport { TrangThaiHoSo } from \"../../../data\";\nimport {\n  selectCurrentUser,\n  selectRoleUser,\n} from \"../../../redux-module/auth/authSlice\";\nimport PopupBoSung from \"../popup/PopupBoSung\";\nimport PopupCancel from \"../popup/PopupCancel\";\nimport PopupSoQuyetDinh from \"../popup/PopupSoQuyetDinh\";\nimport { PopupThongTinHoSoDuocSi } from \"../popup/PopupThongTinHoSoDuocSi\";\n\nexport function DanhSachHoSoPheDuyet() {\n  const navigate = useNavigate();\n  const roles = useSelector(selectRoleUser)[0].ten_en;\n\n  const [listHoSoThuLy, setListHoSoThuLy] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n  const [page, setPage] = useState(1);\n\n  //open modal chi tiet\n  const [chitiet, setChiTiet] = useState(false);\n\n  // const [ismulti, setIsmulti] = useState(false);\n\n  const [rowData, setRowData] = useState();\n  const [searchMaHoSo, setSearchMaHoSo] = useState(null);\n  const [searchHoTen, setSearchHoTen] = useState(null);\n  const [dateHanDen, setDateHanDen] = useState(null);\n  const [dateHanTu, setDateHanTu] = useState(null);\n  const [dateNopDen, setDateNopDen] = useState(null);\n  const [dateNopTu, setDateNopTu] = useState(null);\n  const [ListDMHetHan, setListDMHetHan] = useState([]);\n  const [ListDMThuTuc, setListDMThuTuc] = useState([]);\n  const [valueThuTuc, setValueThuTuc] = useState({\n    label: \"Tất cả\",\n    value: \"\",\n  });\n  const [valueTrangThai, setValueTrangThai] = useState({\n    label: \"Tất cả\",\n    value: \"\",\n  });\n  const [valueTrangThaiHetHan, setValueTrangThaiHetHan] = useState({\n    label: \"Tất cả\",\n    value: \"\",\n  });\n  const [ListDMTrangThaiHoSo, setListDMTrangThaiHoSo] = useState([]);\n  const [selectedId, setSelectedId] = useState([]);\n  const [selectedRow, setSelectedRow] = useState([]);\n  const [toggledClearRows, setToggleClearRows] = useState(true);\n\n  const handleChange = ({ selectedRows }) => {\n    console.log(selectedRows);\n    setSelectedRow(selectedRows);\n  };\n  //open modal Cancel\n  const [isvisibleCancel, setIsvisibleCancel] = useState(false);\n  const closeModalCancel = () => setIsvisibleCancel(false);\n  const showModalCancel = () => {\n    if (selectedRow.length === 0) {\n      toast.error(\"Chưa có hồ sơ nào được chọn\", {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        toastId: \"success\",\n      });\n    } else {\n      setIsvisibleCancel(true);\n    }\n  };\n  //open modal Bổ sung\n  const [isvisibleBoSung, setIsvisibleBoSung] = useState(false);\n  const closeModalBoSung = () => setIsvisibleBoSung(false);\n  const showModalBoSung = () => {\n    if (selectedRow.length === 0) {\n      toast.error(\"Chưa có hồ sơ nào được chọn\", {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        toastId: \"success\",\n      });\n    } else {\n      setIsvisibleBoSung(true);\n    }\n  };\n  //open modal so quyết định\n  const [isvisibleSoQuyetDinh, setIsvisibleSoQuyetDinh] = useState(false);\n  const closeModalSoQuyetDinh = () => setIsvisibleSoQuyetDinh(false);\n  const showModalSoQuyetDinh = () => {\n    if (selectedRow.length === 0) {\n      toast.error(\"Chưa có hồ sơ nào được chọn\", {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        toastId: \"success\",\n      });\n    } else {\n      setIsvisibleSoQuyetDinh(true);\n    }\n  };\n\n  // Toggle the state so React Data Table changes to clearSelectedRows are triggered\n  const handleClearRows = () => {\n    setToggleClearRows(!toggledClearRows);\n  };\n\n  const debouncedSearchMaHoSo = useDebounce(searchMaHoSo, 1000);\n  const debouncedSearchHoTen = useDebounce(searchHoTen, 1000);\n\n  useEffect(\n    () => {\n      getListDM();\n    },\n    [] // Only call effect if debounced search term changes\n  );\n\n  //renderTrangThaiByRoles\n  useEffect(() => {\n    switch (roles) {\n      case \"lanhdao\":\n        setValueTrangThai({\n          label: \"Chờ Lãnh Đạo Phê Duyệt\",\n          value: \"6\",\n        });\n        getList({ trang_thai: \"6\" });\n        break;\n      case \"vanthu\":\n        setValueTrangThai({\n          label: \"Đang Chờ Cấp Số\",\n          value: \"10\",\n        });\n        getList({ trang_thai: \"10\" });\n        break;\n      default:\n        break;\n    }\n  }, []);\n\n  useEffect(\n    () => {\n      if (\n        (debouncedSearchMaHoSo !== null && searchMaHoSo !== null) ||\n        (debouncedSearchHoTen !== null && searchHoTen !== null)\n      ) {\n        getList({\n          page_number: 1,\n          ma_ho_so: debouncedSearchMaHoSo,\n          ho_ten: debouncedSearchHoTen,\n        });\n      }\n    },\n    [debouncedSearchMaHoSo, debouncedSearchHoTen] // Only call effect if debounced search term changes\n  );\n\n  const getListDM = () => {\n    axios\n      .get(api.API_DANH_MUC_HO_SO_THU_LY_DUOC_SI)\n      .then(async ({ data }) => {\n        let { het_hans } = data?.results;\n        let { thu_tuc } = data?.results;\n        let { trang_thai_ho_so } = data?.results;\n        het_hans.unshift({\n          label: \"Tất cả\",\n          value: \"\",\n        });\n        thu_tuc.unshift({\n          label: \"Tất cả\",\n          value: \"\",\n        });\n        trang_thai_ho_so.unshift({\n          label: \"Tất cả\",\n          value: \"\",\n        });\n        setListDMHetHan(het_hans);\n        setListDMThuTuc(thu_tuc);\n        setListDMTrangThaiHoSo(trang_thai_ho_so);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {});\n  };\n\n  const getList = ({\n    page_number = page,\n    size = perPage,\n    ma_ho_so = searchMaHoSo ? searchMaHoSo : \"\",\n    ho_ten = searchHoTen ? searchHoTen : \"\",\n    nop_tu = dateNopTu !== null ? String(new Date(dateNopTu).getTime()) : \"\",\n    nop_den = dateNopDen !== null ? String(new Date(dateNopDen).getTime()) : \"\",\n    han_tu = dateHanTu !== null ? String(new Date(dateHanTu).getTime()) : \"\",\n    han_den = dateHanDen !== null ? String(new Date(dateHanDen).getTime()) : \"\",\n    thu_tuc_id = valueThuTuc?.value || \"\",\n    trang_thai = valueTrangThai?.value || \"\",\n    trang_thai_het_han = valueTrangThaiHetHan?.value || \"\",\n  }) => {\n    setIsLoading(true);\n    axios\n      .post(\n        api.API_LIST_HO_SO_THU_LY_DUOC_SI +\n          `?page=${page_number}&per_page=${size}`,\n        {\n          ma_ho_so,\n          ho_ten,\n          nop_tu,\n          nop_den,\n          han_tu,\n          han_den,\n          thu_tuc_id,\n          trang_thai,\n          trang_thai_het_han,\n        }\n      )\n      .then(async ({ data }) => {\n        setListHoSoThuLy(data?.results);\n        setTotalRows(data?.total);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  // handle api\n\n  const resetState = async () => {\n    await setSearchHoTen(\"\");\n    await setSearchMaHoSo(\"\");\n    await setDateHanDen(null);\n    await setDateHanTu(null);\n    await setDateNopDen(null);\n    await setDateNopTu(null);\n    await setValueThuTuc({\n      label: \"Tất cả\",\n      value: \"\",\n    });\n    await setValueTrangThai({\n      label: \"Tất cả\",\n      value: \"\",\n    });\n    await setValueTrangThaiHetHan({\n      label: \"Tất cả\",\n      value: \"\",\n    });\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    await setIsLoading(true);\n    axios\n      .post(\n        api.API_LIST_NOI_TOT_NGHIEP + `?page=${page}&per_page=${newPerPage}`,\n        {}\n      )\n      .then(({ data }) => {\n        if (data?.results) {\n          setListHoSoThuLy(data?.results);\n          setPerPage(newPerPage);\n        }\n      })\n      .catch(() => {})\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const handlePageChange = (page) => {\n    setPage(page);\n    getList({ page_number: page });\n  };\n\n  const handleRowClicked = (row) => {};\n\n  const handleSubmitDuyet = async (valueButton) => {\n    setIsLoading(true);\n\n    const arrayTemp = selectedRow.map((e) => e.id);\n\n    const json = {\n      ids: arrayTemp,\n      trang_thai_ho_so: valueButton,\n      ly_do_tu_choi: \"\",\n      so_quyet_dinh: \"\",\n      ngay_quyet_dinh: \"\",\n    };\n    if (arrayTemp.length === 0) {\n      await toast.error(\"Chưa có hồ sơ nào được chọn\", {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        toastId: \"success\",\n      });\n      setIsLoading(false);\n      return;\n    }\n    await axios\n      .put(api.API_DUYET_MULTI_YEU_CAU_CHUNG_CHI, json)\n      .then(async ({ data }) => {\n        await toast.success(data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        getList({});\n        handleClearRows();\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setSelectedId([]);\n        setTimeout(() => {\n          setIsLoading(false);\n        }, 1000);\n      });\n  };\n\n  const formatGroupLabel = (listTemp) => (\n    <div style={groupStyles}>\n      <span>{listTemp.ten}</span>\n    </div>\n  );\n\n  const groupStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  };\n  const paginationOptions = {\n    rowsPerPageText: \"Dòng hiển thị\",\n    rangeSeparatorText: \"trên\",\n  };\n  const btnDuyet = {\n    color: \"white\",\n    height: \"38px\",\n    fontWeight: \"500\",\n    borderRadius: \"3px\",\n    backgroundColor: \"#2494be\",\n  };\n  const btnBoSung = {\n    color: \"white\",\n    height: \"38px\",\n    fontWeight: \"500\",\n    borderRadius: \"3px\",\n    backgroundColor: \"#f5a51a\",\n  };\n  const btnTuChoi = {\n    color: \"white\",\n    height: \"38px\",\n    fontWeight: \"500\",\n    borderRadius: \"3px\",\n    backgroundColor: \"#ed2643\",\n  };\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: \"solid\",\n        borderTopWidth: \"1px\",\n        borderTopColor: \"#e0e0e0\",\n        borderBottomColor: \"#e0e0e0\",\n      },\n    },\n    headCells: {\n      style: {\n        color: \"#202124\",\n        fontSize: \"16px\",\n      },\n    },\n    rows: {\n      highlightOnHoverStyle: {\n        backgroundColor: \"rgb(230, 244, 244)\",\n        borderBottomColor: \"#FFFFFF\",\n        outline: \"1px solid #FFFFFF\",\n      },\n    },\n    pagination: {\n      style: {\n        border: \"none\",\n      },\n    },\n  };\n  const columns = [\n    {\n      name: \"Mã hồ sơ\",\n      selector: (row) => <span>{row.ma_ho_so}</span>,\n      grow: 1,\n      style: {\n        color: \"#1251ff\",\n        fontSize: \"14px\",\n        fontWeight: 500,\n        width: 300,\n        cursor: \"pointer\",\n      },\n    },\n    {\n      name: \"Họ tên\",\n      selector: (row) => <span>{row.ten_nguoi_yeu_cau}</span>,\n      grow: 1,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Số điện thoại\",\n      selector: (row) => <span>{row?.so_dien_thoai}</span>,\n      grow: 1,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Thủ tục\",\n      selector: (row) => <span>{row.ten_thu_tuc}</span>,\n      grow: 2,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Ngày nộp\",\n      selector: (row) => (\n        <span>\n          {moment(Number(row.thoi_gian_nop_ho_so)).format(\"DD/MM/YYYY\")}\n        </span>\n      ),\n      grow: 1,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Ngày hết hạn\",\n      selector: (row) => (\n        <span>\n          {\" \"}\n          {moment(Number(row.ngay_het_han_ho_so)).format(\"DD/MM/YYYY\")}\n        </span>\n      ),\n      grow: 1,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Trạng thái\",\n      selector: (row) => <span>{checkStatus(row?.trang_thai_ho_so)}</span>,\n      grow: 1,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      grow: 1.5,\n      cell: (row) => (\n        <div className=\"container my-3\">\n          <button\n            onClick={() => {\n              if (\n                roles === \"chuyenvienhoidong\" ||\n                roles === \"lanhdao\" ||\n                roles === \"vanthu\"\n              ) {\n                navigate(\n                  `/admin/danhsach-hoso-thuly-duocsi/duthaocapphep/${row?.id}`\n                );\n              }\n              if (roles === \"chuyenvien\") {\n                navigate(`/admin/danhsach-hoso-thuly-duocsi/capmoi/${row?.id}`);\n              }\n            }}\n            className=\"btn btn-bg-primary btn-color-white btn-sm\"\n            style={{ marginRight: 5 }}\n          >\n            Xem chi tiết\n          </button>\n        </div>\n      ),\n    },\n  ];\n\n  const checkStatus = (id) => {\n    let status = TrangThaiHoSo.find((e) => e.id === id);\n    return status.name;\n  };\n  const usersBreadcrumbs = [\n    {\n      title: \"Trang chủ\",\n      path: \"/\",\n      isSeparator: false,\n      isActive: false,\n    },\n    {\n      title: \"\",\n      path: \"\",\n      isSeparator: true,\n      isActive: false,\n    },\n  ];\n\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.toggleSelected,\n      style: {\n        backgroundColor: \"#f5f5f5\",\n        userSelect: \"none\",\n      },\n    },\n  ];\n\n  return (\n    <KTCard>\n      {/* <div className=\"page\"> */}\n      <div className=\"container-fluid\" style={{ marginTop: \" 30px\" }}>\n        <PageTitle breadcrumbs={usersBreadcrumbs}>\n          Danh sách hồ sơ chờ phê duyệt\n        </PageTitle>\n        <LocalizationProvider dateAdapter={AdapterDateFns} locale={enAU}>\n          <div className=\"card-box\">\n            <div className=\"row mb-7\">\n              <div className=\"row col-12 mb-2\">\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Mã hồ sơ</label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Nhập mã hồ sơ...\"\n                    onChange={(e) => {\n                      setSearchMaHoSo(e.target.value);\n                    }}\n                    style={{ height: 38 }}\n                    value={searchMaHoSo ? searchMaHoSo : \"\"}\n                  />\n                </div>\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Họ tên</label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Nhập họ tên...\"\n                    onChange={(e) => {\n                      setSearchHoTen(e.target.value);\n                    }}\n                    style={{ height: 38 }}\n                    value={searchHoTen ? searchHoTen : \"\"}\n                    className=\"text-uppercase\"\n                  />\n                </div>\n\n                <div className=\"row col-6\">\n                  <div className=\"col-3\">\n                    <label className=\"fw-bold fs-6 mb-2\">Nộp từ</label>\n                    <DesktopDatePicker\n                      inputFormat=\"dd/MM/yyyy\"\n                      label=\" \"\n                      value={dateNopTu}\n                      onChange={(value) => {\n                        setDateNopTu(value);\n                        getList({\n                          nop_tu: String(new Date(value).getTime()),\n                        });\n                      }}\n                      maxDate={new Date()}\n                      renderInput={(params) => (\n                        <TextField size=\"small\" {...params} />\n                      )}\n                    />\n                  </div>\n                  <div className=\"col-3\">\n                    <label className=\"fw-bold fs-6 mb-2\">Nộp đến</label>\n                    <DesktopDatePicker\n                      inputFormat=\"dd/MM/yyyy\"\n                      label=\" \"\n                      value={dateNopDen}\n                      onChange={(value) => {\n                        setDateNopDen(value);\n                        getList({\n                          nop_den: String(new Date(value).getTime()),\n                        });\n                      }}\n                      maxDate={new Date()}\n                      renderInput={(params) => (\n                        <TextField size=\"small\" {...params} />\n                      )}\n                    />\n                  </div>\n                  <div className=\"col-3\">\n                    <label className=\"fw-bold fs-6 mb-2\">Hạn từ</label>\n                    <DesktopDatePicker\n                      inputFormat=\"dd/MM/yyyy\"\n                      label=\" \"\n                      value={dateHanTu}\n                      onChange={(value) => {\n                        setDateHanTu(value);\n                        getList({\n                          han_tu: String(new Date(value).getTime()),\n                        });\n                      }}\n                      maxDate={new Date()}\n                      renderInput={(params) => (\n                        <TextField size=\"small\" {...params} />\n                      )}\n                    />\n                  </div>\n                  <div className=\"col-3\">\n                    <label className=\"fw-bold fs-6 mb-2\">Hạn đến</label>\n                    <DesktopDatePicker\n                      inputFormat=\"dd/MM/yyyy\"\n                      label=\" \"\n                      value={dateHanDen}\n                      onChange={(value) => {\n                        setDateHanDen(value);\n                        getList({\n                          han_den: String(new Date(value).getTime()),\n                        });\n                      }}\n                      maxDate={new Date()}\n                      renderInput={(params) => (\n                        <TextField size=\"small\" {...params} />\n                      )}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row col-12\">\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Thủ tục</label>\n                  <Select\n                    value={valueThuTuc}\n                    key={\"id\"}\n                    options={ListDMThuTuc}\n                    formatGroupLabel={formatGroupLabel}\n                    onChange={(data) => {\n                      setValueThuTuc(data);\n                      getList({ thu_tuc_id: data?.value });\n                    }}\n                  />\n                </div>\n\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Trạng thái</label>\n                  <Select\n                    value={valueTrangThai}\n                    key={\"id\"}\n                    options={ListDMTrangThaiHoSo}\n                    formatGroupLabel={formatGroupLabel}\n                    onChange={(data) => {\n                      setValueTrangThai(data);\n                      getList({ trang_thai: data?.value });\n                    }}\n                  />\n                </div>\n\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Trạng thái thụ lý</label>\n                  <Select\n                    value={valueTrangThaiHetHan}\n                    key={\"id\"}\n                    options={ListDMHetHan}\n                    formatGroupLabel={formatGroupLabel}\n                    onChange={(data) => {\n                      setValueTrangThaiHetHan(data);\n                      getList({ trang_thai_het_han: data?.value });\n                    }}\n                  />\n                </div>\n\n                <div className=\"col-3\">\n                  <button\n                    type=\"button\"\n                    style={{ height: \"38px\" }}\n                    className=\"btn btn-sm btn-trolai me-3 mt-8\"\n                    onClick={() => {\n                      resetState();\n                      getList({\n                        page_number: 1,\n                        han_den: \"\",\n                        han_tu: \"\",\n                        nop_den: \"\",\n                        nop_tu: \"\",\n                        trang_thai: \"\",\n                        trang_thai_het_han: \"\",\n                        thu_tuc_id: \"\",\n                        ho_ten: \"\",\n                        ma_ho_so: \"\",\n                      });\n                    }}\n                  >\n                    Xóa bộ lọc\n                  </button>\n                  {roles === \"lanhdao\" && valueTrangThai?.value === \"6\" ? (\n                    <>\n                      <button\n                        className=\"btn btn-sm me-3 mt-8\"\n                        style={btnDuyet}\n                        onClick={() => {\n                          handleSubmitDuyet(\"9\");\n                        }}\n                      >\n                        Duyệt\n                      </button>\n                      <button\n                        className=\"btn btn-sm me-3 mt-8\"\n                        style={btnTuChoi}\n                        onClick={() => {\n                          showModalCancel();\n                        }}\n                      >\n                        Từ chối\n                      </button>\n                    </>\n                  ) : roles === \"lanhdao\" && valueTrangThai?.value === \"12\" ? (\n                    <>\n                      <button\n                        className=\"btn btn-sm me-3 mt-8\"\n                        style={btnDuyet}\n                        onClick={() => {\n                          handleSubmitDuyet(\"5\");\n                        }}\n                      >\n                        Duyệt\n                      </button>\n                      <button\n                        className=\"btn btn-sm me-3 mt-8\"\n                        style={btnTuChoi}\n                        onClick={() => {\n                          handleSubmitDuyet(\"4\");\n                        }}\n                      >\n                        Từ chối\n                      </button>\n                    </>\n                  ) : (\n                    <Dropdown>\n                      <Dropdown.Toggle\n                        size=\"sm\"\n                        variant=\"primary\"\n                        id=\"dropdown-basic\"\n                      >\n                        Tùy chọn\n                      </Dropdown.Toggle>\n\n                      <Dropdown.Menu>\n                        <Dropdown.Item\n                          style={btnDuyet}\n                          onClick={() => {\n                            showModalSoQuyetDinh();\n                          }}\n                        >\n                          Ngày QĐ\n                        </Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <DataTable\n                  noDataComponent={\n                    <img\n                      style={{ width: \"30%\", height: \"auto\" }}\n                      src=\"/media/nodata-found.svg\"\n                    />\n                  }\n                  sortServer\n                  progressPending={isLoading}\n                  columns={columns}\n                  data={listHoSoThuLy}\n                  customStyles={customStyles}\n                  pagination\n                  highlightOnHover\n                  pointerOnHover\n                  paginationServer\n                  paginationTotalRows={totalRows}\n                  onChangeRowsPerPage={handlePerRowsChange}\n                  onChangePage={handlePageChange}\n                  selectableRows\n                  onSelectedRowsChange={handleChange}\n                  clearSelectedRows={toggledClearRows}\n                  paginationComponentOptions={paginationOptions}\n                  conditionalRowStyles={conditionalRowStyles}\n                  onRowClicked={(data) => {\n                    // detail(data);\n                    handleRowClicked(data);\n                  }}\n                  progressComponent={\n                    <div\n                      style={{\n                        padding: \"24px\",\n                      }}\n                    >\n                      <Oval\n                        arialLabel=\"loading-indicator\"\n                        color=\"#007bff\"\n                        height={40}\n                      />\n                    </div>\n                  }\n                />\n              </div>\n            </div>\n          </div>\n        </LocalizationProvider>\n      </div>\n      {/* </div> */}\n\n      <PopupThongTinHoSoDuocSi\n        show={chitiet}\n        hide={() => setChiTiet(false)}\n        data={rowData}\n      />\n      <PopupBoSung\n        show={isvisibleBoSung}\n        onHide={closeModalBoSung}\n        selectedRow={selectedRow || []}\n        isMulti={true}\n        title={\"Yêu cầu bổ sung\"}\n        getList={() => {\n          getList({});\n        }}\n      />\n      <PopupCancel\n        show={isvisibleCancel}\n        onHide={closeModalCancel}\n        selectedRow={selectedRow || []}\n        isMulti={true}\n        title={\"Xác nhận từ chối\"}\n        getList={() => {\n          getList({});\n        }}\n      />\n      <PopupSoQuyetDinh\n        show={isvisibleSoQuyetDinh}\n        onHide={closeModalSoQuyetDinh}\n        selectedRow={selectedRow || []}\n        isMulti={true}\n        title={\"Nhập số quyết định\"}\n        getList={() => {\n          getList({});\n        }}\n      />\n    </KTCard>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-thu-ly-duoc-si\\ChiTietHoSoThuLyCapMoi.js",["1605","1606"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { PageTitle } from \"../../../../_metronic/layout/core\";\nimport api from \"../../../configs/api\";\nimport { BangCap } from \"../duoc-si/bang-cap/BangCap\";\nimport { LichSuDaoTao } from \"../duoc-si/lich-su-dao-tao/LichSuDaoTao\";\nimport { LichSuThucHanh } from \"../duoc-si/lich-su-thuc-hanh/LichSuThucHanh\";\nimport DeNghiView from \"./components/DeNghi\";\nimport LyDoHeader from \"./components/LyDoHeader\";\nimport ThongTinCaNhan from \"./components/thong-tin-ca-nhan/ThongTinCaNhan\";\n\nLoadingOverlay.propTypes = undefined;\nexport function ChiTietHoSoThuLyCapMoi(props) {\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [thongTinHoSo, setThongTinHoSo] = useState({});\n  const [FileDeNghiCapLai, setFileDeNghiCapLai] = useState([]);\n  const [FileAnhChanDung, setFileAnhChanDung] = useState([]);\n  const [FileKhac, setFileKhac] = useState([]);\n  const [FileVanBangChuyenMon, setFileVanBangChuyenMon] = useState([]);\n  const [FileXacNhanSucKhoe, setFileXacNhanSucKhoe] = useState([]);\n  const [FileXacNhanThucHanh, setFileXacNhanThucHanh] = useState([]);\n  const [FileXacNhanDaoTao, setFileXacNhanDaoTao] = useState([]);\n  const [FileXacNhanCongDan, setFileXacNhanCongDan] = useState([]);\n  const [FileXacNhanLyLich, setFileXacNhanLyLich] = useState([]);\n  const [FileXacNhanLePhi, setFileXacNhanLePhi] = useState([]);\n  const [TypeHoSo, setTypeHoSo] = useState(\"\");\n  const [DeNghi, setDeNghi] = useState(\"\");\n  const [NoiDung, setNoiDung] = useState(\"\");\n\n  useEffect(() => {\n    if (id) {\n      getThongTinHoSo(id);\n    }\n  }, []);\n\n  useEffect(() => {\n    renderButtonsBottom()\n  }, [thongTinHoSo]);\n\n  const getThongTinHoSo = async (id) => {\n    await setIsLoading(true);\n    axios\n      .get(api.API_DETAIL_HO_SO_THU_LY_DUOC_SI + \"/\" + id)\n      .then(async ({ data }) => {\n        const { result } = data;\n        if (result) {\n          if (data?.result?.thu_tuc?.ten === \"Điều chỉnh nội dung Chứng chỉ hành nghề dược\") {\n            setNoiDung(data?.result?.noi_dung_xin_dieu_chinh);\n          } else if (data?.result?.thu_tuc?.ten === \"Cấp lại chứng chỉ hành nghề dược\") {\n            setNoiDung(data?.result?.ly_do_mat_hong);\n          }\n          setTypeHoSo(data?.result?.trang_thai_ho_so);\n          setDeNghi(data?.result?.de_nghi);\n          setThongTinHoSo(data?.result);\n        }\n\n      })\n      .catch((error) => {\n        toast.error(\"Lấy thông tin chứng chỉ không thành công\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n        navigate(\"/error/404\");\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const renderChooseFile = ({ title, name, arrayFileMap, setFile }) => {\n    return (\n      <div className=\"col-6\">\n        <div className=\"row\">\n          <div className=\"col-12\">{title}</div>\n          <div className=\"col-12\">\n            {arrayFileMap?.length > 0\n              ? arrayFileMap.map((e, i) => {\n                  return (\n                    <div key={i} className=\"pb-2\">\n                      <i\n                        style={{ display: \"inline\", color: \"red\" }}\n                        onClick={() => {\n                          let arrFile = arrayFileMap;\n                          arrFile = arrFile.filter(\n                            (item) => item.name !== e?.name\n                          );\n                          setFile(arrFile);\n                        }}\n                        className=\"fas fa-times-circle\"\n                      ></i>\n                      <Button className=\"ml-2\">\n                        <span>{e?.name}</span>\n                      </Button>\n                    </div>\n                  );\n                })\n              : null}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const usersBreadcrumbs = [\n    {\n      title: \"Trang chủ\",\n      path: \"/\",\n      isSeparator: false,\n      isActive: false,\n    },\n    {\n      title: \"\",\n      path: \"\",\n      isSeparator: true,\n      isActive: false,\n    },\n  ];\n\n  const renderButtonsBottom = () => {\n    switch (TypeHoSo) {\n      case \"2\":\n        return (\n          <div\n            onClick={() => {\n              updateHoSo();\n            }}\n            className=\"btn btn-success text-white px-4 py-2 mx-2 font-weight-bold\"\n          >\n            XÁC NHẬN THỤ LÝ\n          </div>\n        );\n      case \"4\":\n      case \"5\":\n        return (\n          <>\n            <div\n              onClick={() => {\n                navigate(\n                  `/admin/danhsach-hoso-thuly-duocsi/duthaocapphep/${id}`\n                );\n              }}\n              className=\"btn btn-primary text-white px-4 py-2 mx-2 font-weight-bold\"\n            >\n              DỰ THẢO TRÌNH CẤP\n            </div>\n\n            <div\n              onClick={() => {\n                navigate(\n                  `/admin/danhsach-hoso-thuly-duocsi/yeucaubosung/${id}`\n                );\n              }}\n              className=\"btn btn-warning text-white px-4 py-2 mx-2 font-weight-bold\"\n            >\n              YÊU CẦU BỔ SUNG\n            </div>\n          </>\n        );\n      case \"10\":\n      case \"11\":\n        return (\n          <>\n            <div className=\"btn btn-primary text-white px-4 py-2 mx-2 font-weight-bold\">\n              THẨM ĐỊNH\n            </div>\n            <div className=\"btn btn-primary text-white px-4 py-2 mx-2 font-weight-bold\">\n              IN VĂN BẢN TỪ CHỐI\n            </div>\n          </>\n        );\n      default:\n        break;\n    }\n  };\n\n  const updateHoSo = async () => {\n    await setIsLoading(true);\n    const jsonUpdate = {\n      id: id,\n      trang_thai_ho_so: \"4\",\n    };\n    axios\n      .post(api.API_YEU_CAU_CHUNG_CHI_HANH_NGHE + \"/thu_ly\", jsonUpdate)\n      .then(async ({ data }) => {\n        toast.success(\"Cập nhật thành công\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        getThongTinHoSo(id)\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  return (\n    <div>\n      <PageTitle breadcrumbs={usersBreadcrumbs}>Chi tiết hồ sơ</PageTitle>\n      <LoadingOverlay spinner active={isLoading} text=\"Đang tải dữ liệu ...\">\n        <LyDoHeader thongTinHoSo={thongTinHoSo} />\n\n        {/* Thủ tục */}\n        <div className=\"card py-6 px-6 mx-3 my-3\">\n          <label className=\"fw-bold fs-5\">THỦ TỤC</label>\n          <div className=\"text py-2\">\n            {thongTinHoSo?.thu_tuc ? thongTinHoSo?.thu_tuc?.ten : \"\"}\n          </div>\n        </div>\n\n        {/* THÔNG TIN CÁ NHÂN */}\n        <ThongTinCaNhan thongTinHoSo={thongTinHoSo} />\n\n        {/* BẰNG CẤP  */}\n        <BangCap userId={thongTinHoSo?.user?.id} />\n        {/* THỰC HÀNH TẠI CƠ SỞ DƯỢC */}\n        <LichSuThucHanh userId={thongTinHoSo?.user?.id} />\n        {/* ĐÀO TẠO LIÊN TỤC */}\n        <LichSuDaoTao userId={thongTinHoSo?.user?.id} />\n\n        {/* ĐỀ NGHỊ */}\n        <DeNghiView DeNghi={DeNghi} NoiDung={NoiDung} ThuTuc={thongTinHoSo?.thu_tuc} />\n        {/* FILE ĐÍNH KÈM */}\n        <div className=\"card-box py-6 px-6 mx-3 my-3\">\n          <div className=\"fw-bold fs-5\">DANH SÁCH HỒ SƠ ĐÍNH KÈM</div>\n          <div className=\"row pt-2\">\n            {renderChooseFile({\n              title:\n                \"1. Đơn đề nghị cấp lại Chứng chỉ hành nghề dược(theo mẫu)\",\n              name: \"denghicaplai\",\n              arrayFileMap: FileDeNghiCapLai,\n              setFile: (value) => {\n                setFileDeNghiCapLai(value);\n              },\n            })}\n            {renderChooseFile({\n              title:\n                \"2. 02 ảnh chân dung 4 cm x 6 cm chụp trên nền trắng không quá 06 tháng;\",\n              name: \"anhchandung\",\n              arrayFileMap: FileAnhChanDung,\n              setFile: (value) => {\n                setFileAnhChanDung(value);\n              },\n            })}\n          </div>\n\n          <div className=\"row pt-2\">\n            {renderChooseFile({\n              title: \"3. Bản sao có chứng thực văn bằng chuyên môn\",\n              name: \"vanbangchuyenmon\",\n              arrayFileMap: FileVanBangChuyenMon,\n              setFile: (value) => {\n                setFileVanBangChuyenMon(value);\n              },\n            })}\n            {renderChooseFile({\n              title:\n                \"4. Giấy chứng nhận đủ sức khỏe đề hành nghề được do cơ sở y tế có thẩm quyền cấp\",\n              name: \"xacnhansuckhoe\",\n              arrayFileMap: FileXacNhanSucKhoe,\n              setFile: (value) => {\n                setFileXacNhanSucKhoe(value);\n              },\n            })}\n          </div>\n          <div className=\"row pt-2\">\n            {renderChooseFile({\n              title:\n                \"5. Giấy xác nhận về thời gian thực hành chuyên môn do người đứng đầu cơ sở nơi người đó thực hành cấp (Giấy xác nhận thời gian thực hành tại cơ sở thực hành chuyên môn về dược)\",\n              name: \"xacnhanthuchanh\",\n              arrayFileMap: FileXacNhanThucHanh,\n              setFile: (value) => {\n                setFileXacNhanThucHanh(value);\n              },\n            })}\n            {renderChooseFile({\n              title:\n                \"6. Giấy xác nhận hoàn thành chương trình đào tạo, cập nhật kiến thức chuyên môn về dược đối với trường hợp đã bị thu hồi CCHND theo quy định tại khoản 9 điều 28 của Luật dược.\",\n              name: \"xacnhandaotao\",\n              arrayFileMap: FileXacNhanDaoTao,\n              setFile: (value) => {\n                setFileXacNhanDaoTao(value);\n              },\n            })}\n          </div>\n          <div className=\"row pt-2\">\n            {renderChooseFile({\n              title:\n                \"7. Bản sao có chứng thưc căn cước công dân, giấy chứng minh nhân dân hoặc hộ chiếu\",\n              name: \"xacnhancongdan\",\n              arrayFileMap: FileXacNhanCongDan,\n              setFile: (value) => {\n                setFileXacNhanCongDan(value);\n              },\n            })}\n            {renderChooseFile({\n              title: \"8. Phiếu lý lịch tư pháp\",\n              name: \"xacnhanlylich\",\n              arrayFileMap: FileXacNhanLyLich,\n              setFile: (value) => {\n                setFileXacNhanLyLich(value);\n              },\n            })}\n          </div>\n          <div className=\"row pt-2\">\n            {renderChooseFile({\n              title:\n                \"9. Biên lai, chứng từ xác nhận đã nộp phí tài khoản ngân hàng của Sở Y tế\",\n              name: \"xacnhanlephi\",\n              arrayFileMap: FileXacNhanLePhi,\n              setFile: (value) => {\n                setFileXacNhanLePhi(value);\n              },\n            })}\n            {renderChooseFile({\n              title: \"10. Khác\",\n              name: \"khac\",\n              arrayFileMap: FileKhac,\n              setFile: (value) => {\n                setFileKhac(value);\n              },\n            })}\n          </div>\n        </div>\n\n        <div className=\"row w-100\">\n          <div className=\"col-12 mt-4 mb-5 text-center\">\n            <div\n              onClick={() => {\n                navigate(-1);\n              }}\n              className=\"btn bg-primary2 text-white px-4 py-2 mx-2 font-weight-bold\"\n            >\n              QUAY LẠI\n            </div>\n            {renderButtonsBottom()}\n            {TypeHoSo === \"2\" ||\n            TypeHoSo === \"4\" ||\n            TypeHoSo === \"5\" ? (\n              <div\n                onClick={() => {\n                  navigate(`/admin/danhsach-hoso-thuly-duocsi/tuchoi/${id}`);\n                }}\n                className=\"btn btn-danger text-white px-4 py-2 mx-2 font-weight-bold \"\n              >\n                TỪ CHỐI\n              </div>\n            ) : null}\n           \n          </div>\n        </div>\n      </LoadingOverlay>\n    </div>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\loai-ma-chung-chi\\LoaiMaChungChi.js",["1607","1608","1609","1610","1611","1612","1613","1614","1615","1616","1617"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport BlockUi from \"react-block-ui\";\nimport { Form } from \"react-bootstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Oval } from \"react-loader-spinner\";\n// import { useDispatch } from \"react-redux\";\nimport clsx from \"clsx\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { KTCard, KTSVG, useDebounce } from \"../../../../_metronic/helpers\";\nimport { PageTitle } from \"../../../../_metronic/layout/core\";\nimport Status from \"../../../components/Status\";\nimport api from \"../../../configs/api\";\nimport { PopupDelete } from \"../popup/PopupDelete\";\n\nexport function LoaiMaChungChi() {\n  const navigate = useNavigate();\n  const [listLoaiMaChungChi, setListLoaiMaChungChi] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n  const [page, setPage] = useState(1);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [stt, setStt] = useState(0);\n  const [trang_thai, setTrang_thai] = useState(true);\n\n  //open modal delete\n  const [isvisibleDelete, setIsvisibleDelete] = useState(false);\n  const [idDelete, setIdDelete] = useState(\"\");\n  const closeModalDelete = () => setIsvisibleDelete(false);\n  const showModalDelete = () => setIsvisibleDelete(true);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const debouncedSearchTerm = useDebounce(searchTerm, 1000);\n\n  useEffect(\n    () => {\n      if (debouncedSearchTerm !== undefined && searchTerm !== undefined) {\n        getList(1, perPage, debouncedSearchTerm);\n      }\n    },\n    [debouncedSearchTerm] // Only call effect if debounced search term changes\n  );\n\n  const getList = ({\n    page_number = page,\n    size = perPage,\n    search_key = searchTerm,\n  }) => {\n    setIsLoading(true);\n    axios\n      .post(\n        api.API_LIST_NOI_TOT_NGHIEP + `?page=${page_number}&per_page=${size}`,\n        { ten: search_key }\n      )\n      .then(async ({ data }) => {\n        setListLoaiMaChungChi(data?.results);\n        setTotalRows(data?.total);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  //validate thêm loại mã chứng chỉ\n  const [form, setForm] = useState({});\n  const [errors, setErrors] = useState({});\n  const setField = (field, value) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n    if (!!errors[field])\n      setErrors({\n        ...errors,\n        [field]: null,\n      });\n  };\n  const findFormErrors = () => {\n    const { ten, ma_noi_tot_nghiep, chi_tiet, loai, stt, ten_in } = form;\n    const newErrors = {};\n    // name errors\n    if (!ten || ten === \"\") newErrors.ten = \"Tên không được bỏ trống!\";\n    if (!ma_noi_tot_nghiep || ma_noi_tot_nghiep === \"\")\n      newErrors.ma_noi_tot_nghiep = \"Mã không được bỏ trống!\";\n    return newErrors;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // get our new errors\n    const newErrors = findFormErrors();\n    // Conditional logic:\n    if (Object.keys(newErrors).length > 0) {\n      console.log(newErrors);\n      // We got errors!\n      setErrors(newErrors);\n    } else {\n      // No errors! Put any logic here for the form submission!\n      showUpdate ? updateLoaiMaChungChi() : addLoaiMaChungChi();\n    }\n  };\n\n  // handle api\n  const addLoaiMaChungChi = async () => {\n    setIsLoading(true);\n    const { ten, ma_noi_tot_nghiep } = form;\n    const json = {\n      ten,\n      ma_noi_tot_nghiep,\n      trang_thai: trang_thai,\n    };\n    await axios\n      .post(api.API_NOI_TOT_NGHIEP, json)\n      .then(async ({ data }) => {\n        resetState();\n        toast.success(\"Tạo loại mã chứng chỉ thành công\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        getList({});\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        console.log(\"error\", error?.response);\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const updateLoaiMaChungChi = async () => {\n    setIsLoading(true);\n    const { ten, ma_noi_tot_nghiep, id } = form;\n    const json = {\n      ten,\n      ma_noi_tot_nghiep,\n      trang_thai: trang_thai,\n    };\n    await axios\n      .put(api.API_NOI_TOT_NGHIEP + \"/\" + id, json)\n      .then(async ({ data }) => {\n        resetState();\n        toast.success(\"Cập nhật loại mã chứng chỉ thành công\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        getList({});\n      })\n      .catch((error) => {\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const resetState = () => {\n    setForm({\n      ma_noi_tot_nghiep: \"\",\n      ten: \"\",\n    });\n    setErrors({});\n    setShowUpdate(false);\n    const updatedData = listLoaiMaChungChi?.map((item) => {\n      return {\n        ...item,\n        toggleSelected: false,\n      };\n    });\n    setData(updatedData);\n  };\n\n  // DETAIL\n  const detail = async (data) => {\n    setForm({\n      ...data,\n    });\n    setTrang_thai(data?.trang_thai);\n    setShowUpdate(true);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    await setIsLoading(true);\n    axios\n      .post(\n        api.API_LIST_NOI_TOT_NGHIEP + `?page=${page}&per_page=${newPerPage}`,\n        {}\n      )\n      .then(({ data }) => {\n        if (data?.results) {\n          setListLoaiMaChungChi(data?.results);\n          setPerPage(newPerPage);\n        }\n      })\n      .catch(() => {})\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const deleteNTN = () => {\n    axios\n      .delete(api.API_NOI_TOT_NGHIEP + \"/\" + idDelete)\n      .then(async ({ data }) => {\n        await toast.success(data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        closeModalDelete();\n        resetState();\n        if (page == 1) {\n          getList({ page_number: 1 });\n        } else if (listLoaiMaChungChi?.length == 1) {\n          getList({ page_number: page - 1 });\n        } else {\n          getList({ page_number: page });\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\", error);\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n  const handlePageChange = (page) => {\n    setPage(page);\n    getList({ page_number: page });\n  };\n\n  //đổi màu khi selected\n  const [data, setData] = useState(listLoaiMaChungChi);\n  useEffect(() => {\n    setData(listLoaiMaChungChi);\n  }, [listLoaiMaChungChi]);\n\n  const handleRowClicked = (row) => {\n    setErrors({});\n    const updatedData = listLoaiMaChungChi?.map((item) => {\n      if (row.id !== item.id) {\n        return item;\n      }\n      return {\n        ...item,\n        toggleSelected: !item.toggleSelected,\n      };\n    });\n    setData(updatedData);\n  };\n  const formatGroupLabel = (listTemp) => (\n    <div style={groupStyles}>\n      <span>{listTemp.ten}</span>\n    </div>\n  );\n  const handleChangeLocation = (evt) => {\n    const temp = evt.target.validity.valid ? evt.target.value : stt;\n    setStt(temp);\n  };\n  const groupStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  };\n  const paginationOptions = {\n    rowsPerPageText: \"Dòng hiển thị\",\n    rangeSeparatorText: \"trên\",\n  };\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: \"solid\",\n        borderTopWidth: \"1px\",\n        borderTopColor: \"#e0e0e0\",\n        borderBottomColor: \"#e0e0e0\",\n      },\n    },\n    headCells: {\n      style: {\n        color: \"#202124\",\n        fontSize: \"16px\",\n      },\n    },\n    rows: {\n      highlightOnHoverStyle: {\n        backgroundColor: \"rgb(230, 244, 244)\",\n        borderBottomColor: \"#FFFFFF\",\n        outline: \"1px solid #FFFFFF\",\n      },\n    },\n    pagination: {\n      style: {\n        border: \"none\",\n      },\n    },\n  };\n  const columns = [\n    {\n      name: \"Mã\",\n      selector: (row) => <span>{row.ma_noi_tot_nghiep}</span>,\n      grow: 3,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Tên\",\n      selector: (row) => <span>{row.ten}</span>,\n      grow: 8,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Trang thái\",\n      selector: (row) => <span>{row.trang_thai}</span>,\n      grow: 3,\n      cell: (row) => (\n        <td>\n          <Status status={row.trang_thai} />\n        </td>\n      ),\n    },\n    {\n      name: \"Thao tác\",\n      grow: 2,\n      cell: (row) => (\n        <div className=\"container my-3\">\n          <button\n            onClick={async () => {\n              await setIdDelete(row?.id);\n              showModalDelete();\n            }}\n            className=\"btn btn-icon btn-bg-light btn-color-danger btn-sm\"\n          >\n            <KTSVG\n              path=\"/media/icons/duotune/general/gen027.svg\"\n              className=\"svg-icon-3\"\n            />\n          </button>\n        </div>\n      ),\n    },\n  ];\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.toggleSelected,\n      style: {\n        backgroundColor: \"#f5f5f5\",\n        userSelect: \"none\",\n      },\n    },\n  ];\n\n  const cardBox = {\n    backgroundColor: \"#fff\",\n    backgroundClip: \"border-box\",\n    border: \"1px solid #e7eaed\",\n    padding: \"1.5rem\",\n    marginBottom: \"24px\",\n    borderRadius: \"0.5rem\",\n  };\n\n  const usersBreadcrumbs = [\n    {\n      title: \"Trang chủ\",\n      path: \"/\",\n      isSeparator: false,\n      isActive: false,\n    },\n    {\n      title: \"\",\n      path: \"\",\n      isSeparator: true,\n      isActive: false,\n    },\n  ];\n\n  return (\n    <KTCard>\n      <PageTitle breadcrumbs={usersBreadcrumbs}>Loại mã chứng chỉ</PageTitle>\n      <div className=\"page\">\n        <div className=\"container-fluid\">\n          <div className=\"fv-row mb-7 mt-6\">\n            {/* begin::Label */}\n            <label className=\"required fw-bold fs-6 mb-2\">\n              Tên loại mã chứng chỉ\n            </label>\n            {/* end::Label */}\n\n            {/* begin::Input */}\n            <div className=\"col-md-6\">\n              <input\n                placeholder=\"Nhập tên tìm kiếm...\"\n                type=\"text\"\n                name=\"name\"\n                className={clsx(\"form-control form-control-solid mb-3 mb-lg-0\")}\n                autoComplete=\"off\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n            </div>\n\n            {/* end::Input */}\n          </div>\n          <BlockUi tag=\"div\" blocking={isLoading} centerY={true} centerX={true}>\n            <div className=\"row\">\n              <div className=\"col-md-8\">\n                <div className=\"\" style={cardBox}>\n                  <DataTable\n                    noDataComponent={\n                      <img\n                        style={{ width: \"30%\", height: \"auto\" }}\n                        src=\"/media/nodata-found.svg\"\n                      />\n                    }\n                    sortServer\n                    progressPending={isLoading}\n                    columns={columns}\n                    data={data}\n                    customStyles={customStyles}\n                    pagination\n                    highlightOnHover\n                    pointerOnHover\n                    paginationServer\n                    paginationTotalRows={totalRows}\n                    onChangeRowsPerPage={handlePerRowsChange}\n                    onChangePage={handlePageChange}\n                    paginationComponentOptions={paginationOptions}\n                    conditionalRowStyles={conditionalRowStyles}\n                    onRowClicked={(data) => {\n                      detail(data);\n                      handleRowClicked(data);\n                    }}\n                    progressComponent={\n                      <div\n                        style={{\n                          padding: \"24px\",\n                        }}\n                      >\n                        <Oval\n                          arialLabel=\"loading-indicator\"\n                          color=\"#007bff\"\n                          height={40}\n                        />\n                      </div>\n                    }\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-4\">\n                <div className=\"\" style={cardBox}>\n                  <div className=\"\">\n                    <p className=\"font-weight-bold\">\n                      {showUpdate\n                        ? \"Cập nhật loại mã chứng chỉ\"\n                        : \"Tạo mới loại mã chứng chỉ\"}\n                    </p>\n                  </div>\n\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      <p className=\"font-weight-bold\">\n                        Mã<span className=\"text-danger\">*</span>\n                      </p>\n                    </div>\n                    <div className=\"col-8\">\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Nhập tên mã loại mã chứng chỉ\"\n                        style={{ fontSize: 14, fontWeight: 500 }}\n                        value={\n                          form.ma_noi_tot_nghiep === null\n                            ? \"\"\n                            : form.ma_noi_tot_nghiep\n                        }\n                        onChange={async (e) => {\n                          await setField(\"ma_noi_tot_nghiep\", e.target.value);\n                        }}\n                        isInvalid={!!errors.ma_noi_tot_nghiep}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.ma_noi_tot_nghiep}\n                      </Form.Control.Feedback>\n                    </div>\n                  </div>\n\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      <p className=\"font-weight-bold\">\n                        Tên<span className=\"text-danger\">*</span>\n                      </p>\n                    </div>\n                    <div className=\"col-8\">\n                      <Form.Control\n                        as=\"textarea\"\n                        rows={3}\n                        placeholder=\"Nhập tên mã loại mã chứng chỉ\"\n                        style={{ fontSize: 14, fontWeight: 500 }}\n                        value={form.ten === null ? \"\" : form.ten}\n                        onChange={(e) => {\n                          setField(\"ten\", e.target.value);\n                        }}\n                        isInvalid={!!errors.ten}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.ten}\n                      </Form.Control.Feedback>\n                    </div>\n                  </div>\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      <label className=\"fw-bold fs-6 mb-2\">Trạng thái</label>\n                    </div>\n                    <div className=\"col-8\">\n                      <div className=\"form-check form-check-solid form-switch fv-row\">\n                        <input\n                          className=\"form-check-input w-45px h-30px\"\n                          type=\"checkbox\"\n                          id=\"trang_thai\"\n                          checked={trang_thai}\n                          onChange={(e) => {\n                            setTrang_thai(!trang_thai);\n                          }}\n                        />\n                        <label className=\"form-check-label\"></label>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      {showUpdate ? (\n                        <button\n                          className=\"btn text-white bg-blue2\"\n                          style={{ fontSize: \".9rem\" }}\n                          onClick={() => resetState()}\n                        >\n                          <i className=\"fas fa-sync-alt text-white\"></i> Làm mới\n                        </button>\n                      ) : null}\n                    </div>\n\n                    <div className=\"col-8\">\n                      <button\n                        className=\"btn text-white bg-blue2 mr-3\"\n                        style={{ fontSize: \".9rem\" }}\n                        onClick={(e) => {\n                          handleSubmit(e);\n                        }}\n                      >\n                        {showUpdate ? (\n                          <i className=\"fa fa-pencil-alt text-white\"></i>\n                        ) : (\n                          <i className=\"fas fa-save text-white\"></i>\n                        )}{\" \"}\n                        {showUpdate ? \"Cập nhật\" : \"Tạo loại mã chứng chỉ\"}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <PopupDelete\n              title=\"Bạn có đồng ý xóa loại mã chứng chỉ này không?\"\n              show={isvisibleDelete}\n              onHide={closeModalDelete}\n              onDetele={() => {\n                deleteNTN();\n              }}\n            />\n          </BlockUi>\n        </div>\n      </div>\n    </KTCard>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\loai-ma-gps\\LoaiMaGPS.js",["1618","1619","1620","1621","1622","1623"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport BlockUi from \"react-block-ui\";\nimport { Form } from \"react-bootstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Oval } from \"react-loader-spinner\";\n// import { useDispatch } from \"react-redux\";\nimport clsx from \"clsx\";\nimport { toast } from \"react-toastify\";\nimport { KTCard, KTSVG, useDebounce } from \"../../../../_metronic/helpers\";\nimport { PageTitle } from \"../../../../_metronic/layout/core\";\nimport Status from \"../../../components/Status\";\nimport api from \"../../../configs/api\";\nimport { PopupDelete } from \"../popup/PopupDelete\";\n\nexport function LoaiMaGps() {\n  const [listLoaiMaGPS, setListLoaiMaGPS] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n  const [page, setPage] = useState(1);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [stt, setStt] = useState(0);\n  const [trang_thai, setTrang_thai] = useState(true);\n\n  //open modal delete\n  const [isvisibleDelete, setIsvisibleDelete] = useState(false);\n  const [idDelete, setIdDelete] = useState(\"\");\n  const closeModalDelete = () => setIsvisibleDelete(false);\n  const showModalDelete = () => setIsvisibleDelete(true);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const debouncedSearchTerm = useDebounce(searchTerm, 1000);\n\n  useEffect(\n    () => {\n      if (debouncedSearchTerm !== undefined && searchTerm !== undefined) {\n        getList(1, perPage, debouncedSearchTerm);\n      }\n    },\n    [debouncedSearchTerm] // Only call effect if debounced search term changes\n  );\n\n  const getList = ({\n    page_number = page,\n    size = perPage,\n    search_key = searchTerm,\n  }) => {\n    setIsLoading(true);\n    axios\n      .post(\n        api.API_LIST_LOAI_MA_GPS + `?page=${page_number}&per_page=${size}`,\n        { ten: search_key }\n      )\n      .then(async ({ data }) => {\n        setListLoaiMaGPS(data?.results);\n        setTotalRows(data?.total);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  //validate thêm loại mã gps\n  const [form, setForm] = useState({});\n  const [errors, setErrors] = useState({});\n  const setField = (field, value) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n    if (!!errors[field])\n      setErrors({\n        ...errors,\n        [field]: null,\n      });\n  };\n  const findFormErrors = () => {\n    const { ten, so_da_cap } = form;\n    const newErrors = {};\n    // name errors\n    if (!ten || ten === \"\") newErrors.ten = \"Tên không được bỏ trống!\";\n    if (!so_da_cap || so_da_cap === \"\")\n      newErrors.so_da_cap = \"Số đã cấp không được bỏ trống!\";\n\n    return newErrors;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // get our new errors\n    const newErrors = findFormErrors();\n    // Conditional logic:\n    if (Object.keys(newErrors).length > 0) {\n      console.log(newErrors);\n      // We got errors!\n      setErrors(newErrors);\n    } else {\n      // No errors! Put any logic here for the form submission!\n      showUpdate ? updateLoaiMaGPS() : addLoaiMaGPS();\n    }\n  };\n\n  // handle api\n  const addLoaiMaGPS = async () => {\n    setIsLoading(true);\n    const { ten, so_da_cap } = form;\n    const json = {\n      ten,\n      trang_thai: trang_thai,\n      so_da_cap,\n    };\n    await axios\n      .post(api.API_ADD_LOAI_MA_GPS, json)\n      .then(async ({ data }) => {\n        resetState();\n        toast.success(\"Tạo loại mã gps thành công\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        getList({});\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        console.log(\"error\", error?.response);\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const updateLoaiMaGPS = async () => {\n    setIsLoading(true);\n    const { ten, id, so_da_cap } = form;\n    const json = {\n      ten,\n      trang_thai: trang_thai,\n      so_da_cap,\n    };\n    await axios\n      .put(api.API_LOAI_MA_GPS + \"/\" + id, json)\n      .then(async ({ data }) => {\n        resetState();\n        toast.success(\"Cập nhật loại mã gps thành công\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        getList({});\n      })\n      .catch((error) => {\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const resetState = () => {\n    setForm({\n      ten: \"\",\n      so_da_cap: \"\",\n    });\n    setErrors({});\n    setShowUpdate(false);\n    const updatedData = listLoaiMaGPS?.map((item) => {\n      return {\n        ...item,\n        toggleSelected: false,\n      };\n    });\n    setData(updatedData);\n  };\n\n  // DETAIL\n  const detail = async (data) => {\n    setForm({\n      ...data,\n    });\n    setTrang_thai(data?.trang_thai);\n    setShowUpdate(true);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    await setIsLoading(true);\n    axios\n      .post(\n        api.API_LIST_LOAI_MA_GPS + `?page=${page}&per_page=${newPerPage}`,\n        {}\n      )\n      .then(({ data }) => {\n        if (data?.results) {\n          setListLoaiMaGPS(data?.results);\n          setPerPage(newPerPage);\n        }\n      })\n      .catch(() => {})\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const deleteNTN = () => {\n    axios\n      .delete(api.API_LOAI_MA_GPS + \"/\" + idDelete)\n      .then(async ({ data }) => {\n        await toast.success(data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        closeModalDelete();\n        resetState();\n        if (page == 1) {\n          getList({ page_number: 1 });\n        } else if (listLoaiMaGPS?.length == 1) {\n          getList({ page_number: page - 1 });\n        } else {\n          getList({ page_number: page });\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\", error);\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n  const handlePageChange = (page) => {\n    setPage(page);\n    getList({ page_number: page });\n  };\n\n  //đổi màu khi selected\n  const [data, setData] = useState(listLoaiMaGPS);\n  useEffect(() => {\n    setData(listLoaiMaGPS);\n  }, [listLoaiMaGPS]);\n\n  const handleRowClicked = (row) => {\n    setErrors({});\n    const updatedData = listLoaiMaGPS?.map((item) => {\n      if (row.id !== item.id) {\n        return item;\n      }\n      return {\n        ...item,\n        toggleSelected: !item.toggleSelected,\n      };\n    });\n    setData(updatedData);\n  };\n  const formatGroupLabel = (listTemp) => (\n    <div style={groupStyles}>\n      <span>{listTemp.ten}</span>\n    </div>\n  );\n  const handleChangeLocation = (evt) => {\n    const temp = evt.target.validity.valid ? evt.target.value : stt;\n    setStt(temp);\n  };\n  const groupStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  };\n  const paginationOptions = {\n    rowsPerPageText: \"Dòng hiển thị\",\n    rangeSeparatorText: \"trên\",\n  };\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: \"solid\",\n        borderTopWidth: \"1px\",\n        borderTopColor: \"#e0e0e0\",\n        borderBottomColor: \"#e0e0e0\",\n      },\n    },\n    headCells: {\n      style: {\n        color: \"#202124\",\n        fontSize: \"16px\",\n      },\n    },\n    rows: {\n      highlightOnHoverStyle: {\n        backgroundColor: \"rgb(230, 244, 244)\",\n        borderBottomColor: \"#FFFFFF\",\n        outline: \"1px solid #FFFFFF\",\n      },\n    },\n    pagination: {\n      style: {\n        border: \"none\",\n      },\n    },\n  };\n  const columns = [\n    {\n      name: \"Mã\",\n      selector: (row) => (\n        <div\n          onClick={() => {\n            detail(row);\n            handleRowClicked(row);\n          }}\n        >\n          <span>{row.ma_gps}</span>\n        </div>\n      ),\n      grow: 3,\n      style: {\n        color: \"#1251ff\",\n        fontSize: \"14px\",\n        fontWeight: 500,\n        width: 300,\n        cursor: \"pointer\",\n      },\n    },\n    {\n      name: \"Tên\",\n      selector: (row) => <span>{row.ten}</span>,\n      grow: 8,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Trang thái\",\n      selector: (row) => <span>{row.trang_thai}</span>,\n      grow: 3,\n      cell: (row) => (\n        <td>\n          <Status status={row.trang_thai} />\n        </td>\n      ),\n    },\n    {\n      name: \"Thao tác\",\n      grow: 2,\n      cell: (row) => (\n        <div className=\"container my-3\">\n          <button\n            onClick={async () => {\n              await setIdDelete(row?.id);\n              showModalDelete();\n            }}\n            className=\"btn btn-icon btn-bg-light btn-color-danger btn-sm\"\n          >\n            <KTSVG\n              path=\"/media/icons/duotune/general/gen027.svg\"\n              className=\"svg-icon-3\"\n            />\n          </button>\n        </div>\n      ),\n    },\n  ];\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.toggleSelected,\n      style: {\n        backgroundColor: \"#f5f5f5\",\n        userSelect: \"none\",\n      },\n    },\n  ];\n  const cardBox = {\n    backgroundColor: \"#fff\",\n    backgroundClip: \"border-box\",\n    border: \"1px solid #e7eaed\",\n    padding: \"1.5rem\",\n    marginBottom: \"24px\",\n    borderRadius: \"0.5rem\",\n  };\n\n  const usersBreadcrumbs = [\n    {\n      title: \"Trang chủ\",\n      path: \"/\",\n      isSeparator: false,\n      isActive: false,\n    },\n    {\n      title: \"\",\n      path: \"\",\n      isSeparator: true,\n      isActive: false,\n    },\n  ];\n\n  return (\n    <KTCard>\n      <PageTitle breadcrumbs={usersBreadcrumbs}>Loại mã gps</PageTitle>\n      <div className=\"page\">\n        <div className=\"container-fluid\">\n          <div className=\"fv-row mb-7 mt-6\">\n            {/* begin::Label */}\n            <label className=\"required fw-bold fs-6 mb-2\">\n              Tên loại mã gps\n            </label>\n            {/* end::Label */}\n\n            {/* begin::Input */}\n            <div className=\"col-md-6\">\n              <input\n                placeholder=\"Nhập tên tìm kiếm...\"\n                type=\"text\"\n                name=\"name\"\n                className={clsx(\"form-control form-control-solid mb-3 mb-lg-0\")}\n                autoComplete=\"off\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n            </div>\n\n            {/* end::Input */}\n          </div>\n          <BlockUi tag=\"div\" blocking={isLoading} centerY={true} centerX={true}>\n            <div className=\"row\">\n              <div className=\"col-md-8\">\n                <div className=\"\" style={cardBox}>\n                  <DataTable\n                    noDataComponent={\n                      <img\n                        style={{ width: \"30%\", height: \"auto\" }}\n                        src=\"/media/nodata-found.svg\"\n                      />\n                    }\n                    sortServer\n                    progressPending={isLoading}\n                    columns={columns}\n                    data={data}\n                    customStyles={customStyles}\n                    pagination\n                    highlightOnHover\n                    pointerOnHover\n                    paginationServer\n                    paginationTotalRows={totalRows}\n                    onChangeRowsPerPage={handlePerRowsChange}\n                    onChangePage={handlePageChange}\n                    paginationComponentOptions={paginationOptions}\n                    conditionalRowStyles={conditionalRowStyles}\n                    // onRowClicked={(data) => {\n                    //   detail(data);\n                    //   handleRowClicked(data);\n                    // }}\n                    progressComponent={\n                      <div\n                        style={{\n                          padding: \"24px\",\n                        }}\n                      >\n                        <Oval\n                          arialLabel=\"loading-indicator\"\n                          color=\"#007bff\"\n                          height={40}\n                        />\n                      </div>\n                    }\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-4\">\n                <div className=\"\" style={cardBox}>\n                  <div className=\"\">\n                    <p className=\"font-weight-bold\">\n                      {showUpdate\n                        ? \"Cập nhật loại mã gps\"\n                        : \"Tạo mới loại mã gps\"}\n                    </p>\n                  </div>\n                  {showUpdate && (\n                    <div className=\"row mt-3\">\n                      <div className=\"col-4\">\n                        <p className=\"font-weight-bold\">\n                          Mã<span className=\"text-danger\">*</span>\n                        </p>\n                      </div>\n                      <div className=\"col-8\">\n                        <Form.Control\n                          type=\"text\"\n                          disabled={true}\n                          placeholder=\"Nhập tên mã loại mã gps\"\n                          style={{ fontSize: 14, fontWeight: 500 }}\n                          value={form.ma_gps === null ? \"\" : form.ma_gps}\n                        />\n                      </div>\n                    </div>\n                  )}\n\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      <p className=\"font-weight-bold\">\n                        Tên<span className=\"text-danger\">*</span>\n                      </p>\n                    </div>\n                    <div className=\"col-8\">\n                      <Form.Control\n                        as=\"textarea\"\n                        rows={3}\n                        placeholder=\"Nhập tên mã loại mã gps\"\n                        style={{ fontSize: 14, fontWeight: 500 }}\n                        value={form.ten === null ? \"\" : form.ten}\n                        onChange={(e) => {\n                          setField(\"ten\", e.target.value);\n                        }}\n                        isInvalid={!!errors.ten}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.ten}\n                      </Form.Control.Feedback>\n                    </div>\n                  </div>\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      <p className=\"font-weight-bold\">\n                        Số đã cấp<span className=\"text-danger\">*</span>\n                      </p>\n                    </div>\n                    <div className=\"col-8\">\n                      <Form.Control\n                        placeholder=\"Nhập số đã cấp loại mã gps\"\n                        style={{ fontSize: 14, fontWeight: 500 }}\n                        value={form.so_da_cap === null ? \"\" : form.so_da_cap}\n                        onChange={(e) => {\n                          setField(\"so_da_cap\", e.target.value);\n                        }}\n                        isInvalid={!!errors.so_da_cap}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.so_da_cap}\n                      </Form.Control.Feedback>\n                    </div>\n                  </div>\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      <label className=\"fw-bold fs-6 mb-2\">Trạng thái</label>\n                    </div>\n                    <div className=\"col-8\">\n                      <div className=\"form-check form-check-solid form-switch fv-row\">\n                        <input\n                          className=\"form-check-input w-45px h-30px\"\n                          type=\"checkbox\"\n                          id=\"trang_thai\"\n                          checked={trang_thai}\n                          onChange={(e) => {\n                            setTrang_thai(!trang_thai);\n                          }}\n                        />\n                        <label className=\"form-check-label\"></label>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      {showUpdate ? (\n                        <button\n                          className=\"btn text-white bg-blue2\"\n                          style={{ fontSize: \".9rem\" }}\n                          onClick={() => resetState()}\n                        >\n                          <i className=\"fas fa-sync-alt text-white\"></i> Làm mới\n                        </button>\n                      ) : null}\n                    </div>\n\n                    <div className=\"col-8\">\n                      <button\n                        className=\"btn text-white bg-blue2 mr-3\"\n                        style={{ fontSize: \".9rem\" }}\n                        onClick={(e) => {\n                          handleSubmit(e);\n                        }}\n                      >\n                        {showUpdate ? (\n                          <i className=\"fa fa-pencil-alt text-white\"></i>\n                        ) : (\n                          <i className=\"fas fa-save text-white\"></i>\n                        )}{\" \"}\n                        {showUpdate ? \"Cập nhật\" : \"Tạo loại mã gps\"}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <PopupDelete\n              title=\"Bạn có đồng ý xóa loại mã gps này không?\"\n              show={isvisibleDelete}\n              onHide={closeModalDelete}\n              onDetele={() => {\n                deleteNTN();\n              }}\n            />\n          </BlockUi>\n        </div>\n      </div>\n    </KTCard>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-thu-ly-duoc-si\\DanhSachHoSoThuLyDuocSi.js",["1624"],["1625","1626","1627","1628","1629","1630","1631","1632","1633"],"/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-vars */\nimport { enAU } from \"date-fns/locale\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider, DesktopDatePicker } from \"@mui/x-date-pickers\";\n\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { useEffect, useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Oval } from \"react-loader-spinner\";\nimport { TextField } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport { toast } from \"react-toastify\";\nimport { KTCard, useDebounce } from \"../../../../_metronic/helpers\";\nimport { PageTitle } from \"../../../../_metronic/layout/core\";\nimport api from \"../../../configs/api\";\nimport { TrangThaiHoSo } from \"../../../data\";\nimport PopupCancel from \"../popup/PopupCancel\";\nimport { useSelector } from \"react-redux\";\nimport { selectRoleUser } from \"../../../redux-module/auth/authSlice\";\n\nexport function DanhSachHoSoThuLyDuocSi() {\n  const navigate = useNavigate();\n  const roleUser = useSelector(selectRoleUser);\n\n  const [listHoSoThuLy, setListHoSoThuLy] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n  const [page, setPage] = useState(1);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [trang_thai, setTrang_thai] = useState(true);\n\n  //open modal Cancel\n  const [isvisibleCancel, setIsvisibleCancel] = useState(false);\n  const closeModalCancel = () => setIsvisibleCancel(false);\n  const showModalCancel = () => setIsvisibleCancel(true);\n\n  const [roles, setRoles] = useState({});\n  const [ItemTuChoi, setItemTuChoi] = useState({});\n  const [ItemXacNhan, setItemXacNhan] = useState({});\n  const [searchMaHoSo, setSearchMaHoSo] = useState(\"\");\n  const [searchHoTen, setSearchHoTen] = useState(\"\");\n  const [dateHanDen, setDateHanDen] = useState(null);\n  const [dateHanTu, setDateHanTu] = useState(null);\n  const [dateNopDen, setDateNopDen] = useState(null);\n  const [dateNopTu, setDateNopTu] = useState(null);\n  const [ListDMHetHan, setListDMHetHan] = useState([]);\n  const [ListDMThuTuc, setListDMThuTuc] = useState([]);\n  const [valueThuTuc, setValueThuTuc] = useState({\n    label: \"Tất cả\",\n    value: \"\",\n  });\n  const [valueTrangThai, setValueTrangThai] = useState({\n    label: \"Tất cả\",\n    value: \"\",\n  });\n  const [valueTrangThaiHetHan, setValueTrangThaiHetHan] = useState({\n    label: \"Tất cả\",\n    value: \"\",\n  });\n  const [ListDMTrangThaiHoSo, setListDMTrangThaiHoSo] = useState([]);\n\n  const debouncedSearchMaHoSo = useDebounce(searchMaHoSo, 1000);\n  const debouncedSearchHoTen = useDebounce(searchHoTen, 1000);\n  // filter\n  const filters = JSON.parse(localStorage.getItem(\"filters\"));\n  const filterHoTen = JSON.parse(localStorage.getItem(\"filterHoTen\"));\n  const filterMaHoSo = JSON.parse(localStorage.getItem(\"filterMaHoSo\"));\n\n  const filterStatusThuLy = JSON.parse(\n    localStorage.getItem(\"filterTrangThaiThuLy\")\n  );\n\n  useEffect(\n    () => {\n      getListDM();\n    },\n    [] // Only call effect if debounced search term changes\n  );\n\n  useEffect(() => {\n    if (filters) {\n      setSearchMaHoSo(filterMaHoSo);\n      setSearchHoTen(filterHoTen);\n      setValueTrangThaiHetHan(filterStatusThuLy);\n      setValueTrangThai(filters);\n      getList({\n        page_number: 1,\n        trang_thai: filters?.value,\n        // ho_ten: searchHoTen,\n        // ma_ho_so: searchMaHoSo,\n        trang_thai_het_han: filterStatusThuLy?.value,\n      });\n\n      localStorage.removeItem(\"filterMaHoSo\");\n      localStorage.removeItem(\"filterHoTen\");\n      localStorage.removeItem(\"filterTrangThaiThuLy\");\n      localStorage.removeItem(\"filters\");\n    }\n  }, []);\n\n  useEffect(() => {\n    if (roleUser) {\n      setRoles(roleUser[0]?.ten_en);\n    }\n  }, [roleUser]);\n\n  useEffect(\n    () => {\n      if (!filters || !filterStatusThuLy) {\n        if (\n          (debouncedSearchMaHoSo !== undefined && searchMaHoSo !== undefined) ||\n          (debouncedSearchHoTen !== undefined && searchMaHoSo !== undefined)\n        ) {\n          getList({\n            page_number: 1,\n            ma_ho_so: debouncedSearchMaHoSo,\n            ho_ten: debouncedSearchHoTen,\n          });\n        }\n      }\n    },\n    [debouncedSearchMaHoSo, debouncedSearchHoTen] // Only call effect if debounced search term changes\n  );\n\n  const getListDM = () => {\n    axios\n      .get(api.API_DANH_MUC_HO_SO_THU_LY_DUOC_SI)\n      .then(async ({ data }) => {\n        let { het_hans } = data?.results;\n        let { thu_tuc } = data?.results;\n        let { trang_thai_ho_so } = data?.results;\n\n        let temp_TrangThai = [];\n\n        trang_thai_ho_so.forEach((e) => {\n          if (e.label !== \"Hồ Sơ Mới\") {\n            temp_TrangThai.push(e);\n          }\n        });\n\n        het_hans.unshift({\n          label: \"Tất cả\",\n          value: \"\",\n        });\n        thu_tuc.unshift({\n          label: \"Tất cả\",\n          value: \"\",\n        });\n        temp_TrangThai.unshift({\n          label: \"Tất cả\",\n          value: \"\",\n        });\n        setListDMHetHan(het_hans);\n        setListDMThuTuc(thu_tuc);\n        setListDMTrangThaiHoSo(temp_TrangThai);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {});\n  };\n\n  const getList = ({\n    page_number = page,\n    size = perPage,\n    ma_ho_so = searchMaHoSo,\n    ho_ten = searchHoTen,\n    nop_tu = dateNopTu !== null ? String(new Date(dateNopTu).getTime()) : \"\",\n    nop_den = dateNopDen !== null ? String(new Date(dateNopDen).getTime()) : \"\",\n    han_tu = dateHanTu !== null ? String(new Date(dateHanTu).getTime()) : \"\",\n    han_den = dateHanDen !== null ? String(new Date(dateHanDen).getTime()) : \"\",\n    thu_tuc_id = valueThuTuc?.value || \"\",\n    trang_thai = valueTrangThai?.value || \"\",\n    trang_thai_het_han = valueTrangThaiHetHan?.value || \"\",\n  }) => {\n    setIsLoading(true);\n    \n    axios\n      .post(\n        api.API_LIST_HO_SO_THU_LY_DUOC_SI +\n          `?page=${page_number}&per_page=${size}`,\n        {\n          ma_ho_so,\n          ho_ten,\n          nop_tu,\n          nop_den,\n          han_tu,\n          han_den,\n          thu_tuc_id,\n          trang_thai,\n          trang_thai_het_han,\n        }\n      )\n      .then(async ({ data }) => {\n        setListHoSoThuLy(data?.results);\n        setTotalRows(data?.total);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const updateHoSo = (id) => {\n    const jsonUpdate = {\n      id: id,\n      trang_thai_ho_so: \"4\",\n    };\n    axios\n      .post(api.API_YEU_CAU_CHUNG_CHI_HANH_NGHE + \"/thu_ly\", jsonUpdate)\n      .then(async ({ data }) => {\n        toast.success(\"Cập nhật thành công\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        getList({});\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {});\n  };\n\n  // handle api\n\n  const resetState = async () => {\n    await setSearchHoTen(\"\");\n    await setSearchMaHoSo(\"\");\n    await setDateHanDen(null);\n    await setDateHanTu(null);\n    await setDateNopDen(null);\n    await setDateNopTu(null);\n    await setValueThuTuc({\n      label: \"Tất cả\",\n      value: \"\",\n    });\n    await setValueTrangThai({\n      label: \"Tất cả\",\n      value: \"\",\n    });\n    await setValueTrangThaiHetHan({\n      label: \"Tất cả\",\n      value: \"\",\n    });\n  };\n\n  // DETAIL\n  const detail = async (data) => {\n    setTrang_thai(data?.trang_thai);\n    setShowUpdate(true);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    await setIsLoading(true);\n    axios\n      .post(\n        api.API_LIST_NOI_TOT_NGHIEP + `?page=${page}&per_page=${newPerPage}`,\n        {}\n      )\n      .then(({ data }) => {\n        if (data?.results) {\n          setListHoSoThuLy(data?.results);\n          setPerPage(newPerPage);\n        }\n      })\n      .catch(() => {})\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const handlePageChange = (page) => {\n    setPage(page);\n    getList({ page_number: page });\n  };\n\n  const handleRowClicked = (row) => {};\n\n  const formatGroupLabel = (listTemp) => (\n    <div style={groupStyles}>\n      <span>{listTemp.ten}</span>\n    </div>\n  );\n\n  const checkStatus = (id) => {\n    let status = TrangThaiHoSo.find((e) => e.id === id);\n    return status.name;\n  };\n\n  const groupStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  };\n  const paginationOptions = {\n    rowsPerPageText: \"Dòng hiển thị\",\n    rangeSeparatorText: \"trên\",\n  };\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: \"solid\",\n        borderTopWidth: \"1px\",\n        borderTopColor: \"#e0e0e0\",\n        borderBottomColor: \"#e0e0e0\",\n      },\n    },\n    headCells: {\n      style: {\n        color: \"#202124\",\n        fontSize: \"16px\",\n      },\n    },\n    rows: {\n      highlightOnHoverStyle: {\n        backgroundColor: \"rgb(230, 244, 244)\",\n        borderBottomColor: \"#FFFFFF\",\n        outline: \"1px solid #FFFFFF\",\n      },\n    },\n    pagination: {\n      style: {\n        border: \"none\",\n      },\n    },\n  };\n\n  const getDetail = (id) => {\n    axios\n      .get(api.API_DETAIL_HO_SO_THU_LY_DUOC_SI + \"/\" + id)\n      .then(({ data }) => {})\n      .catch(() => {})\n      .finally(() => {});\n  };\n\n  const columns = [\n    {\n      name: \"Mã hồ sơ\",\n      selector: (row) => (\n        <span\n          onClick={() => {\n            if (\n              roles === \"chuyenvienhoidong\" ||\n              roles === \"lanhdao\" ||\n              roles === \"vanthu\"\n            ) {\n              navigate(`duthaocapphep/${row?.id}`);\n            }\n            if (roles === \"chuyenvien\") {\n              navigate(`capmoi/${row?.id}`);\n            }\n            localStorage.setItem(\"filterMaHoSo\", JSON.stringify(searchMaHoSo));\n            localStorage.setItem(\"filterHoTen\", JSON.stringify(searchHoTen));\n            localStorage.setItem(\n              \"filterTrangThaiThuLy\",\n              JSON.stringify({ ...valueTrangThaiHetHan })\n            );\n            localStorage.setItem(\n              \"filters\",\n              JSON.stringify({ ...valueTrangThai })\n            );\n          }}\n        >\n          {row.ma_ho_so}\n        </span>\n      ),\n      grow: 1,\n      style: {\n        color: \"#1251ff\",\n        fontSize: \"14px\",\n        fontWeight: 500,\n        width: 300,\n        cursor: \"pointer\",\n      },\n    },\n    {\n      name: \"Tên thủ tục\",\n      selector: (row) => <span>{row.ten_thu_tuc}</span>,\n      grow: 3,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Tên người hành nghề\",\n      selector: (row) => <span>{row.ten_nguoi_yeu_cau}</span>,\n      grow: 2,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Ngày nộp\",\n      selector: (row) => (\n        <span>\n          {moment(Number(row.thoi_gian_nop_ho_so)).format(\"DD/MM/YYYY\")}\n        </span>\n      ),\n      grow: 1,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Trạng thái\",\n      selector: (row) => <span>{checkStatus(row?.trang_thai_ho_so)}</span>,\n      grow: 1,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      grow: 2,\n      cell: (row) =>\n        row?.trang_thai_ho_so === \"2\" ? (\n          <div className=\"container my-3\">\n            <button\n              onClick={() => {\n                updateHoSo(row?.id);\n              }}\n              className=\"btn btn-bg-success btn-color-white btn-sm\"\n              style={{ marginRight: 5 }}\n            >\n              Xác nhận thụ lý\n            </button>\n            <button\n              onClick={() => {\n                console.log(row)\n                setItemTuChoi(row);\n                showModalCancel();\n              }}\n              className=\"btn btn-bg-danger btn-color-white btn-sm\"\n            >\n              Từ chối\n            </button>\n          </div>\n        ) : null,\n    },\n  ];\n\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.toggleSelected,\n      style: {\n        backgroundColor: \"#f5f5f5\",\n        userSelect: \"none\",\n      },\n    },\n  ];\n\n  const usersBreadcrumbs = [\n    {\n      title: \"Trang chủ\",\n      path: \"/\",\n      isSeparator: false,\n      isActive: false,\n    },\n    {\n      title: \"\",\n      path: \"\",\n      isSeparator: true,\n      isActive: false,\n    },\n  ];\n\n  return (\n    <KTCard>\n      {/* <div className=\"page\"> */}\n      <div className=\"container-fluid\" style={{ marginTop: \" 30px\" }}>\n        <PageTitle breadcrumbs={usersBreadcrumbs}>\n          Danh sách thụ lý hồ sơ dược sĩ\n        </PageTitle>\n        <LocalizationProvider dateAdapter={AdapterDateFns} locale={enAU}>\n          <div className=\"card-box\">\n            <div className=\"row mb-7\">\n              <div className=\"row col-12 mb-2\">\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Mã hồ sơ</label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Nhập mã hồ sơ...\"\n                    onChange={(e) => {\n                      setSearchMaHoSo(e.target.value);\n                    }}\n                    style={{ fontSize: 14, fontWeight: 400, height: 38 }}\n                    value={searchMaHoSo}\n                  />\n                </div>\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Họ tên</label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Nhập họ tên...\"\n                    onChange={(e) => {\n                      setSearchHoTen(e.target.value);\n                    }}\n                    style={{ fontSize: 14, fontWeight: 400, height: 38 }}\n                    value={searchHoTen}\n                    className=\"text-uppercase\"\n                  />\n                </div>\n\n                <div className=\"row col-6\">\n                  <div className=\"col-3\">\n                    <label className=\"fw-bold fs-6 mb-2\">Nộp từ</label>\n                    <DesktopDatePicker\n                      inputFormat=\"dd/MM/yyyy\"\n                      label=\" \"\n                      value={dateNopTu}\n                      onChange={(value) => {\n                        setDateNopTu(value);\n                        getList({\n                          nop_tu: String(new Date(value).getTime()),\n                        });\n                      }}\n                      maxDate={new Date()}\n                      renderInput={(params) => (\n                        <TextField size=\"small\" {...params} />\n                      )}\n                    />\n                  </div>\n                  <div className=\"col-3\">\n                    <label className=\"fw-bold fs-6 mb-2\">Nộp đến</label>\n                    <DesktopDatePicker\n                      label=\" \"\n                      inputFormat=\"dd/MM/yyyy\"\n                      value={dateNopDen}\n                      onChange={(value) => {\n                        setDateNopDen(value);\n                        getList({\n                          nop_den: String(new Date(value).getTime()),\n                        });\n                      }}\n                      maxDate={new Date()}\n                      renderInput={(params) => (\n                        <TextField size=\"small\" {...params} />\n                      )}\n                    />\n                  </div>\n                  <div className=\"col-3\">\n                    <label className=\"fw-bold fs-6 mb-2\">Hạn từ</label>\n                    <DesktopDatePicker\n                      inputFormat=\"dd/MM/yyyy\"\n                      label=\" \"\n                      value={dateHanTu}\n                      onChange={(value) => {\n                        setDateHanTu(value);\n                        getList({\n                          han_tu: String(new Date(value).getTime()),\n                        });\n                      }}\n                      maxDate={new Date()}\n                      renderInput={(params) => (\n                        <TextField size=\"small\" {...params} />\n                      )}\n                    />\n                  </div>\n                  <div className=\"col-3\">\n                    <label className=\"fw-bold fs-6 mb-2\">Hạn đến</label>\n                    <DesktopDatePicker\n                      inputFormat=\"dd/MM/yyyy\"\n                      label=\" \"\n                      value={dateHanDen}\n                      onChange={(value) => {\n                        setDateHanDen(value);\n                        getList({\n                          han_den: String(new Date(value).getTime()),\n                        });\n                      }}\n                      maxDate={new Date()}\n                      renderInput={(params) => (\n                        <TextField size=\"small\" {...params} />\n                      )}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row col-12\">\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Thủ tục</label>\n                  <Select\n                    value={valueThuTuc}\n                    key={\"id\"}\n                    options={ListDMThuTuc}\n                    formatGroupLabel={formatGroupLabel}\n                    onChange={(data) => {\n                      setValueThuTuc(data);\n                      getList({ thu_tuc_id: data?.value });\n                    }}\n                  />\n                </div>\n\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Trạng thái</label>\n                  <Select\n                    value={valueTrangThai}\n                    key={\"id\"}\n                    options={ListDMTrangThaiHoSo}\n                    formatGroupLabel={formatGroupLabel}\n                    onChange={(data) => {\n                      setValueTrangThai(data);\n                      getList({ trang_thai: data?.value });\n                    }}\n                  />\n                </div>\n\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Trạng thái thụ lý</label>\n                  <Select\n                    value={valueTrangThaiHetHan}\n                    key={\"id\"}\n                    options={ListDMHetHan}\n                    formatGroupLabel={formatGroupLabel}\n                    onChange={(data) => {\n                      setValueTrangThaiHetHan(data);\n                      getList({ trang_thai_het_han: data?.value });\n                    }}\n                  />\n                </div>\n\n                <div className=\"row col-3\">\n                  <div className=\"col-6 pt-8\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-sm btn-trolai mb-5\"\n                      onClick={() => {\n                        resetState();\n                        getList({\n                          page_number: 1,\n                          han_den: \"\",\n                          han_tu: \"\",\n                          nop_den: \"\",\n                          nop_tu: \"\",\n                          trang_thai: \"\",\n                          trang_thai_het_han: \"\",\n                          thu_tuc_id: \"\",\n                          ho_ten: \"\",\n                          ma_ho_so: \"\",\n                        });\n                      }}\n                    >\n                      Xóa bộ lọc\n                    </button>\n                  </div>\n                  {roleUser[0]?.ten_en === \"chuyenvien\" ? (\n                    <div className=\"col-6 pt-8\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-sm btn-primary mb-5\"\n                        onClick={() => {\n                          navigate(\"/admin/nop-ho-so/create\");\n                        }}\n                      >\n                        Thêm mới\n                      </button>\n                    </div>\n                  ) : null}\n                  {/* <div className=\"col-4 pt-8\"></div> */}\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <DataTable\n                  noDataComponent={\n                    <img\n                      style={{ width: \"30%\", height: \"auto\" }}\n                      src=\"/media/nodata-found.svg\"\n                    />\n                  }\n                  sortServer\n                  progressPending={isLoading}\n                  columns={columns}\n                  data={listHoSoThuLy}\n                  customStyles={customStyles}\n                  pagination\n                  highlightOnHover\n                  pointerOnHover\n                  paginationServer\n                  paginationTotalRows={totalRows}\n                  onChangeRowsPerPage={handlePerRowsChange}\n                  onChangePage={handlePageChange}\n                  paginationComponentOptions={paginationOptions}\n                  conditionalRowStyles={conditionalRowStyles}\n                  // onRowClicked={(data) => {\n                  //   detail(data);\n                  //   handleRowClicked(data);\n                  // }}\n                  progressComponent={\n                    <div\n                      style={{\n                        padding: \"24px\",\n                      }}\n                    >\n                      <Oval\n                        arialLabel=\"loading-indicator\"\n                        color=\"#007bff\"\n                        height={40}\n                      />\n                    </div>\n                  }\n                />\n              </div>\n            </div>\n          </div>\n        </LocalizationProvider>\n        <PopupCancel\n          getList={getList}\n          data={ItemTuChoi}\n          title={\"Xác nhận từ chối\"}\n          show={isvisibleCancel}\n          onHide={closeModalCancel}\n        />\n      </div>\n      {/* </div> */}\n    </KTCard>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-thu-ly-duoc-si\\ChiTietHoSoYeuCauBoSung.js",[],["1634","1635","1636","1637","1638","1639"],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\thong-tin-duoc-si\\ThongTinDuocSi.js",[],["1640","1641"],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\quan-ly-nguoi-dung\\QuanLyNguoiDung.js",["1642"],[],"import axios from \"axios\";\r\nimport clsx from \"clsx\";\r\nimport { useEffect, useState } from \"react\";\r\nimport BlockUi from \"react-block-ui\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Oval } from \"react-loader-spinner\";\r\nimport { toast } from \"react-toastify\";\r\nimport { KTCard, useDebounce } from \"../../../../_metronic/helpers\";\r\nimport Status from \"../../../components/Status\";\r\nimport api from \"../../../configs/api\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { PageTitle } from \"../../../../_metronic/layout/core\";\r\nimport PopupQuanLyNguoiDung from \"../popup/PopupQuanLyNguoiDung\";\r\nimport { optionsDoiTuong } from \"../../../data\";\r\n\r\nexport function QuanLyNguoiDung() {\r\n  const [listNguoiDung, setListNguoiDung] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [perPage, setPerPage] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  const [showModalQLND, setShowModalQLND] = useState(false);\r\n  const closeModalQuanLyNguoiDung = () => setShowModalQLND(false);\r\n  const showModalQuanLyNguoiDung = () => setShowModalQLND(true);\r\n\r\n  const [Item, setItem] = useState({});\r\n\r\n  const debouncedSearchTerm = useDebounce(searchTerm, 1000);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (debouncedSearchTerm !== undefined && searchTerm !== undefined) {\r\n        getList(1, perPage, debouncedSearchTerm);\r\n      }\r\n    },\r\n    [debouncedSearchTerm] // Only call effect if debounced search term changes\r\n  );\r\n\r\n  const getList = ({\r\n    page_number = page,\r\n    size = perPage,\r\n    search_ten = searchTerm,\r\n  }) => {\r\n    // setIsLoading(true);\r\n    axios\r\n      .post(api.API_QL_NGUOI_DUNG + `?page=${page_number}&per_page=${size}`, {\r\n        search_ten: search_ten,\r\n      })\r\n      .then(async ({ data }) => {\r\n        setListNguoiDung(data?.results);\r\n        setTotalRows(data?.total);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error?.response?.data?.msg, {\r\n          position: \"top-right\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          toastId: \"error\",\r\n        });\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const resetState = () => {\r\n    const updatedData = listNguoiDung?.map((item) => {\r\n      return {\r\n        ...item,\r\n        toggleSelected: false,\r\n      };\r\n    });\r\n    setData(updatedData);\r\n  };\r\n\r\n  const handlePerRowsChange = async (newPerPage, page) => {\r\n    // await setIsLoading(true);\r\n    axios\r\n      .post(api.API_LIST_THU_TUC + `?page=${page}&per_page=${newPerPage}`, {})\r\n      .then(({ data }) => {\r\n        if (data?.results) {\r\n          setListNguoiDung(data?.results);\r\n          setPerPage(newPerPage);\r\n        }\r\n      })\r\n      .catch(() => {})\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    setPage(page);\r\n    getList({ page_number: page });\r\n  };\r\n\r\n  //đổi màu khi selected\r\n  const [data, setData] = useState(listNguoiDung);\r\n  useEffect(() => {\r\n    setData(listNguoiDung);\r\n  }, [listNguoiDung]);\r\n\r\n  const handleRowClicked = (row) => {\r\n    const updatedData = listNguoiDung?.map((item) => {\r\n      if (row.id !== item.id) {\r\n        return item;\r\n      }\r\n      return {\r\n        ...item,\r\n        toggleSelected: !item.toggleSelected,\r\n      };\r\n    });\r\n    setData(updatedData);\r\n    setEdit(true);\r\n  };\r\n\r\n  const paginationOptions = {\r\n    rowsPerPageText: \"Dòng hiển thị\",\r\n    rangeSeparatorText: \"trên\",\r\n  };\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: \"solid\",\r\n        borderTopWidth: \"1px\",\r\n        borderTopColor: \"#e0e0e0\",\r\n        borderBottomColor: \"#e0e0e0\",\r\n      },\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"16px\",\r\n      },\r\n    },\r\n    rows: {\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        outline: \"1px solid #FFFFFF\",\r\n      },\r\n    },\r\n    pagination: {\r\n      style: {\r\n        border: \"none\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const getChucVu = (chuc_vu) => {\r\n    let chucVu = optionsDoiTuong.find((e) => e.value === chuc_vu);\r\n    return chucVu?.label;\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Họ và tên\",\r\n      grow: 3,\r\n      selector: (row) => (\r\n        <div\r\n          onClick={() => {\r\n            resetState();\r\n            setItem(row);\r\n            setEdit(true);\r\n            handleRowClicked(row);\r\n            showModalQuanLyNguoiDung();\r\n          }}\r\n        >\r\n          <span>{row.ho_ten}</span>\r\n          <ReactTooltip place=\"top\" type=\"dark\" effect=\"float\" />\r\n        </div>\r\n      ),\r\n      style: {\r\n        color: \"#1251ff\",\r\n        fontSize: \"14px\",\r\n        fontWeight: 500,\r\n        width: 300,\r\n        cursor: \"pointer\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Email\",\r\n      selector: (row) => <span>{row.email}</span>,\r\n      grow: 3,\r\n      style: {\r\n        cursor: \"pointer\",\r\n        color: \"#202124\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Điện Thoại\",\r\n      selector: (row) => <span>{row.dien_thoai}</span>,\r\n      grow: 3,\r\n      style: {\r\n        cursor: \"pointer\",\r\n        color: \"#202124\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Chức vụ\",\r\n      selector: (row) => <span>{getChucVu(row?.chuc_vu)}</span>,\r\n      grow: 3,\r\n      style: {\r\n        cursor: \"pointer\",\r\n        color: \"#202124\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Hiển thị trong văn bản\",\r\n      selector: (row) => <span>{row.active}</span>,\r\n      grow: 3,\r\n      center: true,\r\n      cell: (row) => (\r\n        <td>\r\n          <Status status={row.display_chuc_vu} />\r\n        </td>\r\n      ),\r\n    },\r\n  ];\r\n  const conditionalRowStyles = [\r\n    {\r\n      when: (row) => row.toggleSelected,\r\n      style: {\r\n        backgroundColor: \"#f5f5f5\",\r\n        userSelect: \"none\",\r\n      },\r\n    },\r\n  ];\r\n  const cardBox = {\r\n    backgroundColor: \"#fff\",\r\n    backgroundClip: \"border-box\",\r\n    border: \"1px solid #e7eaed\",\r\n    padding: \"1.5rem\",\r\n    marginBottom: \"24px\",\r\n    borderRadius: \"0.5rem\",\r\n  };\r\n  const usersBreadcrumbs = [\r\n    {\r\n      title: \"Trang chủ\",\r\n      path: \"/\",\r\n      isSeparator: false,\r\n      isActive: false,\r\n    },\r\n    {\r\n      title: \"\",\r\n      path: \"\",\r\n      isSeparator: true,\r\n      isActive: false,\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <PageTitle breadcrumbs={usersBreadcrumbs}>Danh sách người dùng</PageTitle>\r\n      <KTCard>\r\n        <div className=\"page\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"fv-row mb-7 mt-6\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6 col-sm-6\">\r\n                  <input\r\n                    placeholder=\"Nhập tên\r\n                    \"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    className={clsx(\r\n                      \"form-control form-control-solid mb-3 mb-lg-0\"\r\n                    )}\r\n                    autoComplete=\"off\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div\r\n                  className=\"col-md-6 col-sm-6 d-flex justify-content-start\"\r\n                  data-kt-user-table-toolbar=\"base\"\r\n                >\r\n                  <button\r\n                    className=\"btn btn-primary me-3\"\r\n                    onClick={() => {\r\n                      setEdit(false);\r\n                      resetState();\r\n                      showModalQuanLyNguoiDung();\r\n                    }}\r\n                  >\r\n                    Tạo mới\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <BlockUi tag=\"div\" centery=\"true\" centerx=\"true\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <div className=\"\" style={cardBox}>\r\n                    <DataTable\r\n                      noDataComponent={\r\n                        <img alt=\"\" style={{ width: \"30%\", height: \"auto\" }} src=\"/media/nodata-found.svg\"/>\r\n                      }\r\n                      sortServer\r\n                      progressPending={isLoading}\r\n                      columns={columns}\r\n                      data={data}\r\n                      customStyles={customStyles}\r\n                      pagination\r\n                      highlightOnHover\r\n                      pointerOnHover\r\n                      paginationServer\r\n                      paginationTotalRows={totalRows}\r\n                      onChangeRowsPerPage={handlePerRowsChange}\r\n                      onChangePage={handlePageChange}\r\n                      paginationComponentOptions={paginationOptions}\r\n                      conditionalRowStyles={conditionalRowStyles}\r\n                      progressComponent={\r\n                        <div\r\n                          style={{\r\n                            padding: \"24px\",\r\n                          }}\r\n                        >\r\n                          <Oval\r\n                            arialLabel=\"loading-indicator\"\r\n                            color=\"#007bff\"\r\n                            height={40}\r\n                          />\r\n                        </div>\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <PopupQuanLyNguoiDung\r\n                getList={() => {\r\n                  getList({});\r\n                }}\r\n                data={Item}\r\n                show={showModalQLND}\r\n                hide={closeModalQuanLyNguoiDung}\r\n                edit={edit}\r\n              />\r\n            </BlockUi>\r\n          </div>\r\n        </div>\r\n      </KTCard>\r\n    </>\r\n  );\r\n}\r\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\thong-tin-dao-tao\\ThongTinDaoTao.js",["1643","1644","1645","1646","1647","1648","1649","1650","1651"],[],"import axios from \"axios\";\r\nimport clsx from \"clsx\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Oval } from \"react-loader-spinner\";\r\nimport Select from \"react-select\";\r\nimport { toast } from \"react-toastify\";\r\nimport { KTCard, KTSVG, useDebounce } from \"../../../../_metronic/helpers\";\r\nimport Status from \"../../../components/Status\";\r\nimport api from \"../../../configs/api\";\r\nimport { PopupDelete } from \"../popup/PopupDelete\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\n\r\nexport function ThongTinDaoTao() {\r\n  const [listThuTuc, setListThuTuc] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [perPage, setPerPage] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [showUpdate, setShowUpdate] = useState(false);\r\n  const [trang_thai, setTrang_thai] = useState(true);\r\n  //open modal delete\r\n  const [isvisibleDelete, setIsvisibleDelete] = useState(false);\r\n  const [idDelete, setIdDelete] = useState(\"\");\r\n  const closeModalDelete = () => setIsvisibleDelete(false);\r\n  const showModalDelete = () => setIsvisibleDelete(true);\r\n  //modal\r\n  const [showAdd, setShowAdd] = useState(false);\r\n  const [edit, setEdit] = useState(false);\r\n  //modal thêm danh mục\r\n  const closeModal = () => setShowAdd(false);\r\n  const showModal = () => setShowAdd(true);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [selectedDoiTuong, setSelectedDoiTuong] = useState({\r\n    label: \"Dược sĩ\",\r\n    value: 1,\r\n    id: 1,\r\n  });\r\n  const optionsDoiTuong = [\r\n    {\r\n      label: \"Dược sĩ\",\r\n      value: 1,\r\n      id: 1,\r\n    },\r\n    {\r\n      label: \"Tổ chức\",\r\n      value: 2,\r\n      id: 2,\r\n    },\r\n  ];\r\n\r\n  const debouncedSearchTerm = useDebounce(searchTerm, 1000);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (debouncedSearchTerm !== undefined && searchTerm !== undefined) {\r\n        getList(1, perPage, debouncedSearchTerm);\r\n      }\r\n    },\r\n    [debouncedSearchTerm] // Only call effect if debounced search term changes\r\n  );\r\n\r\n  const getList = ({\r\n    page_number = page,\r\n    size = perPage,\r\n    search_key = searchTerm,\r\n  }) => {\r\n    setIsLoading(true);\r\n    axios\r\n      .post(api.API_LIST_THU_TUC + `?page=${page_number}&per_page=${size}`, {\r\n        search_ten: search_key,\r\n      })\r\n      .then(async ({ data }) => {\r\n        setListThuTuc(data?.results);\r\n        setTotalRows(data?.total);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error?.response?.data?.msg, {\r\n          position: \"top-right\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          toastId: \"error\",\r\n        });\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  //validate thêm thủ tục\r\n  const [form, setForm] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n    if (!!errors[field])\r\n      setErrors({\r\n        ...errors,\r\n        [field]: null,\r\n      });\r\n  };\r\n  const findFormErrors = () => {\r\n    const {\r\n      ten,\r\n      linh_vuc,\r\n      muc_do,\r\n      doi_tuong,\r\n      co_quan_thuc_hien,\r\n      thoi_gian_giai_quyet,\r\n      ket_qua_thuc_hien,\r\n      le_phi_text,\r\n    } = form;\r\n    const newErrors = {};\r\n    // name errors\r\n    if (!ten || ten === \"\") newErrors.ten = \"Tên không được bỏ trống!\";\r\n    if (!linh_vuc || linh_vuc === \"\")\r\n      newErrors.linh_vuc = \"Lĩnh vực không được bỏ trống!\";\r\n    if (!muc_do || muc_do === \"\")\r\n      newErrors.muc_do = \"Mức độ không được bỏ trống!\";\r\n    if (!co_quan_thuc_hien || co_quan_thuc_hien === \"\")\r\n      newErrors.co_quan_thuc_hien = \"Cơ quan thực hiện không được bỏ trống!\";\r\n    if (!thoi_gian_giai_quyet || thoi_gian_giai_quyet === \"\")\r\n      newErrors.thoi_gian_giai_quyet =\r\n        \"Thời gian giải quyết không được bỏ trống!\";\r\n    if (!ket_qua_thuc_hien || ket_qua_thuc_hien === \"\")\r\n      newErrors.ket_qua_thuc_hien = \"Kết quả thực hiện không được bỏ trống!\";\r\n    if (!le_phi_text || le_phi_text === \"\")\r\n      newErrors.le_phi_text = \"Lệ phí text không được bỏ trống!\";\r\n    return newErrors;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // get our new errors\r\n    const newErrors = findFormErrors();\r\n    // Conditional logic:\r\n    if (Object.keys(newErrors).length > 0) {\r\n      console.log(newErrors);\r\n      // We got errors!\r\n      setErrors(newErrors);\r\n    } else {\r\n      // No errors! Put any logic here for the form submission!\r\n      edit ? updateThuTuc(e) : addThuTuc(e);\r\n    }\r\n  };\r\n\r\n  // handle api\r\n  const addThuTuc = async () => {\r\n    setIsLoading(true);\r\n    const {\r\n      ten,\r\n      linh_vuc,\r\n      muc_do,\r\n      doi_tuong,\r\n      co_quan_thuc_hien,\r\n      thoi_gian_giai_quyet,\r\n      le_phi_text,\r\n      ket_qua_thuc_hien,\r\n    } = form;\r\n    const json = {\r\n      ten,\r\n      trang_thai: trang_thai,\r\n      linh_vuc,\r\n      muc_do,\r\n      doi_tuong: String(selectedDoiTuong.value),\r\n      co_quan_thuc_hien: \"Sở Y tế\",\r\n      thoi_gian_giai_quyet,\r\n      le_phi_text,\r\n      ket_qua_thuc_hien,\r\n    };\r\n    await axios\r\n      .post(api.API_THU_TUC + \"_add\", json)\r\n      .then(async ({ data }) => {\r\n        closeModal();\r\n        resetState();\r\n        toast.success(\"Tạo thủ tục thành công\", {\r\n          position: \"top-right\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          toastId: \"success\",\r\n        });\r\n        getList({});\r\n        setIsLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error?.response);\r\n        toast.error(error?.data?.errors, {\r\n          position: \"top-right\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          toastId: \"error\",\r\n        });\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const updateThuTuc = async () => {\r\n    setIsLoading(true);\r\n    const {\r\n      ten,\r\n      linh_vuc,\r\n      muc_do,\r\n      doi_tuong,\r\n      co_quan_thuc_hien,\r\n      thoi_gian_giai_quyet,\r\n      le_phi_text,\r\n      id,\r\n      ket_qua_thuc_hien,\r\n    } = form;\r\n    const json = {\r\n      ten,\r\n      trang_thai: trang_thai,\r\n      linh_vuc,\r\n      muc_do,\r\n      doi_tuong: String(selectedDoiTuong.value),\r\n      co_quan_thuc_hien: \"Sở Y tế\",\r\n      thoi_gian_giai_quyet,\r\n      le_phi_text,\r\n      ket_qua_thuc_hien,\r\n    };\r\n    await axios\r\n      .put(api.API_THU_TUC + \"_by_id/\" + id, json)\r\n      .then(async ({ data }) => {\r\n        closeModal();\r\n        resetState();\r\n        toast.success(\"Cập nhật thủ tục thành công\", {\r\n          position: \"top-right\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          toastId: \"success\",\r\n        });\r\n        getList({ page_number: 1 });\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error?.data?.errors, {\r\n          position: \"top-right\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          toastId: \"error\",\r\n        });\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const resetState = () => {\r\n    setForm({});\r\n    setErrors({});\r\n    setShowUpdate(false);\r\n    const updatedData = listThuTuc?.map((item) => {\r\n      return {\r\n        ...item,\r\n        toggleSelected: false,\r\n      };\r\n    });\r\n    setData(updatedData);\r\n  };\r\n\r\n  // DETAIL\r\n  const detail = async (data) => {\r\n    setForm({\r\n      ...data,\r\n    });\r\n    setTrang_thai(data?.trang_thai);\r\n    setShowUpdate(true);\r\n  };\r\n\r\n  const handlePerRowsChange = async (newPerPage, page) => {\r\n    await setIsLoading(true);\r\n    axios\r\n      .post(api.API_LIST_THU_TUC + `?page=${page}&per_page=${newPerPage}`, {})\r\n      .then(({ data }) => {\r\n        if (data?.results) {\r\n          setListThuTuc(data?.results);\r\n          setPerPage(newPerPage);\r\n        }\r\n      })\r\n      .catch(() => {})\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const deleteTT = () => {\r\n    axios\r\n      .delete(api.API_THU_TUC + \"_by_id/\" + idDelete, {})\r\n      .then(async ({ data }) => {\r\n        await toast.success(data?.msg, {\r\n          position: \"top-right\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          toastId: \"success\",\r\n        });\r\n        closeModal();\r\n        closeModalDelete();\r\n        resetState();\r\n        if (page == 1) {\r\n          getList({ page_number: 1 });\r\n        } else if (listThuTuc?.length == 1) {\r\n          getList({ page_number: page - 1 });\r\n        } else {\r\n          getList({ page_number: page });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n        toast.error(error?.data?.errors, {\r\n          position: \"top-right\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          toastId: \"error\",\r\n        });\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n  const handlePageChange = (page) => {\r\n    setPage(page);\r\n    getList({ page_number: page });\r\n  };\r\n\r\n  //đổi màu khi selected\r\n  const [data, setData] = useState(listThuTuc);\r\n  useEffect(() => {\r\n    setData(listThuTuc);\r\n  }, [listThuTuc]);\r\n\r\n  const handleRowClicked = (row) => {\r\n    setErrors({});\r\n    const updatedData = listThuTuc?.map((item) => {\r\n      if (row.id !== item.id) {\r\n        return item;\r\n      }\r\n      return {\r\n        ...item,\r\n        toggleSelected: !item.toggleSelected,\r\n      };\r\n    });\r\n    setData(updatedData);\r\n    showModal();\r\n    setEdit(true);\r\n  };\r\n  const formatGroupLabel = (listTemp) => (\r\n    <div style={groupStyles}>\r\n      <span>{listTemp.ten}</span>\r\n    </div>\r\n  );\r\n\r\n  const groupStyles = {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  };\r\n  const paginationOptions = {\r\n    rowsPerPageText: \"Dòng hiển thị\",\r\n    rangeSeparatorText: \"trên\",\r\n  };\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: \"solid\",\r\n        borderTopWidth: \"1px\",\r\n        borderTopColor: \"#e0e0e0\",\r\n        borderBottomColor: \"#e0e0e0\",\r\n      },\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"16px\",\r\n      },\r\n    },\r\n    rows: {\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        outline: \"1px solid #FFFFFF\",\r\n      },\r\n    },\r\n    pagination: {\r\n      style: {\r\n        border: \"none\",\r\n      },\r\n    },\r\n  };\r\n  const columns = [\r\n    {\r\n      name: \"Mã\",\r\n      grow: 3,\r\n      selector: (row) => (\r\n        <div\r\n          onClick={() => {\r\n            detail(row);\r\n            handleRowClicked(row);\r\n            setShowAdd(true);\r\n          }}\r\n        >\r\n          <span>{row.ma_thu_tuc}</span>\r\n        </div>\r\n      ),\r\n      style: {\r\n        color: \"#1251ff\",\r\n        fontSize: \"14px\",\r\n        fontWeight: 500,\r\n        width: 300,\r\n        cursor: \"pointer\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Tên\",\r\n      selector: (row) => <span>{row.ten}</span>,\r\n      grow: 3,\r\n      style: {\r\n        cursor: \"pointer\",\r\n        color: \"#202124\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Đối tượng\",\r\n      selector: (row) => <span>{row.doi_tuong}</span>,\r\n      grow: 3,\r\n      style: {\r\n        cursor: \"pointer\",\r\n        color: \"#202124\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Trạng thái\",\r\n      selector: (row) => <span>{row.trang_thai}</span>,\r\n      grow: 3,\r\n      center: true,\r\n      cell: (row) => <Status status={row.trang_thai} />,\r\n    },\r\n    {\r\n      name: \"Thao tác\",\r\n      grow: 1,\r\n      cell: (row) => (\r\n        <div className=\"container my-3\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle variant=\"link\" style={{ float: \"right\" }}>\r\n              <i\r\n                className=\"fas fa-bars text-primary\"\r\n                style={{ marginLeft: \"3px\", marginRight: \"-3px\" }}\r\n              ></i>\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  // setIsAdd(false);\r\n                  showModal();\r\n                  // getDetailBangCap(row);\r\n                }}\r\n              >\r\n                <i className=\"fas fa-eye text-primary me-3\"></i>Xem chi tiết\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  showModalDelete();\r\n                  setIdDelete(row.id);\r\n                }}\r\n              >\r\n                <i className=\"fas fa-trash text-danger me-3\"></i>Xóa\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  const conditionalRowStyles = [\r\n    {\r\n      when: (row) => row.toggleSelected,\r\n      style: {\r\n        backgroundColor: \"#f5f5f5\",\r\n        userSelect: \"none\",\r\n      },\r\n    },\r\n  ];\r\n  const cardBox = {\r\n    backgroundColor: \"#fff\",\r\n    backgroundClip: \"border-box\",\r\n    border: \"1px solid #e7eaed\",\r\n    padding: \"1.5rem\",\r\n    marginBottom: \"24px\",\r\n    borderRadius: \"0.5rem\",\r\n  };\r\n  return (\r\n    <KTCard>\r\n      <div className=\"page\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"fv-row mb-7 mt-6\">\r\n            {/* begin::Label */}\r\n            <label className=\"fw-bold fs-6 mb-2\">Thông tin đào tạo</label>\r\n            {/* end::Label */}\r\n\r\n            {/* begin::Input */}\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 col-sm-6\">\r\n                <input\r\n                  placeholder=\"Nhập tên thủ tục tìm kiếm...\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  className={clsx(\r\n                    \"form-control form-control-solid mb-3 mb-lg-0\"\r\n                  )}\r\n                  autoComplete=\"off\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              <div\r\n                className=\"col-md-6 col-sm-6 d-flex justify-content-end\"\r\n                data-kt-user-table-toolbar=\"base\"\r\n              >\r\n                <button type=\"button\" className=\"btn btn-primary me-3\">\r\n                  <KTSVG\r\n                    path=\"/media/icons/duotune/arrows/arr078.svg\"\r\n                    className=\"svg-icon-2\"\r\n                  />\r\n                  Export\r\n                </button>\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => {\r\n                    showModal();\r\n                    resetState();\r\n                    setEdit(false);\r\n                  }}\r\n                >\r\n                  <KTSVG\r\n                    path=\"/media/icons/duotune/arrows/arr075.svg\"\r\n                    className=\"svg-icon-2\"\r\n                  />\r\n                  Thêm\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* end::Input */}\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <div className=\"\" style={cardBox}>\r\n                <DataTable\r\n                  noDataComponent={\r\n                    <img\r\n                      style={{ width: \"30%\", height: \"auto\" }}\r\n                      src=\"/media/nodata-found.svg\"\r\n                    />\r\n                  }\r\n                  sortServer\r\n                  progressPending={isLoading}\r\n                  columns={columns}\r\n                  data={data}\r\n                  customStyles={customStyles}\r\n                  pagination\r\n                  highlightOnHover\r\n                  pointerOnHover\r\n                  paginationServer\r\n                  paginationTotalRows={totalRows}\r\n                  onChangeRowsPerPage={handlePerRowsChange}\r\n                  onChangePage={handlePageChange}\r\n                  paginationComponentOptions={paginationOptions}\r\n                  conditionalRowStyles={conditionalRowStyles}\r\n                  // onRowClicked={(data) => {\r\n                  //   detail(data);\r\n                  //   handleRowClicked(data);\r\n                  //   setShowAdd(true);\r\n                  // }}\r\n                  progressComponent={\r\n                    <div\r\n                      style={{\r\n                        padding: \"24px\",\r\n                      }}\r\n                    >\r\n                      <Oval\r\n                        arialLabel=\"loading-indicator\"\r\n                        color=\"#007bff\"\r\n                        height={40}\r\n                      />\r\n                    </div>\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Modal\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            show={showAdd}\r\n            onHide={() => {\r\n              closeModal();\r\n            }}\r\n            centered\r\n            size=\"lg\"\r\n          >\r\n            <Modal.Header className=\"bg-blue2\" closeButton>\r\n              <Modal.Title className=\"text-white\">\r\n                {!edit ? \"Thêm\" : \"Cập nhật\"} thủ tục\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <div className=\"row\">\r\n                {showUpdate && (\r\n                  <div className=\"col-6 form-group mb-5\">\r\n                    <label className=\"required fw-bold fs-6 mb-2\">\r\n                      Mã thủ tục\r\n                    </label>\r\n                    <Form.Control\r\n                      disabled={true}\r\n                      type=\"text\"\r\n                      placeholder=\"Nhập mã thủ tục\"\r\n                      style={{ fontSize: 14, fontWeight: 500 }}\r\n                      value={form.ma_thu_tuc === null ? \"\" : form.ma_thu_tuc}\r\n                    />\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"col-6 form-group mb-5\">\r\n                  <label className=\"required fw-bold fs-6 mb-2\">\r\n                    Tên thủ tục\r\n                  </label>\r\n                  <Form.Control\r\n                    placeholder=\"Nhập địa chỉ\"\r\n                    style={{ fontSize: 14, fontWeight: 500 }}\r\n                    value={form.ten === null ? \"\" : form.ten}\r\n                    onChange={(e) => {\r\n                      setField(\"ten\", e.target.value);\r\n                    }}\r\n                    isInvalid={!!errors.ten}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.ten}\r\n                  </Form.Control.Feedback>\r\n                </div>\r\n                <div className=\"col-6 form-group mb-5\">\r\n                  <label className=\"required fw-bold fs-6 mb-2\">\r\n                    Tên lĩnh vực\r\n                  </label>\r\n                  <Form.Control\r\n                    placeholder=\"Nhập lĩnh vực\"\r\n                    style={{ fontSize: 14, fontWeight: 500 }}\r\n                    value={form.linh_vuc === null ? \"\" : form.linh_vuc}\r\n                    onChange={(e) => {\r\n                      setField(\"linh_vuc\", e.target.value);\r\n                    }}\r\n                    isInvalid={!!errors.linh_vuc}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.linh_vuc}\r\n                  </Form.Control.Feedback>\r\n                </div>\r\n                <div className=\"col-6 form-group mb-5\">\r\n                  <label className=\"required fw-bold fs-6 mb-2\">Mức độ</label>\r\n                  <Form.Control\r\n                    placeholder=\"Nhập mức độ\"\r\n                    style={{ fontSize: 14, fontWeight: 500 }}\r\n                    value={form.muc_do === null ? \"\" : form.muc_do}\r\n                    onChange={(e) => {\r\n                      setField(\"muc_do\", e.target.value);\r\n                    }}\r\n                    isInvalid={!!errors.muc_do}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.muc_do}\r\n                  </Form.Control.Feedback>\r\n                </div>\r\n                <div className=\"col-6 form-group mb-5\">\r\n                  <label className=\"required fw-bold fs-6 mb-2\">\r\n                    Đối tượng\r\n                  </label>\r\n                  <Select\r\n                    value={selectedDoiTuong}\r\n                    key={\"id\"}\r\n                    options={optionsDoiTuong}\r\n                    formatGroupLabel={formatGroupLabel}\r\n                    onChange={async (data) => {\r\n                      setField(\"doi_tuong\", data?.value);\r\n                      setSelectedDoiTuong(data);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6 form-group mb-5\">\r\n                  <label className=\"required fw-bold fs-6 mb-2\">\r\n                    Cơ quan thực hiện\r\n                  </label>\r\n                  <Form.Control\r\n                    placeholder=\"Nhập cơ quan thực hiện\"\r\n                    style={{ fontSize: 14, fontWeight: 500 }}\r\n                    value={\r\n                      form.co_quan_thuc_hien === null\r\n                        ? \"\"\r\n                        : form.co_quan_thuc_hien\r\n                    }\r\n                    onChange={(e) => {\r\n                      setField(\"co_quan_thuc_hien\", e.target.value);\r\n                    }}\r\n                    isInvalid={!!errors.co_quan_thuc_hien}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.co_quan_thuc_hien}\r\n                  </Form.Control.Feedback>\r\n                </div>\r\n                <div className=\"col-6 form-group mb-5\">\r\n                  <label className=\"required fw-bold fs-6 mb-2\">\r\n                    Thời gian giải quyết\r\n                  </label>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={2}\r\n                    placeholder=\"Nhập đối tượng\"\r\n                    style={{ fontSize: 14, fontWeight: 500 }}\r\n                    value={\r\n                      form.thoi_gian_giai_quyet === null\r\n                        ? \"\"\r\n                        : form.thoi_gian_giai_quyet\r\n                    }\r\n                    onChange={(e) => {\r\n                      setField(\"thoi_gian_giai_quyet\", e.target.value);\r\n                    }}\r\n                    isInvalid={!!errors.thoi_gian_giai_quyet}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.thoi_gian_giai_quyet}\r\n                  </Form.Control.Feedback>\r\n                </div>\r\n                <div className=\"col-6 form-group mb-5\">\r\n                  <label className=\"required fw-bold fs-6 mb-2\">\r\n                    Kết quả thực hiện\r\n                  </label>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={2}\r\n                    placeholder=\"Nhập kết quả thực hiện\"\r\n                    style={{ fontSize: 14, fontWeight: 500 }}\r\n                    value={\r\n                      form.ket_qua_thuc_hien === null\r\n                        ? \"\"\r\n                        : form.ket_qua_thuc_hien\r\n                    }\r\n                    onChange={(e) => {\r\n                      setField(\"ket_qua_thuc_hien\", e.target.value);\r\n                    }}\r\n                    isInvalid={!!errors.ket_qua_thuc_hien}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.ket_qua_thuc_hien}\r\n                  </Form.Control.Feedback>\r\n                </div>\r\n                <div className=\"col-6 form-group mb-5\">\r\n                  <label className=\"required fw-bold fs-6 mb-2\">\r\n                    Lệ phí text\r\n                  </label>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={2}\r\n                    placeholder=\"Nhập lệ phí text\"\r\n                    style={{ fontSize: 14, fontWeight: 500 }}\r\n                    value={form.le_phi_text === null ? \"\" : form.le_phi_text}\r\n                    onChange={(e) => {\r\n                      setField(\"le_phi_text\", e.target.value);\r\n                    }}\r\n                    isInvalid={!!errors.le_phi_text}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.le_phi_text}\r\n                  </Form.Control.Feedback>\r\n                </div>\r\n                <div className=\"col-6 form-group mb-2\">\r\n                  <label className=\"fw-bold fs-6 mb-2\">Trạng thái</label>\r\n                  <div className=\"form-check form-check-solid form-switch fv-row\">\r\n                    <input\r\n                      className=\"form-check-input w-45px h-30px\"\r\n                      type=\"checkbox\"\r\n                      value={trang_thai}\r\n                      checked={trang_thai}\r\n                      onChange={(e) => {\r\n                        setTrang_thai(!trang_thai);\r\n                      }}\r\n                    />\r\n                    <label className=\"form-check-label\"></label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button\r\n                variant=\"secondary\"\r\n                onClick={() => {\r\n                  closeModal();\r\n                }}\r\n              >\r\n                <i className=\"fas fa-times\"></i> Huỷ\r\n              </Button>\r\n              <Button\r\n                variant=\"btn text-white bg-blue2\"\r\n                onClick={async (e) => {\r\n                  handleSubmit(e);\r\n                }}\r\n              >\r\n                {edit ? (\r\n                  <i className=\"fa fa-pencil-alt text-white\"></i>\r\n                ) : (\r\n                  <i className=\"fas fa-save text-white\"></i>\r\n                )}{\" \"}\r\n                {edit ? \"CẬP NHẬT\" : \"THÊM\"}\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          <PopupDelete\r\n            title=\"Bạn có đồng ý xóa thủ tục này không?\"\r\n            show={isvisibleDelete}\r\n            onHide={closeModalDelete}\r\n            onDetele={() => {\r\n              deleteTT();\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </KTCard>\r\n  );\r\n}\r\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\thong-bao\\ThongBao.js",["1652","1653","1654","1655","1656","1657","1658","1659","1660"],[],"import axios from \"axios\";\r\n\r\nimport moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useAuth } from \"../../../../app/modules/apps/auth\";\r\nimport { PageTitle } from \"../../../../_metronic/layout/core\";\r\nimport api from \"../../../configs/api\";\r\nimport { selectCurrentUser } from \"../../../redux-module/auth/authSlice\";\r\nimport {\r\n  notiActions,\r\n  selectCountUnreadNoti,\r\n  selectListNoti,\r\n  selectLoading,\r\n} from \"../../../redux-module/noti/notiSlice\";\r\n\r\nLoadingOverlay.propTypes = undefined;\r\nexport function ThongBao() {\r\n  const [listThongBao, setListThongBao] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const dispatch = useDispatch();\r\n\r\n  //modal\r\n  const [showDetail, setShowDetail] = useState(false);\r\n\r\n  const [detailNoti, setDetailNoti] = useState([]);\r\n  const currentUser = useSelector(selectCurrentUser);\r\n  const isLoading = useSelector(selectLoading);\r\n  const ListNoti = useSelector(selectListNoti);\r\n  const CountUnreadNoti = useSelector(selectCountUnreadNoti);\r\n\r\n  const showModal = () => setShowDetail(true);\r\n  const closeModal = () => setShowDetail(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"currentUser?.id\", currentUser?.id);\r\n    dispatch(notiActions.getNoti(currentUser?.id));\r\n    // getList({ page_number: 1 });\r\n  }, []);\r\n\r\n  // const getList = async ({ page_number = page }) => {\r\n  //   await setIsLoading(true);\r\n  //   axios\r\n  //     .get(\r\n  //       api.API_GET_THONG_BAO +\r\n  //         \"/\" +\r\n  //         currentUser.id +\r\n  //         `?page=${page_number}&per_page=1000`\r\n  //     )\r\n  //     .then(async ({ data }) => {\r\n  //       console.log(\"log data\", data?.results);\r\n  //       await setListThongBao(data?.results);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       toast.error(error?.response?.data?.msg, {\r\n  //         position: \"top-right\",\r\n  //         autoClose: 2000,\r\n  //         hideProgressBar: false,\r\n  //         closeOnClick: true,\r\n  //         pauseOnHover: true,\r\n  //         draggable: true,\r\n  //         progress: undefined,\r\n  //         toastId: \"error\",\r\n  //       });\r\n  //     })\r\n  //     .finally(() => {\r\n  //       setIsLoading(false);\r\n  //     });\r\n  // };\r\n\r\n  const seenNoti = async (thongbao) => {\r\n    axios\r\n      .put(api.API_XEM_TIN_NHAN + \"/\" + thongbao.id)\r\n      .then(async ({ data }) => {\r\n        if (data) {\r\n          console.log(\"log data\", data);\r\n          console.log(\"log thongbao\", thongbao);\r\n\r\n          setDetailNoti(thongbao);\r\n          showModal();\r\n          // getList({ page_number: 1 });\r\n          dispatch(notiActions.getNoti(currentUser?.id));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error?.response?.data?.msg, {\r\n          position: \"top-right\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          toastId: \"error\",\r\n        });\r\n      })\r\n      .finally(() => {});\r\n  };\r\n\r\n  const notyBox = {\r\n    borderRadius: \"16px\",\r\n    boxShadow: \"0px 0px 6px 0px rgb(0 0 0 / 16%)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    marginBottom: \"10px\",\r\n    marginTop: \"10px\",\r\n    minHeight: \"121px\",\r\n  };\r\n\r\n  const usersBreadcrumbs = [\r\n    {\r\n      title: \"Trang chủ\",\r\n      path: \"/\",\r\n      isSeparator: false,\r\n      isActive: false,\r\n    },\r\n    {\r\n      title: \"\",\r\n      path: \"\",\r\n      isSeparator: true,\r\n      isActive: false,\r\n    },\r\n  ];\r\n\r\n  const fetchMoreData = () => {\r\n    // a fake async api call like which sends\r\n    // 20 more records in 1.5 secs\r\n    setPage(page + 1);\r\n    // getList({ page_number: page == 1 ? 2 : page });\r\n  };\r\n\r\n  return (\r\n    <div id=\"main-content\" className=\"container-fluid\">\r\n      <LoadingOverlay spinner active={isLoading} text=\"Đang tải dữ liệu ...\">\r\n        <PageTitle breadcrumbs={usersBreadcrumbs}>\r\n          Danh sách thông báo\r\n        </PageTitle>\r\n        <section className=\"section-50\">\r\n          <div className=\"container\">\r\n            <div className=\"notification-ui_dd-content\">\r\n              {ListNoti && ListNoti?.length > 0\r\n                ? ListNoti.map((e, i) => {\r\n                    return (\r\n                      <div\r\n                        onClick={() => {\r\n                          seenNoti(e);\r\n                        }}\r\n                        key={e?.id}\r\n                        className={`notification-list ${\r\n                          !e?.read_at && \"notification-list--unread\"\r\n                        } `}\r\n                      >\r\n                        <div className=\"notification-list_content\">\r\n                          <div className=\"notification-list_img\">\r\n                            <img alt=\"\" src=\"/media/assets/notifications.png\"></img>\r\n                          </div>\r\n                          <div className=\"notification-list_detail\">\r\n                            <p>\r\n                              <b>{e?.tieu_de} </b>\r\n                            </p>\r\n                            <p className=\"text-muted\">{e?.noi_dung} &nbsp;&nbsp; {e?.tieu_de === \"Yêu cầu bổ sung hồ sơ\" ? <Link to={\"/admin/nop-ho-so/dieuchinh/\" + e?.dinh_kem?.yeu_cau_cchnd_id} className=\"text-primary\"> Xem tại đây </Link> : null}</p>\r\n                            <p className=\"text-muted\">\r\n                              <small>\r\n                                {moment(e?.notify_at * 1000).format(\r\n                                  \"DD/MM/YYYY hh:mm\"\r\n                                )}\r\n                              </small>\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"notification-list_feature-img\"></div>\r\n                      </div>\r\n                    );\r\n                  })\r\n                : null}\r\n              {ListNoti?.length == 0 && (\r\n                <div style={{ textAlign: \"center\" }}>\r\n                  <img alt=\"\" style={{ width: \"30%\", height: \"auto\" }} src=\"/media/nodata-found.svg\" />\r\n                </div>\r\n              )}\r\n              {/* <div className=\"notification-list notification-list--unread\">\r\n              <div className=\"notification-list_content\">\r\n                <div className=\"notification-list_img\"></div>\r\n                <div className=\"notification-list_detail\">\r\n                  <p>\r\n                    <b>Richard Miles</b> liked your post\r\n                  </p>\r\n                  <p className=\"text-muted\">\r\n                    Lorem ipsum dolor sit amet consectetur, adipisicing elit.\r\n                    Unde, dolorem.\r\n                  </p>\r\n                  <p className=\"text-muted\">\r\n                    <small>10 mins ago</small>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"notification-list_feature-img\"></div>\r\n            </div>\r\n            <div className=\"notification-list\">\r\n              <div className=\"notification-list_content\">\r\n                <div className=\"notification-list_img\"></div>\r\n                <div className=\"notification-list_detail\">\r\n                  <p>\r\n                    <b>Brian Cumin</b> reacted to your post\r\n                  </p>\r\n                  <p className=\"text-muted\">\r\n                    Lorem ipsum dolor sit amet consectetur, adipisicing elit.\r\n                    Unde, dolorem.\r\n                  </p>\r\n                  <p className=\"text-muted\">\r\n                    <small>10 mins ago</small>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"notification-list_feature-img\"></div>\r\n            </div> */}\r\n            </div>\r\n\r\n            {/* <div className=\"text-center\">\r\n            <a href=\"#!\" className=\"dark-link\">\r\n              Load more activity\r\n            </a>\r\n          </div> */}\r\n          </div>\r\n        </section>\r\n\r\n        <Modal\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n          show={showDetail}\r\n          onHide={closeModal}\r\n          centered\r\n          size=\"lg\"\r\n        >\r\n          <Modal.Header closeButton className=\"bg-blue2\">\r\n            <Modal.Title className=\"text-white\">\r\n              {detailNoti?.tieu_de}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"form-group mb-5\">{detailNoti?.noi_dung}</div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </LoadingOverlay>\r\n    </div>\r\n  );\r\n}\r\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\i18n\\i18nProvider.tsx",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\firebaseNotifications\\firebase.js",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\errors\\PageNotFound.js",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\firebaseNotifications\\Notification.js",["1661"],[],"import React, { useState, useEffect } from \"react\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectCurrentUser } from \"../app/redux-module/auth/authSlice\";\nimport { notiActions } from \"../app/redux-module/noti/notiSlice\";\nimport { fetchToken, onMessageListener } from \"./firebase\";\n\nconst Notification = () => {\n  const [notification, setNotification] = useState({ title: \"\", body: \"\" });\n  const currentUser = useSelector(selectCurrentUser);\n  const dispatch = useDispatch();\n\n  const notify = () => toast(<ToastDisplay />);\n  function ToastDisplay() {\n    return (\n      <div>\n        <p>\n          <b>{notification?.title}</b>\n        </p>\n        <p>{notification?.body}</p>\n      </div>\n    );\n  }\n\n  useEffect(() => {\n    if (notification?.title) {\n      notify();\n    }\n  }, [notification]);\n\n  // fetchToken();\n\n  onMessageListener()\n    .then((payload) => {\n      setNotification({\n        title: payload?.notification?.title,\n        body: payload?.notification?.body,\n      });\n      if (currentUser) {\n        dispatch(notiActions.getNoti(currentUser?.id));\n      }\n    })\n    .catch((err) => console.log(\"failed: \", err));\n\n  return <Toaster />;\n};\n\nexport default Notification;\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\MasterLayout.tsx",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\components\\LoadingIndicator.js",["1662"],[],"import React from \"react\";\nimport { Oval } from \"react-loader-spinner\";\n\nexport default function LoadingIndicator() {\n  return (\n    <div className=\"w-100 h-100\" style={{ textAlign: \"center\" }}>\n      <div className=\"spinner-border\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </div>\n    </div>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\MasterInit.tsx",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\pages\\MenuTestPage.tsx",[],["1663","1664","1665","1666","1667","1668","1669","1670","1671","1672"],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-muc\\DanhMucPage.js",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\errors\\Accessdenied.js",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\pages\\dashboard\\DashboardWrapper.tsx",[],["1673","1674","1675"],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\yeu-cau-lien-ket\\YeuCauLienKetPage.js",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\doi-mat-khau\\DoiMatKhau.js",["1676"],[],"/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { PageTitle } from \"../../../../_metronic/layout/core\";\r\nimport api from \"../../../configs/api\";\r\n\r\nimport { Form } from \"react-bootstrap\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport { selectCurrentUser, selectRoleUser } from \"../../../redux-module/auth/authSlice\";\r\n\r\nexport default function DoiMatKhau() {\r\n  const navigate = useNavigate();\r\n  const thongTinDuocSi = useSelector(selectCurrentUser);\r\n  const currentRole = useSelector(selectRoleUser)[0]?.ten_en\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const usersBreadcrumbs = [\r\n    {\r\n      title: \"Trang chủ\",\r\n      path: \"/\",\r\n      isSeparator: false,\r\n      isActive: false,\r\n    },\r\n    {\r\n      title: \"\",\r\n      path: \"\",\r\n      isSeparator: true,\r\n      isActive: false,\r\n    },\r\n  ];\r\n  const [form, setForm] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n    if (!!errors[field])\r\n      setErrors({\r\n        ...errors,\r\n        [field]: null,\r\n      });\r\n  };\r\n\r\n  const findFormErrors = () => {\r\n    const { old_password, new_password, retype_password } = form;\r\n    const newErrors = {};\r\n    // name errors\r\n    if (!old_password || old_password === \"\")\r\n      newErrors.old_password = \"Vui lòng nhập mật khẩu hiện tại!\";\r\n    if (!new_password || new_password === \"\")\r\n      newErrors.new_password = \"Vui lòng nhập mật khẩu mới!\";\r\n    if (!retype_password || retype_password === \"\")\r\n      newErrors.retype_password = \"Vui lòng nhập lại xác nhận mật khẩu\";\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const newErrors = findFormErrors();\r\n    if (Object.keys(newErrors).length > 0) {\r\n      setErrors(newErrors);\r\n    } else {\r\n      setIsLoading(true)\r\n      const { old_password, new_password, retype_password } = form;\r\n      const json = {\r\n        old_password: old_password,\r\n        new_password: new_password,\r\n        retype_password: retype_password,\r\n      };\r\n      await axios\r\n        .put(api.API_CHANGE_PASSWORD, json)\r\n        .then(async ({ data }) => {\r\n          toast.success(\"Đổi mật khẩu thành công\", {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            toastId: \"success\",\r\n          });\r\n          handleNavigate()\r\n        })\r\n        .catch((error) => {\r\n          toast.error(error?.response?.data?.msg, {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            toastId: \"error\",\r\n          });\r\n        })\r\n        .finally(() => {\r\n          setIsLoading(false)\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleNavigate = () => {\r\n    switch (currentRole) {\r\n      case \"duocsi\":\r\n        navigate(\"/admin/chung-chi-hanh-nghe\")\r\n        break;\r\n      case \"tochuc\":\r\n        navigate(\"/admin/giay-phep-kinh-doanh\")\r\n        break;\r\n      default:\r\n        navigate(\"/dashboard\")\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <LoadingOverlay spinner active={isLoading} text=\"Đang tải dữ liệu ...\">\r\n        <PageTitle breadcrumbs={usersBreadcrumbs}>Đổi mật khẩu</PageTitle>\r\n        <div className=\"card-body w-100 w-md-75 p-3 m-auto \">\r\n          <Form action=\"#\" className=\"box-changepass-wrapper\">\r\n            <div className=\"form-group mt-10 mb-6 input-icon\">\r\n              <label className=\"label-input fw-bold\">Họ và tên</label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Họ và tên\"\r\n                className=\"input-register input-login background-white curcor-not\"\r\n                style={{ fontSize: 14, fontWeight: 400 }}\r\n                disabled\r\n                value={thongTinDuocSi?.assigned_role[0]?.ten ? thongTinDuocSi?.assigned_role[0]?.ten : \"\"}\r\n              />\r\n            </div>\r\n            <div className=\"form-group mb-6\">\r\n              <label className=\"label-input fw-bold\">Tên đăng nhập</label>\r\n              <div className=\"input-group input-icon\">\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Tên đăng nhập\"\r\n                  className=\"input-register background-white curcor-not\"\r\n                  style={{ fontSize: 14, fontWeight: 400 }}\r\n                  disabled\r\n                  value={thongTinDuocSi?.tai_khoan ? thongTinDuocSi?.tai_khoan : \"\"}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group mb-6\">\r\n              <label className=\"label-input fw-bold\">Mật khẩu cũ</label>\r\n              <div className=\"input-group input-icon\">\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  autoComplete=\"none\"\r\n                  placeholder=\"Nhập mật khẩu cũ\"\r\n                  className=\"input-register\"\r\n                  style={{ fontSize: 14, fontWeight: 400 }}\r\n                  onChange={(e) => {\r\n                    setField(\"old_password\", e.target.value)\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group mb-10\">\r\n              <label className=\"label-input fw-bold\">Nhập mật khẩu mới</label>\r\n              <div className=\"input-group input-icon\">\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  autoComplete=\"none\"\r\n                  placeholder=\"Nhập mật khẩu mới\"\r\n                  className=\"input-register\"\r\n                  style={{ fontSize: 14, fontWeight: 400 }}\r\n                  onChange={(e) => {\r\n                    setField(\"new_password\", e.target.value)\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group mb-10\">\r\n              <label className=\"label-input fw-bold\">\r\n                Xác nhận mật khẩu mới\r\n              </label>\r\n              <div className=\"input-group input-icon\">\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  autoComplete=\"none\"\r\n                  placeholder=\"Nhập lại mật khẩu mới\"\r\n                  className=\"input-register\"\r\n                  style={{ fontSize: 14, fontWeight: 400 }}\r\n                  onChange={(e) => {\r\n                    setField(\"retype_password\", e.target.value)\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"d-flex flex-row justify-content-center\">\r\n              <div className=\"form-group my-2 text-center m-5\">\r\n                <button\r\n                  className=\"btn btn-block w-100 mb-8 btn-trolai\"\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    navigate(-1);\r\n                  }}\r\n                > Trở lại\r\n                </button>\r\n              </div>\r\n              <div className=\"form-group my-2 text-center m-5\">\r\n\r\n                {isLoading ? (\r\n                  <button\r\n                    className=\"btn btn-primary btn-block btn-login w-100 mb-8\"\r\n                    id=\"btn-register\"\r\n                  >\r\n                    <span\r\n                      className=\"indicator-progress\"\r\n                      style={{ display: \"block\" }}\r\n                    >\r\n                      Vui lòng chờ...\r\n                      <span className=\"spinner-border spinner-border-sm align-middle ms-2\"></span>\r\n                    </span>\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    className=\"btn btn-primary btn-block btn-login w-100 mb-8\"\r\n                    type=\"submit\"\r\n                    id=\"btn-register\"\r\n                    onClick={async (e) => {\r\n                      handleSubmit(e);\r\n                    }}\r\n                  >\r\n                    Đổi mật khẩu\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </LoadingOverlay>\r\n    </div>\r\n  );\r\n\r\n};","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\nop-ho-so\\NopHoSoPage.js",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\errors\\components\\Error404.tsx",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\configs\\api.js",[],["1677"],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-muc\\hoi-dong\\HoiDong.js",["1678","1679","1680","1681","1682","1683"],[],"import axios from \"axios\";\n// import { setTitle } from \"../../saga-modules/common/actions\";\n// import { PopupDelete } from \"../popup/PopupDelete\";\nimport clsx from \"clsx\";\nimport { useEffect, useState } from \"react\";\nimport BlockUi from \"react-block-ui\";\nimport { Form } from \"react-bootstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Oval, TailSpin } from \"react-loader-spinner\";\nimport { toast } from \"react-toastify\";\nimport ReactTooltip from \"react-tooltip\";\nimport { KTCard, KTSVG, useDebounce } from \"../../../../../_metronic/helpers\";\nimport { PageTitle } from \"../../../../../_metronic/layout/core\";\nimport api from \"../../../../configs/api\";\nimport { PopupDelete } from \"../../popup/PopupDelete\";\n\nexport function HoiDong() {\n  //   const dispatch = useDispatch();\n\n  const [listHoiDong, setListHoiDong] = useState([]);\n  const [perPage, setPerPage] = useState(10);\n  const [isLoading, setIsLoading] = useState(true);\n  const [totalRows, setTotalRows] = useState(0);\n\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [id, setId] = useState(\"\");\n  const [page, setPage] = useState(1);\n\n  const [trang_thai, setTrang_thai] = useState(true);\n\n  //open modal delete\n  const [isvisibleDelete, setIsvisibleDelete] = useState(false);\n  const [idDelete, setIdDelete] = useState(\"\");\n  const closeModalDelete = () => setIsvisibleDelete(false);\n  const showModalDelete = () => setIsvisibleDelete(true);\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const debouncedSearchTerm = useDebounce(searchTerm, 300);\n\n  useEffect(\n    () => {\n      if (debouncedSearchTerm !== undefined && searchTerm !== undefined) {\n        getList({ page_number: 1, search_key: debouncedSearchTerm });\n      }\n    },\n    [debouncedSearchTerm] // Only call effect if debounced search term changes\n  );\n\n  const getList = ({\n    page_number = page,\n    size = perPage,\n    search_key = searchTerm,\n  }) => {\n    setIsLoading(true);\n    axios\n      .post(\n        api.API_GET_HOI_DONG_GET_LIST +\n          `?page=${page_number}&per_page=${perPage}`,\n        {\n          search_ten: search_key,\n        }\n      )\n      .then(async ({ data }) => {\n        setListHoiDong(data?.results);\n        setTotalRows(data?.total);\n\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  //validate thêm chỉ định chuyên khoa\n  const [form, setForm] = useState({});\n  const [errors, setErrors] = useState({});\n  const setField = (field, value) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n    if (!!errors[field])\n      setErrors({\n        ...errors,\n        [field]: null,\n      });\n  };\n  const findFormErrors = () => {\n    const { ten_hoi_dong } = form;\n    const newErrors = {};\n    // name errors\n    if (!ten_hoi_dong || ten_hoi_dong === \"\")\n      newErrors.ten_hoi_dong = \"Tên không được bỏ trống!\";\n    return newErrors;\n  };\n\n  // handle api\n  const addHoiDong = async (e) => {\n    e.preventDefault();\n    // get our new errors\n    const newErrors = findFormErrors();\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n    } else {\n      setIsLoading(true);\n      const { ten_hoi_dong } = form;\n      const json = {\n        ten_hoi_dong,\n        trang_thai,\n      };\n      await axios\n        .post(api.API_GET_HOI_DONG + \"_add\", json)\n        .then(async ({ data }) => {\n          console.log(\"data\", data);\n          resetState();\n          toast.success(data?.msg, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            toastId: \"success\",\n          });\n          getList({});\n          setIsLoading(false);\n          // navigate(0);\n        })\n        .catch((error) => {\n          console.log(\"error\", error?.response);\n          toast.error(error?.data?.errors, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            toastId: \"error\",\n          });\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  };\n\n  const updateHoiDong = async (e) => {\n    e.preventDefault();\n    // get our new errors\n    const newErrors = findFormErrors();\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n    } else {\n      setIsLoading(true);\n      const { ten_hoi_dong, id } = form;\n      const json = {\n        ten_hoi_dong,\n        trang_thai,\n      };\n      await axios\n        .put(api.API_GET_HOI_DONG + \"/\" + id, json)\n        .then(async ({ data }) => {\n          console.log(\"data\", data);\n          resetState();\n          toast.success(data?.msg, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            toastId: \"success\",\n          });\n          getList({});\n          setIsLoading(false);\n          // navigate(0);\n        })\n        .catch((error) => {\n          console.log(\"error\", error?.response);\n          toast.error(error?.data?.errors, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            toastId: \"error\",\n          });\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  };\n\n  const resetState = async () => {\n    await setPerPage(10);\n    await setTotalRows(0);\n    await setForm({\n      ten_hoi_dong: \"\",\n    });\n    await setTrang_thai(true);\n    await setErrors({});\n    await setId(\"\");\n    await setShowUpdate(false);\n    // getNhomChuyenKhoa();\n  };\n  console.log(\"trang_thai\", trang_thai);\n  // DETAIL\n  const detail = async (data) => {\n    setForm({\n      ...data,\n    });\n\n    setId(data.id);\n    setTrang_thai(data.trang_thai);\n\n    setShowUpdate(true);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    await setIsLoading(true);\n    axios\n      .post(\n        api.API_GET_HOI_DONG +\n          \"_get_list\" +\n          `?page=${page}&per_page=${newPerPage}`,\n        {\n          ten_hoi_dong: searchTerm,\n        }\n      )\n      .then(({ data }) => {\n        if (data?.results) {\n          setListHoiDong(data?.results);\n          setPerPage(newPerPage);\n        }\n      })\n      .catch(() => {})\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const deleteCK = () => {\n    const json = {\n      id: idDelete,\n    };\n    console.log(\"123213\", json);\n    axios\n      .delete(api.API_GET_HOI_DONG + \"/\" + idDelete, {})\n      .then(async ({ data }) => {\n        console.log(\"data delete success\", data);\n        await toast.success(data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        closeModalDelete();\n        resetState();\n        if (page == 1) {\n          getList({ page_number: 1 });\n        } else if (listHoiDong?.length == 1) {\n          getList({ page_number: page - 1 });\n        } else {\n          getList({ page_number: page });\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\", error);\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const handlePageChange = (page) => {\n    setPage(page);\n    getList({ page_number: page });\n  };\n\n  //đổi màu khi selected\n  const [data, setData] = useState(listHoiDong);\n  useEffect(() => {\n    setData(listHoiDong);\n  }, [listHoiDong]);\n  const handleRowClicked = (row) => {\n    const updatedData = listHoiDong?.map((item) => {\n      if (row.id !== item.id) {\n        return item;\n      }\n      return {\n        ...item,\n        toggleSelected: !item.toggleSelected,\n      };\n    });\n    setData(updatedData);\n  };\n\n  const paginationOptions = {\n    rowsPerPageText: \"Dòng hiển thị\",\n    rangeSeparatorText: \"trên\",\n  };\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: \"solid\",\n        borderTopWidth: \"1px\",\n        borderTopColor: \"#e0e0e0\",\n        borderBottomColor: \"#e0e0e0\",\n      },\n    },\n    headCells: {\n      style: {\n        color: \"#202124\",\n        fontSize: \"16px\",\n      },\n    },\n    rows: {\n      highlightOnHoverStyle: {\n        backgroundColor: \"rgb(230, 244, 244)\",\n        borderBottomColor: \"#FFFFFF\",\n        outline: \"1px solid #FFFFFF\",\n      },\n    },\n    pagination: {\n      style: {\n        border: \"none\",\n      },\n    },\n  };\n  const columns = [\n    {\n      name: \"Mã hội đồng\",\n      grow: 3,\n      selector: (row) => (\n        <div\n          onClick={() => {\n            detail(row);\n            handleRowClicked(row);\n          }}\n        >\n          <span>{row.ma_hoi_dong}</span>\n        </div>\n      ),\n      style: {\n        color: \"#1251ff\",\n        fontSize: \"14px\",\n        fontWeight: 500,\n        width: 300,\n        cursor: \"pointer\",\n      },\n    },\n    {\n      name: \"Tên hội đồng\",\n      selector: (row) => (\n        <span data-tip={row?.ten_hoi_dong}>\n          {row.ten_hoi_dong}\n          <ReactTooltip place=\"top\" type=\"dark\" effect=\"float\" />\n        </span>\n      ),\n      grow: 7,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n\n    {\n      name: \"Trang thái\",\n      selector: (row) => <span>{row.trang_thai}</span>,\n      grow: 3,\n      cell: (row) => (\n        <td>\n          {row.trang_thai ? (\n            <span className=\"badge badge-light-success fs-7 fw-bold\">\n              Hoạt động\n            </span>\n          ) : (\n            <span className=\"badge badge-light-dark fs-7 fw-bold\">\n              Không hoạt động\n            </span>\n          )}\n        </td>\n      ),\n    },\n\n    {\n      name: \"Thao tác\",\n      grow: 2,\n\n      cell: (row) => (\n        <div className=\"container my-3\">\n          <a\n            onClick={async () => {\n              await setIdDelete(row?.id);\n              showModalDelete();\n            }}\n            className=\"btn btn-icon btn-bg-light btn-color-danger btn-sm\"\n          >\n            <KTSVG\n              path=\"/media/icons/duotune/general/gen027.svg\"\n              className=\"svg-icon-3\"\n            />\n          </a>\n        </div>\n      ),\n    },\n  ];\n\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.toggleSelected,\n      style: {\n        backgroundColor: \"#f5f5f5\",\n        userSelect: \"none\",\n      },\n    },\n  ];\n\n  const cardBox = {\n    backgroundColor: \"#fff\",\n    backgroundClip: \"border-box\",\n    border: \"1px solid #e7eaed\",\n    padding: \"1.5rem\",\n    marginBottom: \"24px\",\n    borderRadius: \"0.5rem\",\n  };\n\n  const usersBreadcrumbs = [\n    {\n      title: \"Trang chủ\",\n      path: \"/\",\n      isSeparator: false,\n      isActive: false,\n    },\n    {\n      title: \"\",\n      path: \"\",\n      isSeparator: true,\n      isActive: false,\n    },\n  ];\n\n  return (\n    <KTCard>\n      <div className=\"page\">\n        <PageTitle breadcrumbs={usersBreadcrumbs}>Danh sách hội đồng</PageTitle>\n        <div className=\"container-fluid\">\n          <div className=\"fv-row mb-7 mt-6\">\n            {/* begin::Label */}\n            <label className=\"fw-bold fs-6 mb-2\">Tên hội đồng</label>\n            {/* end::Label */}\n\n            {/* begin::Input */}\n            <div className=\"col-md-6\">\n              <input\n                placeholder=\"Nhập tên tìm kiếm...\"\n                type=\"text\"\n                name=\"name\"\n                className={clsx(\"form-control form-control-solid mb-3 mb-lg-0\")}\n                autoComplete=\"off\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n            </div>\n\n            {/* end::Input */}\n          </div>\n          <BlockUi\n            tag=\"div\"\n            // blocking={!isLoading}\n            loader={\n              <TailSpin\n                arialLabel=\"loading-indicator\"\n                height={60}\n                width={60}\n                strokeWidth={2}\n                strokeWidthSecondary={1}\n                color=\"blue\"\n                secondaryColor=\"blue\"\n                wrapperclassName={\"d-inline-flex\"}\n              />\n            }\n          >\n            <div className=\"row\">\n              <div className=\"col-md-8\">\n                <div className=\"\" style={cardBox}>\n                  <DataTable\n                    noDataComponent={\n                      <img\n                        style={{ width: \"30%\", height: \"auto\" }}\n                        src=\"/media/nodata-found.svg\"\n                      />\n                    }\n                    sortServer\n                    progressPending={isLoading}\n                    columns={columns}\n                    data={data}\n                    customStyles={customStyles}\n                    pagination\n                    highlightOnHover\n                    pointerOnHover\n                    paginationServer\n                    paginationTotalRows={totalRows}\n                    onChangeRowsPerPage={handlePerRowsChange}\n                    onChangePage={handlePageChange}\n                    paginationComponentOptions={paginationOptions}\n                    conditionalRowStyles={conditionalRowStyles}\n                    // onRowClicked={(data) => {\n                    //   detail(data);\n                    //   handleRowClicked(data);\n                    // }}\n                    progressComponent={\n                      <div\n                        style={{\n                          padding: \"24px\",\n                        }}\n                      >\n                        <Oval\n                          arialLabel=\"loading-indicator\"\n                          color=\"#007bff\"\n                          height={40}\n                        />\n                      </div>\n                    }\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-4\">\n                <div className=\"\" style={cardBox}>\n                  <div className=\"\">\n                    <label className=\"fw-bold fs-6 mb-2\">\n                      Tạo mới/ cập nhật hội đồng.\n                    </label>\n                  </div>\n\n                  {showUpdate && (\n                    <div className=\"row mt-3\">\n                      <div className=\"col-4\">\n                        <label className=\"required fw-bold fs-6 mb-2\">\n                          Mã hội đồng\n                        </label>\n                      </div>\n                      <div className=\"col-8\">\n                        <Form.Control\n                          disabled={true}\n                          type=\"text\"\n                          placeholder=\"Nhập mã hội đồng\"\n                          style={{ fontSize: 14, fontWeight: 500 }}\n                          value={\n                            form.ma_hoi_dong === null ? \"\" : form.ma_hoi_dong\n                          }\n                        />\n                      </div>\n                    </div>\n                  )}\n\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      {/* <p className=\"font-weight-bold\">\n                        Tên hội đồng<span className=\"text-danger\">*</span>\n                      </p> */}\n                      <label className=\"required fw-bold fs-6 mb-2\">\n                        Tên hội đồng\n                      </label>\n                    </div>\n                    <div className=\"col-8\">\n                      <Form.Control\n                        as=\"textarea\"\n                        rows={3}\n                        placeholder=\"Nhập tên hội đồng\"\n                        style={{ fontSize: 14, fontWeight: 500 }}\n                        value={\n                          form.ten_hoi_dong === null ? \"\" : form.ten_hoi_dong\n                        }\n                        onChange={(e) => {\n                          setField(\"ten_hoi_dong\", e.target.value);\n                        }}\n                        isInvalid={!!errors.ten_hoi_dong}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.ten_hoi_dong}\n                      </Form.Control.Feedback>\n                    </div>\n                  </div>\n\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      {/* <p className=\"font-weight-bold\">\n                        Tên hội đồng<span className=\"text-danger\">*</span>\n                      </p> */}\n                      <label className=\"fw-bold fs-6 mb-2\">Trạng thái</label>\n                    </div>\n                    <div className=\"col-8\">\n                      <div className=\"form-check form-check-solid form-switch fv-row\">\n                        <input\n                          className=\"form-check-input w-45px h-30px\"\n                          type=\"checkbox\"\n                          id=\"trang_thai\"\n                          // value={trang_thai}\n                          checked={trang_thai}\n                          onChange={(e) => {\n                            setTrang_thai(!trang_thai);\n                          }}\n                        />\n                        <label className=\"form-check-label\"></label>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row mt-5\">\n                    <div className=\"col-4\">\n                      {showUpdate ? (\n                        <button\n                          className=\"btn text-white bg-blue2\"\n                          style={{ fontSize: \".9rem\" }}\n                          onClick={(e) => {\n                            resetState();\n                            getList({ page_number: 1, search_key: \"\" });\n                          }}\n                        >\n                          <i className=\"fas fa-sync-alt text-white\"></i> Làm mới\n                        </button>\n                      ) : null}\n                    </div>\n\n                    <div className=\"col-8\">\n                      <button\n                        className=\"btn text-white bg-blue2 mr-3\"\n                        style={{ fontSize: \".9rem\" }}\n                        onClick={(e) => {\n                          showUpdate ? updateHoiDong(e) : addHoiDong(e);\n                        }}\n                      >\n                        {showUpdate ? (\n                          <i className=\"fa fa-pencil-alt text-white\"></i>\n                        ) : (\n                          <i className=\"fas fa-save text-white\"></i>\n                        )}{\" \"}\n                        {showUpdate ? \"Cập nhật\" : \"Lưu hội đồng\"}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <PopupDelete\n              title=\"Bạn có đồng ý xóa hội đồng này không?\"\n              show={isvisibleDelete}\n              onHide={closeModalDelete}\n              onDetele={() => {\n                deleteCK();\n              }}\n            />\n          </BlockUi>\n        </div>\n      </div>\n    </KTCard>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\thong-tin-to-chuc\\ThongTinToChuc.js",["1684"],[],"import { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\nimport { LocalizationProvider, DesktopDatePicker } from \"@mui/x-date-pickers\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { vi } from \"date-fns/locale\";\r\nimport { useState, useEffect } from \"react\";\r\nimport ImageUploading from \"react-images-uploading\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport { selectCurrentUser } from \"../../../redux-module/auth/authSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport api from \"../../../configs/api\";\r\nimport axios from \"axios\";\r\nimport { PageTitle } from \"../../../../_metronic/layout/core\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\n// import Switch from \"react-switch\";\r\n\r\nexport default function ThongTinToChuc() {\r\n  let navigate = useNavigate();\r\n  const thongTinToChuc = useSelector(selectCurrentUser);\r\n\r\n  const [form, setForm] = useState({});\r\n  const [errors, setErrors] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [disabledChuQuan, setdisabledChuQuan] = useState(true);\r\n\r\n  const [listTinhThanhCS, setListTinhThanhCS] = useState([]);\r\n  const [listQuanHuyenCS, setListQuanHuyenCS] = useState([]);\r\n  const [listXaPhuongCS, setListXaPhuongCS] = useState([]);\r\n  const [listTinhThanhTT, setListTinhThanhTT] = useState([]);\r\n  const [listQuanHuyenTT, setListQuanHuyenTT] = useState([]);\r\n  const [listXaPhuongTT, setListXaPhuongTT] = useState([]);\r\n\r\n  const [selectedTTCS, setSelectedTTCS] = useState(null);\r\n  const [selectedQHCS, setSelectedQHCS] = useState(null);\r\n  const [selectedXPCS, setSelectedXPCS] = useState(null);\r\n\r\n  const [selectedTTTT, setSelectedTTTT] = useState(null);\r\n  const [selectedQHTT, setSelectedQHTT] = useState(null);\r\n  const [selectedXPTT, setSelectedXPTT] = useState(null);\r\n\r\n  // loai hinh kinh doanh\r\n  const [selectedLoaiHinhKinhDoanh, setSelectedLoaiHinhKinhDoanh] = useState(\r\n    []\r\n  );\r\n  const [listLoaiHinhKinhDoanh, setListLoaiHinhKinhDoanh] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setForm(thongTinToChuc);\r\n    getLoaiHinhKinhDoanh();\r\n    getTinhThanh();\r\n    console.log(\"thong tin to chuc\", thongTinToChuc);\r\n  }, []);\r\n\r\n  const cardBox = {\r\n    backgroundColor: \"#fff\",\r\n    backgroundClip: \"border-box\",\r\n    border: \"1px solid #e7eaed\",\r\n    padding: \"1.5rem\",\r\n    marginBottom: \"24px\",\r\n    borderRadius: \"0.5rem\",\r\n  };\r\n  const usersBreadcrumbs = [\r\n    {\r\n      title: \"Trang chủ\",\r\n      path: \"/\",\r\n      isSeparator: false,\r\n      isActive: false,\r\n    },\r\n    {\r\n      title: \"\",\r\n      path: \"\",\r\n      isSeparator: true,\r\n      isActive: false,\r\n    },\r\n  ];\r\n  const groupStyles = {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  };\r\n  const formatGroupLabel = (listTemp) => (\r\n    <div style={groupStyles}>\r\n      <span>{listTemp.ten}</span>\r\n    </div>\r\n  );\r\n\r\n  const setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n    if (!!errors[field])\r\n      setErrors({\r\n        ...errors,\r\n        [field]: null,\r\n      });\r\n  };\r\n\r\n  const getTinhThanh = () => {\r\n    axios\r\n      .get(api.API_TINH_THANH)\r\n      .then(({ data }) => {\r\n        let resultsTinhThanh = data?.results;\r\n        resultsTinhThanh.forEach((e) => {\r\n          e.label = e.ten;\r\n          e.value = e.id;\r\n        });\r\n\r\n        if (thongTinToChuc.tinh_thanh_id) {\r\n          const ttcs = resultsTinhThanh.find(\r\n            (e) => e.id === thongTinToChuc.tinh_thanh_id\r\n          );\r\n          setSelectedTTCS(ttcs);\r\n          getQuanHuyen(ttcs.id, \"coso\");\r\n        }\r\n        if (thongTinToChuc.tinh_thanh_hien_nay_id) {\r\n          const tttt = resultsTinhThanh.find(\r\n            (e) => e.id === thongTinToChuc.tinh_thanh_hien_nay_id\r\n          );\r\n          setSelectedTTTT(tttt);\r\n          getQuanHuyen(tttt.id, \"tructhuoc\");\r\n        }\r\n\r\n        setListTinhThanhCS(resultsTinhThanh);\r\n        setListTinhThanhTT(resultsTinhThanh);\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.data) {\r\n          toast.error(error.response.data.msg, {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            toastId: \"success\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n  const getQuanHuyen = (id, type) => {\r\n    axios\r\n      .get(`${api.API_QUAN_HUYEN}/${id}?per_page=100`)\r\n      .then(({ data }) => {\r\n        let resultsQuanHuyen = data?.results;\r\n        resultsQuanHuyen.forEach((e) => {\r\n          e.label = e.ten;\r\n          e.value = e.id;\r\n        });\r\n\r\n        if (thongTinToChuc.quan_huyen_id === id) {\r\n          const qhcs = resultsQuanHuyen.find(\r\n            (e) => e.id === thongTinToChuc.xa_phuong_id\r\n          );\r\n          setSelectedQHCS(qhcs);\r\n          getXaPhuong(qhcs.id, \"coso\");\r\n        }\r\n        if (thongTinToChuc.quan_huyen_hien_nay_id === id) {\r\n          const qhtt = resultsQuanHuyen.find(\r\n            (e) => e.id === thongTinToChuc.xa_phuong_hien_nay_id\r\n          );\r\n          setSelectedQHTT(qhtt);\r\n          getXaPhuong(qhtt.id, \"tructhuoc\");\r\n        }\r\n\r\n        if (type === \"coso\") {\r\n          setListQuanHuyenCS(resultsQuanHuyen);\r\n        } else if (type === \"tructhuoc\") {\r\n          setListQuanHuyenTT(resultsQuanHuyen);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.data) {\r\n          toast.error(error.response.data.msg, {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            toastId: \"success\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n  const getXaPhuong = (id, type) => {\r\n    axios\r\n      .get(`${api.API_XA_PHUONG}/${id}?per_page=100`)\r\n      .then(({ data }) => {\r\n        let resultsXaPhuong = data?.results;\r\n        resultsXaPhuong.forEach((e) => {\r\n          e.label = e.ten;\r\n          e.value = e.id;\r\n        });\r\n\r\n        if (thongTinToChuc.quan_huyen_id === id) {\r\n          const xpcs = resultsXaPhuong.find(\r\n            (e) => e.id === thongTinToChuc.xa_phuong_id\r\n          );\r\n          setSelectedXPCS(xpcs);\r\n        }\r\n        if (thongTinToChuc.quan_huyen_hien_nay_id === id) {\r\n          const xptt = resultsXaPhuong.find(\r\n            (e) => e.id === thongTinToChuc.xa_phuong_hien_nay_id\r\n          );\r\n          setSelectedXPTT(xptt);\r\n        }\r\n\r\n        if (type === \"coso\") {\r\n          setListXaPhuongCS(resultsXaPhuong);\r\n        } else if (type === \"tructhuoc\") {\r\n          setListXaPhuongTT(resultsXaPhuong);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.data) {\r\n          toast.error(error.response.data.msg, {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            toastId: \"success\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n  const getLoaiHinhKinhDoanh = () => {\r\n    axios\r\n      .post(api.API_LIST_LOAI_HINH_KINH_DOANH, {\r\n        search_ten: \"\",\r\n      })\r\n      .then(async ({ data }) => {\r\n        if (data) {\r\n          let resultsLoaiHinhKinhDoanh = data?.results;\r\n          resultsLoaiHinhKinhDoanh.forEach((e) => {\r\n            e.label = e.ten;\r\n            e.value = e.id;\r\n          });\r\n          setListLoaiHinhKinhDoanh(resultsLoaiHinhKinhDoanh);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error?.response?.data?.msg, {\r\n          position: \"top-right\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          toastId: \"error\",\r\n        });\r\n      })\r\n      .finally(() => {});\r\n  };\r\n\r\n  // HANDLE LOCATIONs\r\n  const onChangeTinhThanhCS = (values) => {\r\n    setField(\"tinh_thanh_coso_id\", values.id);\r\n    getQuanHuyen(values.id, \"coso\");\r\n    setSelectedTTCS(values);\r\n    setSelectedQHCS(null);\r\n    setSelectedXPCS(null);\r\n  };\r\n  const onChangeQuanHuyenCS = (values) => {\r\n    setField(\"quan_huyen_coso_id\", values.id);\r\n    getXaPhuong(values.id, \"coso\");\r\n    setSelectedQHCS(values);\r\n    setSelectedXPCS(null);\r\n  };\r\n  const onChangeXaPhuongCS = (values) => {\r\n    setField(\"xa_phuong_coso_id\", values.id);\r\n    setSelectedXPCS(values);\r\n  };\r\n\r\n  const onChangeTinhThanhTT = (values) => {\r\n    setField(\"tinh_thanh_tructhuoc_id\", values.id);\r\n    getQuanHuyen(values.id, \"tructhuoc\");\r\n    setSelectedTTTT(values);\r\n    setSelectedQHTT(null);\r\n    setSelectedXPTT(null);\r\n  };\r\n  const onChangeQuanHuyenTT = (values) => {\r\n    setField(\"quan_huyen_tructhuoc_id\", values.id);\r\n    getXaPhuong(values.id, \"tructhuoc\");\r\n    setSelectedQHTT(values);\r\n    setSelectedXPTT(null);\r\n  };\r\n  const onChangeXaPhuongTT = (values) => {\r\n    setField(\"xa_phuong_tructhuoc_id\", values.id);\r\n    setSelectedXPTT(values);\r\n  };\r\n\r\n  const handleNgayCap = (newValue) => {\r\n    setField(\"ngay_cap\", new Date(newValue).getTime());\r\n  };\r\n\r\n  const findFormErrors = () => {\r\n    const newErrors = {};\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    await setIsLoading(true);\r\n    e.preventDefault();\r\n\r\n    const newErrors = findFormErrors();\r\n\r\n    if (Object.keys(newErrors).length > 0) {\r\n      setErrors(newErrors);\r\n      setIsLoading(false);\r\n    } else {\r\n      const configs = {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const {\r\n        ten_coso,\r\n        website_co_so,\r\n        ma_coso,\r\n        ngay_cap,\r\n        email_coso,\r\n        dienthoai_coso,\r\n        fax_coso,\r\n        diachi_coso,\r\n        ten_nguoi_lien_he,\r\n        chuc_danh_nguoi_lienhe,\r\n        email_nguoi_lienhe,\r\n        dien_thoai_nguoi_lienhe,\r\n        dia_chi_nguoi_lien_he,\r\n        ten_truc_thuoc,\r\n        ma_tructhuoc,\r\n        diachi_tructhuoc,\r\n      } = form;\r\n\r\n      const json = new FormData();\r\n\r\n      await json.append(\"ten_coso\", ten_coso);\r\n      await json.append(\r\n        \"loai_hinh_kinh_doanh_id\",\r\n        selectedLoaiHinhKinhDoanh ? selectedLoaiHinhKinhDoanh : null\r\n      );\r\n      await json.append(\"website_co_so\", website_co_so);\r\n      await json.append(\"ma_coso\", ma_coso);\r\n      await json.append(\"ngay_cap\", ngay_cap ? ngay_cap : null);\r\n      await json.append(\"email_coso\", email_coso);\r\n      await json.append(\"dienthoai_coso\", dienthoai_coso);\r\n      await json.append(\"fax_coso\", fax_coso);\r\n      await json.append(\r\n        \"tinh_thanh_coso_id\",\r\n        selectedTTCS ? selectedTTCS?.value : null\r\n      );\r\n      await json.append(\r\n        \"quan_huyen_coso_id\",\r\n        selectedQHCS ? selectedQHCS?.value : null\r\n      );\r\n      await json.append(\r\n        \"xa_phuong_coso_id\",\r\n        selectedXPCS ? selectedXPCS?.value : null\r\n      );\r\n      await json.append(\"diachi_coso\", diachi_coso);\r\n      await json.append(\"ten_nguoi_lien_he\", ten_nguoi_lien_he);\r\n      await json.append(\"chuc_danh_nguoi_lienhe\", chuc_danh_nguoi_lienhe);\r\n      await json.append(\"email_nguoi_lienhe\", email_nguoi_lienhe);\r\n      await json.append(\"dien_thoai_nguoi_lienhe\", dien_thoai_nguoi_lienhe);\r\n      await json.append(\"dia_chi_nguoi_lien_he\", dia_chi_nguoi_lien_he);\r\n      await json.append(\"ten_truc_thuoc\", ten_truc_thuoc);\r\n      await json.append(\"ma_tructhuoc\", ma_tructhuoc);\r\n      await json.append(\r\n        \"tinh_thanh_tructhuoc_id\",\r\n        selectedTTTT ? selectedTTTT?.value : null\r\n      );\r\n      await json.append(\r\n        \"quan_huyen_tructhuoc_id\",\r\n        selectedQHTT ? selectedQHTT?.value : null\r\n      );\r\n      await json.append(\r\n        \"xa_phuong_tructhuoc_id\",\r\n        selectedXPTT ? selectedXPTT?.value : null\r\n      );\r\n      await json.append(\"diachi_tructhuoc\", diachi_tructhuoc);\r\n\r\n      // const json = {\r\n      //     ten_coso,\r\n      //     // loai_hinh_kinh_doanh_id: selectedLoaiHinhKinhDoanh,\r\n      //     website_co_so,\r\n      //     ma_coso,\r\n      //     ngay_cap,\r\n      //     email_coso,\r\n      //     dienthoai_coso,\r\n      //     fax_coso,\r\n      //     tinh_thanh_coso_id: selectedTTCS?.value,\r\n      //     quan_huyen_coso_id: selectedQHCS?.value,\r\n      //     xa_phuong_coso_id: selectedXPCS?.value,\r\n      //     diachi_coso,\r\n      //     ten_nguoi_lien_he,\r\n      //     chuc_danh_nguoi_lienhe,\r\n      //     email_nguoi_lienhe,\r\n      //     dien_thoai_nguoi_lienhe,\r\n      //     dia_chi_nguoi_lien_he,\r\n      //     ten_truc_thuoc,\r\n      //     ma_tructhuoc,\r\n      //     tinh_thanh_tructhuoc_id: selectedTTTT?.value,\r\n      //     quan_huyen_tructhuoc_id: selectedQHTT?.value,\r\n      //     xa_phuong_tructhuoc_id: selectedXPTT?.value,\r\n      //     diachi_tructhuoc\r\n      // }\r\n\r\n      axios\r\n        .put(api.API_CO_SO_KINH_DOANH + \"/\" + thongTinToChuc.id, json, configs)\r\n        .then(({ data }) => {\r\n          console.log(data);\r\n        })\r\n        .catch((error) => {\r\n          toast.error(error?.data?.errors, {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            toastId: \"error\",\r\n          });\r\n        })\r\n        .finally(() => {\r\n          setIsLoading(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <LoadingOverlay spinner active={isLoading} text=\"Đang tải dữ liệu ...\">\r\n        <LocalizationProvider dateAdapter={AdapterDateFns} locale={vi}>\r\n          <PageTitle breadcrumbs={usersBreadcrumbs}>\r\n            Thông tin tài khoản\r\n          </PageTitle>\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <div style={cardBox}>\r\n                    <ImageUploading maxNumber={1} dataURLKey=\"data_url\">\r\n                      {({\r\n                        imageList,\r\n                        onImageUpload,\r\n                        onImageRemove,\r\n                        isDragging,\r\n                        dragProps,\r\n                      }) => (\r\n                        <div className=\"form-group\">\r\n                          {imageList.length >= 1 ? (\r\n                            imageList.map((image, index) => (\r\n                              <div key={index} className=\"form-group\">\r\n                                <button\r\n                                  style={{ fontSize: \"14px\" }}\r\n                                  className=\"btn btn-danger\"\r\n                                  onClick={() => onImageRemove(index)}\r\n                                >\r\n                                  Xóa\r\n                                </button>\r\n                                <div>\r\n                                  <img\r\n                                    className=\"mr-2 my-2\"\r\n                                    src={image.data_url}\r\n                                    alt=\"\"\r\n                                    width=\"140\"\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            ))\r\n                          ) : (\r\n                            <div>\r\n                              <div className=\"avatar-img\">\r\n                                <i\r\n                                  className=\"fas fa-camera btn-change-avatar\"\r\n                                  // onClick={onImageUpload}\r\n                                ></i>\r\n                                <img\r\n                                  src=\"/media/avatars/default-forum-user.png\"\r\n                                  alt=\"\"\r\n                                  className=\"rounded-circle border p-1\"\r\n                                  id=\"avatar-img\"\r\n                                  width=\"150\"\r\n                                  height=\"150\"\r\n                                  backgroundColor=\"red\"\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </ImageUploading>\r\n                    <div className=\"form-group\">\r\n                      <label className=\"fw-bold fs-6 mb-1\">\r\n                        Tên cơ sở/Địa điểm kinh doanh\r\n                      </label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Nhập tên cơ sở\"\r\n                        style={{\r\n                          fontSize: 14,\r\n                          fontWeight: 400,\r\n                          height: \"38px\",\r\n                        }}\r\n                        onChange={(e) => {\r\n                          setField(\"ten_coso\", e.target.value);\r\n                        }}\r\n                        value={form?.ten_coso != null ? form?.ten_coso : \"\"}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group mt-2\">\r\n                      <label className=\"fw-bold fs-6 mb-1\">\r\n                        Loại hình kinh doanh\r\n                      </label>\r\n                      <Select\r\n                        value={selectedLoaiHinhKinhDoanh}\r\n                        key={\"id\"}\r\n                        options={listLoaiHinhKinhDoanh}\r\n                        placeholder=\"Chọn loại hình kinh doanh\"\r\n                        formatGroupLabel={formatGroupLabel}\r\n                        onChange={(e) => {\r\n                          setSelectedLoaiHinhKinhDoanh(\r\n                            ...selectedLoaiHinhKinhDoanh,\r\n                            e.id\r\n                          );\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group mt-2\">\r\n                      <label className=\"fw-bold fs-6 mb-1\"> Website </label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Website\"\r\n                        style={{\r\n                          fontSize: 14,\r\n                          fontWeight: 400,\r\n                          height: \"38px\",\r\n                        }}\r\n                        onChange={(e) => {\r\n                          setField(\"website_co_so\", e.target.value);\r\n                        }}\r\n                        value={\r\n                          form?.website_co_so != null ? form?.website_co_so : \"\"\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group mt-2\">\r\n                      <label className=\"fw-bold fs-6 mb-1\">\r\n                        Mã số Doanh nghiệp/Địa điểm kinh doanh\r\n                      </label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Mã số Doanh nghiệp/Địa điểm kinh doanh\"\r\n                        style={{\r\n                          fontSize: 14,\r\n                          fontWeight: 400,\r\n                          height: \"38px\",\r\n                        }}\r\n                        onChange={(e) => {\r\n                          setField(\"ma_coso\", e.target.value);\r\n                        }}\r\n                        value={form?.ma_coso != null ? form?.ma_coso : \"\"}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group mt-2\">\r\n                      <label className=\"fw-bold fs-6 mb-1\">\r\n                        Ngày cấp GCN DKKD\r\n                      </label>\r\n                      <DesktopDatePicker\r\n                        label=\" \"\r\n                        inputFormat=\"dd/MM/yyyy\"\r\n                        value={form?.ngay_cap ? form?.ngay_cap : null}\r\n                        onChange={handleNgayCap}\r\n                        maxDate={new Date()}\r\n                        renderInput={(params) => (\r\n                          <TextField size=\"small\" {...params} />\r\n                        )}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group mt-2\">\r\n                      <label className=\"fw-bold fs-6 mb-1\"> Email </label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Email\"\r\n                        style={{ fontSize: 14, fontWeight: 400, height: 38 }}\r\n                        onChange={(e) => {\r\n                          setField(\"email_coso\", e.target.value);\r\n                        }}\r\n                        value={form?.email_coso != null ? form?.email_coso : \"\"}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group mt-2\">\r\n                      <label className=\"fw-bold fs-6 mb-1\">\r\n                        Số điện thoại\r\n                      </label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Nhập số điện thoại\"\r\n                        style={{ fontSize: 14, fontWeight: 400, height: 38 }}\r\n                        onChange={(e) => {\r\n                          setField(\"dienthoai_coso\", e.target.value);\r\n                        }}\r\n                        value={\r\n                          form?.dienthoai_coso != null\r\n                            ? form?.dienthoai_coso\r\n                            : \"\"\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group mt-2\">\r\n                      <label className=\"fw-bold fs-6 mb-1\"> Fax </label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Nhập số điện thoại\"\r\n                        style={{ fontSize: 14, fontWeight: 400, height: 38 }}\r\n                        onChange={(e) => {\r\n                          setField(\"fax_coso\", e.target.value);\r\n                        }}\r\n                        value={form?.fax_coso != null ? form?.fax_coso : \"\"}\r\n                      />\r\n                    </div>\r\n                    <div className=\"mt-5\">\r\n                      <label className=\"font-weight-bold text-uppercase\">\r\n                        Địa chỉ kinh doanh:\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-group mt-5\">\r\n                      <label className=\"fw-bold fs-6 mb-2\">\r\n                        Tỉnh/Thành phố\r\n                      </label>\r\n                      <Select\r\n                        value={selectedTTCS}\r\n                        placeholder=\"Chọn tỉnh thành\"\r\n                        options={listTinhThanhCS}\r\n                        onChange={(values) => onChangeTinhThanhCS(values)}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group mt-5\">\r\n                      <label className=\"fw-bold fs-6 mb-2\"> Quận/Huyện </label>\r\n                      <Select\r\n                        value={selectedQHCS}\r\n                        placeholder=\"Chọn quận huyện\"\r\n                        options={listQuanHuyenCS}\r\n                        onChange={(values) => onChangeQuanHuyenCS(values)}\r\n                        isDisabled={selectedTTCS ? false : true}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group mt-5\">\r\n                      <label className=\"fw-bold fs-6 mb-2\"> Xã/Phường </label>\r\n                      <Select\r\n                        value={selectedXPCS}\r\n                        placeholder=\"Chọn xã phường\"\r\n                        options={listXaPhuongCS}\r\n                        onChange={(values) => onChangeXaPhuongCS(values)}\r\n                        isDisabled={selectedQHCS ? false : true}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group mt-5\">\r\n                      <label className=\"fw-bold fs-6 mb-2\">\r\n                        Số nhà, tên đường\r\n                      </label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Số nhà/tên đường\"\r\n                        style={{ fontSize: 14, fontWeight: 400, height: 38 }}\r\n                        onChange={(e) => {\r\n                          setField(\"diachi_coso\", e.target.value);\r\n                        }}\r\n                        value={\r\n                          form?.diachi_coso != null ? form?.diachi_coso : \"\"\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-6\">\r\n                  <div style={cardBox}>\r\n                    <div className=\"mt-7\">\r\n                      <label className=\"font-weight-bold text-uppercase\">\r\n                        Thông tin người đứng đầu:\r\n                      </label>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mt-5\">\r\n                      <label className=\"fw-bold fs-6 mb-2\">\r\n                        Tên người liên hệ\r\n                      </label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Nhập tên người liên hệ\"\r\n                        style={{ fontSize: 14, fontWeight: 400, height: 38 }}\r\n                        onChange={(e) => {\r\n                          setField(\"ten_nguoi_lien_he\", e.target.value);\r\n                        }}\r\n                        value={\r\n                          form?.ten_nguoi_lien_he != null\r\n                            ? form?.ten_nguoi_lien_he\r\n                            : \"\"\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group mt-5\">\r\n                      <label className=\"fw-bold fs-6 mb-2\"> Chức danh </label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Chức danh\"\r\n                        style={{ fontSize: 14, fontWeight: 400, height: 38 }}\r\n                        onChange={(e) => {\r\n                          setField(\"chuc_danh_nguoi_lienhe\", e.target.value);\r\n                        }}\r\n                        value={\r\n                          form?.chuc_danh_nguoi_lienhe != null\r\n                            ? form?.chuc_danh_nguoi_lienhe\r\n                            : \"\"\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group mt-5\">\r\n                      <label className=\"fw-bold fs-6 mb-2\"> Email </label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Email\"\r\n                        style={{ fontSize: 14, fontWeight: 400, height: 38 }}\r\n                        onChange={(e) => {\r\n                          setField(\"email_nguoi_lienhe\", e.target.value);\r\n                        }}\r\n                        value={\r\n                          form?.email_nguoi_lienhe != null\r\n                            ? form?.email_nguoi_lienhe\r\n                            : \"\"\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group mt-5\">\r\n                      <label className=\"fw-bold fs-6 mb-2\"> Điện thoại </label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Điện thoại\"\r\n                        style={{ fontSize: 14, fontWeight: 400, height: 38 }}\r\n                        onChange={(e) => {\r\n                          setField(\"dien_thoai_nguoi_lienhe\", e.target.value);\r\n                        }}\r\n                        value={\r\n                          form?.dien_thoai_nguoi_lienhe != null\r\n                            ? form?.dien_thoai_nguoi_lienhe\r\n                            : \"\"\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group mt-5\">\r\n                      <label className=\"fw-bold fs-6 mb-2\">\r\n                        Địa chỉ liên lạc\r\n                      </label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Địa chỉ liên lạc\"\r\n                        style={{ fontSize: 14, fontWeight: 400, height: 38 }}\r\n                        onChange={(e) => {\r\n                          setField(\"dia_chi_nguoi_lien_he\", e.target.value);\r\n                        }}\r\n                        value={\r\n                          form?.dia_chi_nguoi_lien_he != null\r\n                            ? form?.dia_chi_nguoi_lien_he\r\n                            : \"\"\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      className=\"form-group mt-2 d-flex mt-14\"\r\n                      style={{ alignSelf: \"center\" }}\r\n                    >\r\n                      <div>\r\n                        <label\r\n                          className=\"font-weight-bold text-uppercase\"\r\n                          style={{ alignSelf: \"center\" }}\r\n                        >\r\n                          Thông tin doanh nghiệp/chi nhánh chủ quản:\r\n                          <span className=\"text-danger\"> </span>\r\n                        </label>\r\n                      </div>\r\n                      <input\r\n                        style={{ alignSelf: \"center\" }}\r\n                        className=\"ml-4\"\r\n                        type=\"checkbox\"\r\n                        onChange={() => setdisabledChuQuan(!disabledChuQuan)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group mt-5\">\r\n                      <label className=\"fw-bold fs-6 mb-2\">\r\n                        Tên doanh nghiệp/chi nhánh\r\n                      </label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Tên doanh nghiệp/chi nhánh\"\r\n                        disabled={disabledChuQuan ? true : false}\r\n                        style={{ fontSize: 14, fontWeight: 400, height: 38 }}\r\n                        onChange={(e) => {\r\n                          setField(\"ten_truc_thuoc\", e.target.value);\r\n                        }}\r\n                        value={\r\n                          form?.ten_truc_thuoc != null\r\n                            ? form?.ten_truc_thuoc\r\n                            : \"\"\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group mt-5\">\r\n                      <label className=\"fw-bold fs-6 mb-2\">\r\n                        Mã số Doanh nghiệp/chi nhánh\r\n                      </label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Mã số Doanh nghiệp/chi nhánh\"\r\n                        disabled={disabledChuQuan ? true : false}\r\n                        style={{ fontSize: 14, fontWeight: 400, height: 38 }}\r\n                        onChange={(e) => {\r\n                          setField(\"ma_tructhuoc\", e.target.value);\r\n                        }}\r\n                        value={\r\n                          form?.ma_tructhuoc != null ? form?.ma_tructhuoc : \"\"\r\n                        }\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group mt-5\">\r\n                      <label className=\"fw-bold fs-6 mb-2\">\r\n                        Tỉnh/Thành phố\r\n                      </label>\r\n                      <Select\r\n                        value={selectedTTTT}\r\n                        placeholder=\"Chọn tỉnh thành\"\r\n                        options={listTinhThanhTT}\r\n                        onChange={(values) => onChangeTinhThanhTT(values)}\r\n                        isDisabled={disabledChuQuan ? true : false}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group mt-5\">\r\n                      <label className=\"fw-bold fs-6 mb-2\"> Quận/Huyện </label>\r\n                      <Select\r\n                        value={selectedQHTT}\r\n                        placeholder=\"Chọn quận huyện\"\r\n                        options={listQuanHuyenTT}\r\n                        onChange={(values) => onChangeQuanHuyenTT(values)}\r\n                        isDisabled={\r\n                          disabledChuQuan ? true : selectedTTTT ? false : true\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group mt-5\">\r\n                      <label className=\"fw-bold fs-6 mb-2\"> Xã/Phường </label>\r\n                      <Select\r\n                        value={selectedXPTT}\r\n                        placeholder=\"Chọn xã phường\"\r\n                        options={listXaPhuongTT}\r\n                        onChange={(values) => onChangeXaPhuongTT(values)}\r\n                        isDisabled={\r\n                          disabledChuQuan ? true : selectedQHTT ? false : true\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group mt-5\">\r\n                      <label className=\"fw-bold fs-6 mb-2\">\r\n                        Số nhà, tên đường\r\n                      </label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Số nhà/tên đường\"\r\n                        disabled={disabledChuQuan ? true : false}\r\n                        style={{ fontSize: 14, fontWeight: 400, height: 38 }}\r\n                        onChange={(e) => {\r\n                          setField(\"diachi_tructhuoc\", e.target.value);\r\n                        }}\r\n                        value={\r\n                          form?.diachi_tructhuoc != null\r\n                            ? form?.diachi_tructhuoc\r\n                            : \"\"\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-12 text-center mt-5\">\r\n                  <button\r\n                    to={\"/dashboard\"}\r\n                    className=\"btn btn-secondary btn-trolai\"\r\n                    onClick={() => navigate(-1)}\r\n                  >\r\n                    Trở về\r\n                  </button>\r\n\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    style={{ marginLeft: \"10px\" }}\r\n                    onClick={(e) => onSubmit(e)}\r\n                  >\r\n                    Lưu thông tin\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </LocalizationProvider>\r\n      </LoadingOverlay>\r\n    </div>\r\n  );\r\n}\r\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\auth\\Logout.js",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\core\\index.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\helpers\\index.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\auth\\AuthPage.tsx",[],["1685","1686","1687","1688"],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\_utils\\index.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\redux-module\\locations\\service.js",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\auth\\core\\AuthHelpers.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\auth\\core\\_models.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\auth\\core\\Auth.tsx",[],["1689"],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\redux-module\\noti\\service.js",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-chung-chi\\ThongTinHanhChinh.js",["1690","1691","1692","1693"],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-chung-chi\\ThongTinChungChiHanhNghieDuoc.js",["1694","1695","1696","1697","1698","1699","1700","1701","1702","1703","1704","1705","1706","1707","1708","1709","1710","1711","1712","1713","1714","1715","1716","1717","1718","1719","1720","1721","1722","1723","1724"],[],"import { DesktopDatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\nimport { enAU } from \"date-fns/locale\";\r\n\r\nimport { TextField } from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport {\r\n  selectCheckedValidate,\r\n  commonActions,\r\n} from \"../../../redux-module/common/commonSlice\";\r\nimport api from \"../../../configs/api\";\r\nimport { GioiTinh, HinhThuc } from \"../../../data\";\r\n\r\nexport default function ThongTinChungChiHanhNgheDuoc(props) {\r\n  const dispatch = useDispatch();\r\n  const CheckedValidate = useSelector(selectCheckedValidate);\r\n\r\n  const [SelectedGioiTinh, setSelectedGioiTinh] = useState({});\r\n  const [listNoiCapCMND, setListNoiCapCMND] = useState([]);\r\n  const [selectedNoiCapCMND, setSelectedNoiCapCMND] = useState(null);\r\n\r\n  //validate thêm vị trí hành nghề\r\n  const [form, setForm] = useState();\r\n  const [errors, setErrors] = useState({});\r\n  // location\r\n  const [ListTinhThanh, setListTinhThanh] = useState([]);\r\n  const [ListQuanHuyen, setListQuanHuyen] = useState([]);\r\n  const [ListXaPhuong, setListXaPhuong] = useState([]);\r\n  const [TinhThanhSelected, setTinhThanhSelected] = useState(null);\r\n  const [QuanHuyenSelected, setQuanHuyenSelected] = useState(null);\r\n  const [XaPhuongSelected, setXaPhuongSelected] = useState(null);\r\n  const [disQuanHuyen, setDisQuanHuyen] = useState(false);\r\n  const [disXaPhuong, setDisXaPhuong] = useState(false);\r\n\r\n  // location Chỗ ở hiện nay\r\n  const [ListTinhThanhCOHN, setListTinhThanhCOHN] = useState([]);\r\n  const [ListQuanHuyenCOHN, setListQuanHuyenCOHN] = useState([]);\r\n  const [ListXaPhuongCOHN, setListXaPhuongCOHN] = useState([]);\r\n  const [TinhThanhCOHNSelected, setTinhThanhCOHNSelected] = useState(null);\r\n  const [QuanHuyenCOHNSelected, setQuanHuyenCOHNSelected] = useState(null);\r\n  const [XaPhuongCOHNSelected, setXaPhuongCOHNSelected] = useState(null);\r\n  const [disQuanHuyenCOHN, setDisQuanHuyenCOHN] = useState(false);\r\n  const [disXaPhuongCOHN, setDisXaPhuongCOHN] = useState(false);\r\n  const [SelectedHinhThuc, setSelectedHinhThuc] = useState({});\r\n\r\n  //   useEffect(() => {\r\n  //     handleSubmit();\r\n  //   }, [props?.validate]);\r\n\r\n  const handleGioiTinh = (id) => {\r\n    let tempGioiTinh = GioiTinh.find((e) => e.value === id);\r\n    setSelectedGioiTinh(tempGioiTinh);\r\n  };\r\n  const setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n    dispatch(\r\n      commonActions.setDoiTuong({\r\n        key: field,\r\n        value,\r\n      })\r\n    );\r\n    if (!!errors[field])\r\n      setErrors({\r\n        ...errors,\r\n        [field]: null,\r\n      });\r\n  };\r\n  // Func setSelectedLocation\r\n  const funcSetTinhThanhSelected = (values) => {\r\n    setTinhThanhSelected(values);\r\n    setField(\"tinh_thanh_thuong_tru_id\", values.id);\r\n    // setField(\"quan_huyen_thuong_tru_id\", \"\");\r\n    // setField(\"xa_phuong_thuong_tru_id\", \"\");\r\n  };\r\n\r\n  const funcSetQuanHuyenSelected = (values) => {\r\n    setQuanHuyenSelected(values);\r\n    setField(\"quan_huyen_thuong_tru_id\", values.id);\r\n    // setField(\"xa_phuong_thuong_tru_id\", \"\");\r\n  };\r\n\r\n  const funcSetXaPhuongSelected = (values) => {\r\n    setXaPhuongSelected(values);\r\n    setField(\"xa_phuong_thuong_tru_id\", values.id);\r\n  };\r\n\r\n  // Func setSelectedLocation NOHT\r\n  const funcSetTinhThanhHTSelected = (values) => {\r\n    setTinhThanhCOHNSelected(values);\r\n    setField(\"tinh_thanh_hien_nay_id\", values.id);\r\n    // setField(\"quan_huyen_hien_nay_id\", \"\");\r\n    // setField(\"xa_phuong_hien_nay_id\", \"\");\r\n  };\r\n\r\n  const funcSetQuanHuyenHTSelected = (values) => {\r\n    setQuanHuyenCOHNSelected(values);\r\n    setField(\"quan_huyen_hien_nay_id\", values.id);\r\n    // setField(\"xa_phuong_hien_nay_id\", \"\");\r\n  };\r\n\r\n  const funcSetXaPhuongHTSelected = (values) => {\r\n    setXaPhuongCOHNSelected(values);\r\n    setField(\"xa_phuong_hien_nay_id\", values.id);\r\n  };\r\n  const handleHinhThuc = (id) => {\r\n    let tempHinhThuc = HinhThuc.find((e) => e.value === id);\r\n    setSelectedHinhThuc(tempHinhThuc);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { data } = props;\r\n    if (data) {\r\n      let dataForm = {\r\n        // ho: data?.ho || \"\",\r\n        // ten: data?.ten || \"\",\r\n        so_giay_phep: data?.so_giay_phep || \"\",\r\n        hinh_thuc_thi: data?.hinh_thuc_thi || \"\",\r\n        ngay_sinh: Number(data?.ngay_sinh) || null,\r\n        gioi_tinh: data?.gioi_tinh || null,\r\n        tinh_thanh_thuong_tru_id: data?.tinh_thanh_id,\r\n        quan_huyen_thuong_tru_id: data?.quan_huyen_id,\r\n        xa_phuong_thuong_tru_id: data?.xa_phuong_id,\r\n        so_nha_thuong_tru: data?.so_nha_thuong_tru,\r\n        tinh_thanh_hien_nay_id: data?.tinh_thanh_hien_nay_id,\r\n        quan_huyen_hien_nay_id: data?.quan_huyen_hien_nay_id,\r\n        xa_phuong_hien_nay_id: data?.xa_phuong_hien_nay_id,\r\n        dia_chi_thuong_tru: data?.dia_chi_thuong_tru || \"\",\r\n        ma_cong_dan: data?.ma_cong_dan || \"\",\r\n        ngay_cap: Number(data?.ngay_cap) || null,\r\n        nam_tot_nghiep: Number(data?.nam_tot_nghiep) || null,\r\n        noi_cap: data?.noi_cap || \"\",\r\n        dien_thoai: data?.dien_thoai || \"\",\r\n        email: data?.email || \"\",\r\n      };\r\n      setForm(dataForm);\r\n      dispatch(commonActions.setDoiTuongAll(dataForm));\r\n      setSelectedNoiCapCMND({\r\n        label: data?.noi_cap,\r\n        value: \"123\",\r\n      });\r\n      getLocation();\r\n      getLocationCOHN();\r\n      getCATinhThanh();\r\n      handleGioiTinh(data?.gioi_tinh);\r\n      handleHinhThuc(data?.hinh_thuc_thi);\r\n    }\r\n  }, [props?.data]);\r\n\r\n  const getCATinhThanh = () => {\r\n    axios\r\n      .get(api.API_CA_TINH_THANH)\r\n      .then(async ({ data }) => {\r\n        setListNoiCapCMND(data?.results);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error?.response?.data?.msg, {\r\n          position: \"top-right\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          toastId: \"error\",\r\n        });\r\n      })\r\n      .finally(() => {});\r\n  };\r\n\r\n  const getLocation = () => {\r\n    let { tinh_thanh_id, xa_phuong_id, quan_huyen_id } = props?.data;\r\n    getTinhThanh(tinh_thanh_id);\r\n    if (tinh_thanh_id) {\r\n      getQuanHuyen(tinh_thanh_id, quan_huyen_id);\r\n    }\r\n    if (quan_huyen_id) {\r\n      getXaPhuong(quan_huyen_id, xa_phuong_id);\r\n    }\r\n  };\r\n\r\n  const getLocationCOHN = () => {\r\n    let {\r\n      tinh_thanh_hien_nay_id,\r\n      xa_phuong_hien_nay_id,\r\n      quan_huyen_hien_nay_id,\r\n    } = props.data;\r\n    getTinhThanhCOHN(tinh_thanh_hien_nay_id);\r\n    if (tinh_thanh_hien_nay_id) {\r\n      getQuanHuyenCOHN(tinh_thanh_hien_nay_id, quan_huyen_hien_nay_id);\r\n    }\r\n    if (quan_huyen_hien_nay_id) {\r\n      getXaPhuongCOHN(quan_huyen_hien_nay_id, xa_phuong_hien_nay_id);\r\n    }\r\n  };\r\n\r\n  const findFormErrors = () => {\r\n    const {\r\n      ho,\r\n      ten,\r\n      ngay_sinh,\r\n      gioi_tinh,\r\n      tinh_thanh_thuong_tru_id,\r\n      quan_huyen_thuong_tru_id,\r\n      xa_phuong_thuong_tru_id,\r\n      tinh_thanh_hien_nay_id,\r\n      quan_huyen_hien_nay_id,\r\n      xa_phuong_hien_nay_id,\r\n      ma_cong_dan,\r\n      ngay_cap,\r\n      noi_cap,\r\n      dien_thoai,\r\n      hinh_thuc_thi,\r\n    } = form;\r\n\r\n    const newErrors = {};\r\n    // name errors\r\n    if (!ho || ho === \"\") newErrors.ho = \"Họ không được bỏ trống!\";\r\n    if (!hinh_thuc_thi || hinh_thuc_thi === \"\")\r\n      newErrors.hinh_thuc_thi = \"Hình thức thi không được bỏ trống!\";\r\n    if (!ten || ten === \"\") newErrors.ten = \"Tên không được bỏ trống!\";\r\n    if (!ngay_sinh || ngay_sinh === \"\")\r\n      newErrors.ngay_sinh = \"Ngày sinh không được bỏ trống!\";\r\n    if (!gioi_tinh || gioi_tinh === \"\")\r\n      newErrors.gioi_tinh = \"Giới tính không được bỏ trống!\";\r\n    if (!tinh_thanh_thuong_tru_id || tinh_thanh_thuong_tru_id === \"\")\r\n      newErrors.tinh_thanh_thuong_tru_id =\r\n        \"Tỉnh thành thường trú không được bỏ trống!\";\r\n    if (!quan_huyen_thuong_tru_id || quan_huyen_thuong_tru_id === \"\")\r\n      newErrors.quan_huyen_thuong_tru_id =\r\n        \"Quận huyện thường trú không được bỏ trống!\";\r\n    if (!xa_phuong_thuong_tru_id || xa_phuong_thuong_tru_id === \"\")\r\n      newErrors.xa_phuong_thuong_tru_id =\r\n        \"Xã phường thường trú không được bỏ trống!\";\r\n    if (!tinh_thanh_hien_nay_id || tinh_thanh_hien_nay_id === \"\")\r\n      newErrors.tinh_thanh_hien_nay_id =\r\n        \"Tỉnh thành hiện tại không được bỏ trống!\";\r\n    if (!quan_huyen_hien_nay_id || quan_huyen_hien_nay_id === \"\")\r\n      newErrors.quan_huyen_hien_nay_id =\r\n        \"Quận huyện hiện tại không được bỏ trống!\";\r\n    if (!xa_phuong_hien_nay_id || xa_phuong_hien_nay_id === \"\")\r\n      newErrors.xa_phuong_hien_nay_id =\r\n        \"Xã phường hiện tại không được bỏ trống!\";\r\n    if (!ma_cong_dan || ma_cong_dan === \"\")\r\n      newErrors.ma_cong_dan = \"Mã công dân không được bỏ trống!\";\r\n    if (!ngay_cap || ngay_cap === \"\")\r\n      newErrors.ngay_cap = \"Ngày cấp không được bỏ trống!\";\r\n    if (!noi_cap || noi_cap === \"\")\r\n      newErrors.noi_cap = \"Nơi cấp không được bỏ trống!\";\r\n\r\n    if (!dien_thoai || dien_thoai === \"\")\r\n      newErrors.dien_thoai = \"Số điện thoại không được bỏ trống!\";\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    const newErrors = findFormErrors();\r\n    // Conditional logic:\r\n    if (Object.keys(newErrors).length > 0) {\r\n      // We got errors!\r\n      setErrors(newErrors);\r\n    } else {\r\n      // No errors! Put any logic here for the form submission!\r\n      props?.changeValidate();\r\n    }\r\n  };\r\n\r\n  // GET LOCATIONs\r\n  const getTinhThanh = (value) => {\r\n    axios\r\n      .get(api.API_TINH_THANH)\r\n      .then(({ data }) => {\r\n        let resultsTinhThanh = data?.results;\r\n        resultsTinhThanh.forEach((e) => {\r\n          e.label = e.ten;\r\n          e.value = e.id;\r\n        });\r\n        setListTinhThanh(resultsTinhThanh);\r\n        if (value) {\r\n          let TinhThanhSelected = resultsTinhThanh.find((e) => e.id === value);\r\n          setTinhThanhSelected(TinhThanhSelected);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.data) {\r\n          toast.error(error.response.data.msg, {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            toastId: \"success\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n  const getQuanHuyen = (id_tinh, value) => {\r\n    axios\r\n      .get(`${api.API_QUAN_HUYEN}/${id_tinh}?per_page=100`)\r\n      .then(({ data }) => {\r\n        let resultsQuanHuyen = data?.results;\r\n        resultsQuanHuyen.forEach((e) => {\r\n          e.label = e.ten;\r\n          e.value = e.id;\r\n        });\r\n        setListQuanHuyen(resultsQuanHuyen);\r\n        if (value) {\r\n          let QuanHuyenSelected = resultsQuanHuyen.find((e) => e.id === value);\r\n          setQuanHuyenSelected(QuanHuyenSelected);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.data) {\r\n          toast.error(error.response.data.msg, {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            toastId: \"success\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n  const getXaPhuong = (id_xa, value) => {\r\n    axios\r\n      .get(`${api.API_XA_PHUONG}/${id_xa}?per_page=100`)\r\n      .then(({ data }) => {\r\n        let resultsXaPhuong = data?.results;\r\n        resultsXaPhuong.forEach((e) => {\r\n          e.label = e.ten;\r\n          e.value = e.id;\r\n        });\r\n        setListXaPhuong(resultsXaPhuong);\r\n        if (value) {\r\n          let XaPhuongSelected = resultsXaPhuong.find((e) => e.id === value);\r\n          setXaPhuongSelected(XaPhuongSelected);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.data) {\r\n          toast.error(error.response.data.msg, {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            toastId: \"success\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n  const onChangeTinhThanh = async (values) => {\r\n    funcSetTinhThanhSelected(values);\r\n    getQuanHuyen(values.id);\r\n    setQuanHuyenSelected(null);\r\n    setXaPhuongSelected(null);\r\n  };\r\n  const onChangeQuanHuyen = (values) => {\r\n    funcSetQuanHuyenSelected(values);\r\n    setXaPhuongSelected(null);\r\n    getXaPhuong(values.id);\r\n  };\r\n  const onChangeXaPhuong = (values) => {\r\n    funcSetXaPhuongSelected(values);\r\n  };\r\n  // GET LOCATIONs COHN\r\n  const getTinhThanhCOHN = (value) => {\r\n    axios\r\n      .get(api.API_TINH_THANH)\r\n      .then(({ data }) => {\r\n        let resultsTinhThanhCOHN = data?.results;\r\n        resultsTinhThanhCOHN.forEach((e) => {\r\n          e.label = e.ten;\r\n          e.value = e.id;\r\n        });\r\n        setListTinhThanhCOHN(resultsTinhThanhCOHN);\r\n        if (value) {\r\n          let TinhThanhCOHNSelected = resultsTinhThanhCOHN.find(\r\n            (e) => e.id === value\r\n          );\r\n          setTinhThanhCOHNSelected(TinhThanhCOHNSelected);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.data) {\r\n          toast.error(error.response.data.msg, {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            toastId: \"success\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n  const getQuanHuyenCOHN = (id_tinh, value) => {\r\n    axios\r\n      .get(`${api.API_QUAN_HUYEN}/${id_tinh}?per_page=100`)\r\n      .then(({ data }) => {\r\n        let resultsQuanHuyenCOHN = data?.results;\r\n        resultsQuanHuyenCOHN.forEach((e) => {\r\n          e.label = e.ten;\r\n          e.value = e.id;\r\n        });\r\n        setListQuanHuyenCOHN(resultsQuanHuyenCOHN);\r\n        if (value) {\r\n          let QuanHuyenCOHNSelected = resultsQuanHuyenCOHN.find(\r\n            (e) => e.id === value\r\n          );\r\n          setQuanHuyenCOHNSelected(QuanHuyenCOHNSelected);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.data) {\r\n          toast.error(error.response.data.msg, {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            toastId: \"success\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n  const getXaPhuongCOHN = (id_xa, value) => {\r\n    axios\r\n      .get(`${api.API_XA_PHUONG}/${id_xa}?per_page=100`)\r\n      .then(({ data }) => {\r\n        let resultsXaPhuongCOHN = data?.results;\r\n        resultsXaPhuongCOHN.forEach((e) => {\r\n          e.label = e.ten;\r\n          e.value = e.id;\r\n        });\r\n        setListXaPhuongCOHN(resultsXaPhuongCOHN);\r\n        if (value) {\r\n          let XaPhuongCOHNSelected = resultsXaPhuongCOHN.find(\r\n            (e) => e.id === value\r\n          );\r\n          setXaPhuongCOHNSelected(XaPhuongCOHNSelected);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.data) {\r\n          toast.error(error.response.data.msg, {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            toastId: \"success\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n  const onChangeTinhThanhCOHN = async (values) => {\r\n    funcSetTinhThanhHTSelected(values);\r\n    getQuanHuyenCOHN(values.id);\r\n    setQuanHuyenCOHNSelected(null);\r\n    setXaPhuongCOHNSelected(null);\r\n  };\r\n  const onChangeQuanHuyenCOHN = (values) => {\r\n    funcSetQuanHuyenHTSelected(values);\r\n    setXaPhuongCOHNSelected(null);\r\n    getXaPhuongCOHN(values.id);\r\n  };\r\n  const onChangeXaPhuongCOHN = (values) => {\r\n    funcSetXaPhuongHTSelected(values);\r\n  };\r\n\r\n  const updateHoSo = () => {\r\n    const { ly_do_tu_choi } = form;\r\n    const jsonUpdate = {\r\n      ly_do_tu_choi,\r\n    };\r\n    axios\r\n      .post(api.API_YEU_CAU_CHUNG_CHI_HANH_NGHE + \"/thu_ly\", jsonUpdate)\r\n      .then(async ({ data }) => {\r\n        toast.success(\"Cập nhật thành công\", {\r\n          position: \"top-right\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          toastId: \"success\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error?.data?.errors, {\r\n          position: \"top-right\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          toastId: \"error\",\r\n        });\r\n      })\r\n      .finally(() => {});\r\n  };\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns} locale={enAU}>\r\n      <div className=\"card py-6 px-6 mx-3 my-3\">\r\n        <div className=\"col-12 text-title pb-3 fw-bolder\">\r\n          Thông tin chứng chỉ\r\n        </div>\r\n        <div className=\"row\">\r\n          {/* Họ tên */}\r\n          <div className=\"row col-12\">\r\n            <div className=\"col-3 mb-4\">\r\n              <span className=\"required fw-bolder text-primary\">Số CCHND</span>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"mt-2\"\r\n                placeholder=\"Số CCHND\"\r\n                value={form?.so_giay_phep != null ? form?.so_giay_phep : \"\"}\r\n                onChange={(e) => {\r\n                  setField(\"so_giay_phep\", e.target.value);\r\n                }}\r\n                style={{ fontSize: 14, fontWeight: 400, height: \"38px\" }}\r\n                isInvalid={!!errors?.so_giay_phep}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors?.so_giay_phep}\r\n              </Form.Control.Feedback>\r\n            </div>\r\n            <div className=\"col-3 mb-4\">\r\n              <span className=\"required fw-bolder d-block mb-2 text-primary\">\r\n                Ngày cấp\r\n              </span>\r\n              <DesktopDatePicker\r\n                label=\" \"\r\n                inputFormat=\"dd/MM/yyyy\"\r\n                value={form?.ngay_cap || null}\r\n                onChange={(e) => {\r\n                  setField(\"ngay_cap\", new Date(e).getTime());\r\n                }}\r\n                renderInput={(params) => <TextField onKeyDown={(e)=> {e.preventDefault()}} {...params} />}\r\n                isInvalid={!!errors?.ngay_cap}\r\n              />\r\n              {/* <span className=\"text-danger\">\r\n                {errors?.ngay_cap ? <span>{errors?.ngay_cap}</span> : \"\"}\r\n              </span> */}\r\n            </div>\r\n            <div className=\"col-3 mb-4\">\r\n              <span className=\"required fw-bolder d-block mb-2 text-primary\">\r\n                Ngày hiệu lực\r\n              </span>\r\n              <DesktopDatePicker\r\n                label=\" \"\r\n                inputFormat=\"dd/MM/yyyy\"\r\n                value={form?.ngay_hieu_luc || null}\r\n                onChange={(e) => {\r\n                  setField(\"ngay_hieu_luc\", new Date(e).getTime());\r\n                }}\r\n                renderInput={(params) => <TextField onKeyDown={(e)=> {e.preventDefault()}} {...params} />}\r\n                isInvalid={!!errors?.ngay_hieu_luc}\r\n              />\r\n              <span className=\"text-danger\">\r\n                {errors?.ngay_hieu_luc ? (\r\n                  <span>{errors?.ngay_hieu_luc}</span>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </span>\r\n            </div>\r\n            <div className=\"col-3 mb-4\">\r\n              <span className=\"required fw-bolder d-block mb-2 text-primary\">\r\n                Ngày hết hạn\r\n              </span>\r\n              <DesktopDatePicker\r\n                label=\" \"\r\n                inputFormat=\"dd/MM/yyyy\"\r\n                value={form?.ngay_het_han || null}\r\n                onChange={(e) => {\r\n                  setField(\"ngay_het_han\", new Date(e).getTime());\r\n                }}\r\n                renderInput={(params) => <TextField onKeyDown={(e)=> {e.preventDefault()}} {...params} />}\r\n                isInvalid={!!errors?.ngay_het_han}\r\n              />\r\n              <span className=\"text-danger\">\r\n                {errors?.ngay_het_han ? (\r\n                  <span>{errors?.ngay_het_han}</span>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* CMND/SDT */}\r\n          <div className=\"row col-12\">\r\n            <div className=\"col-6 mb-4\">\r\n              <span className=\"required fw-bolder text-primary\">\r\n                Số QĐ cấp CCHN\r\n              </span>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"mt-2\"\r\n                placeholder=\"Số QĐ cấp CCHN\"\r\n                value={form?.so_quyet_dinh != null ? form?.so_quyet_dinh : \"\"}\r\n                style={{ fontSize: 14, fontWeight: 400, height: \"38px\" }}\r\n                onChange={(e) => {\r\n                  setField(\"so_quyet_dinh\", e.target.value);\r\n                }}\r\n                isInvalid={!!errors?.so_quyet_dinh}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors?.so_quyet_dinh}\r\n              </Form.Control.Feedback>\r\n            </div>\r\n\r\n            <div className=\"col-6 mb-4\">\r\n              <span className=\"required fw-bolder d-block mb-2 text-primary\">\r\n                Ngày QĐ cấp CCHN\r\n              </span>\r\n              <DesktopDatePicker\r\n                label=\" \"\r\n                inputFormat=\"dd/MM/yyyy\"\r\n                value={form?.ngay_quyet_dinh || null}\r\n                onChange={(e) => {\r\n                  setField(\"ngay_quyet_dinh\", new Date(e).getTime());\r\n                }}\r\n                renderInput={(params) => <TextField onKeyDown={(e)=> {e.preventDefault()}} {...params} />}\r\n                isInvalid={!!errors?.ngay_quyet_dinh}\r\n              />\r\n              <span className=\"text-danger\">\r\n                {errors?.ngay_quyet_dinh ? (\r\n                  <span>{errors?.ngay_quyet_dinh}</span>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </span>\r\n            </div>\r\n            <div className=\"col-4 mb-4\">\r\n              <span className=\"required fw-bolder text-primary\">\r\n                Văn bằng chuyên môn\r\n              </span>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"mt-2\"\r\n                placeholder=\"Văn bằng chuyên môn\"\r\n                style={{ fontSize: 14, fontWeight: 400, height: \"38px\" }}\r\n                // value={form?.ma_cong_dan != null ? form?.ma_cong_dan : \"\"}\r\n                // onChange={(e) => {\r\n                //   setField(\"ma_cong_dan\", e.target.value);\r\n                // }}\r\n                // isInvalid={!!errors?.ma_cong_dan}\r\n              />\r\n              {/* <Form.Control.Feedback type=\"invalid\">\r\n                {errors?.ma_cong_dan}\r\n              </Form.Control.Feedback> */}\r\n            </div>\r\n            <div className=\"col-4 mb-4\">\r\n              <span className=\"required fw-bolder d-block mb-2 text-primary\">\r\n                Nơi cấp\r\n              </span>\r\n              <Select\r\n                key={\"id\"}\r\n                className=\"mt-2\"\r\n                options={listNoiCapCMND}\r\n                style={{ height: \"38px\" }}\r\n                onChange={(e) => {\r\n                  setSelectedNoiCapCMND(e);\r\n                  setField(\"noi_cap\", e?.label);\r\n                }}\r\n                value={selectedNoiCapCMND}\r\n              />\r\n              {/* <span className=\"text-danger\">\r\n                {errors?.noi_cap ? <span>{errors?.noi_cap}</span> : \"\"}\r\n              </span> */}\r\n            </div>\r\n            <div className=\"col-3 mb-4\">\r\n              <span className=\"required fw-bolder text-primary\">Hình thức</span>\r\n              <Select\r\n                key={\"id\"}\r\n                className=\"mt-2\"\r\n                options={HinhThuc}\r\n                value={SelectedHinhThuc}\r\n                style={{ height: \"44px\" }}\r\n                placeholder={\"Hình thức thi\"}\r\n                onChange={(e) => {\r\n                  setSelectedHinhThuc(e);\r\n                  setField(\"hinh_thuc_thi\", e.value);\r\n                }}\r\n              />\r\n              <span className=\"text-danger\">\r\n                {errors?.hinh_thuc_thi ? (\r\n                  <span>{errors?.hinh_thuc_thi}</span>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </span>\r\n            </div>\r\n\r\n            <div className=\"col-6 mb-4\">\r\n              <span className=\"fw-bolder d-block mb-2 text-primary\">\r\n                Phụ trách chuyên môn tại\r\n              </span>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"mt-2\"\r\n                placeholder=\"Phụ trách chuyên môn tại\"\r\n                style={{ fontSize: 14, fontWeight: 400, height: \"38px\" }}\r\n                // value={form?.email != null ? form?.email : \"\"}\r\n                // onChange={(e) => {\r\n                //   setField(\"email\", e.target.value);\r\n                // }}\r\n                // isInvalid={!!errors?.email}\r\n              />\r\n            </div>\r\n            <div className=\"col-6 mb-4\">\r\n              <span className=\"required fw-bolder text-primary\">Địa chỉ</span>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"mt-2\"\r\n                placeholder={\"Nhập địa chỉ thường trú\"}\r\n                value={\r\n                  form?.so_nha_thuong_tru != null ? form?.so_nha_thuong_tru : \"\"\r\n                }\r\n                style={{ fontSize: 14, fontWeight: 400, height: \"38px\" }}\r\n                onChange={(e) => {\r\n                  setField(\"so_nha_thuong_tru\", e.target.value);\r\n                }}\r\n                isInvalid={!!errors?.dia_chi_thuong_tru}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors?.dia_chi_thuong_tru}\r\n              </Form.Control.Feedback>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\chung-chi-hanh-nghe\\danh-sach-lien-ket\\DanhSachLienKet.js",["1725"],[],"import clsx from \"clsx\";\r\nimport { useState } from \"react\";\r\nimport { KTCard } from \"../../../../../_metronic/helpers\";\r\n\r\nexport function DanhSachLienKet() {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  // const debouncedSearchTerm = useDebounce(searchTerm, 1000);\r\n\r\n  // useEffect(\r\n  //     () => {\r\n  //         if (debouncedSearchTerm !== undefined && searchTerm !== undefined) {\r\n  //             getList(1, perPage, debouncedSearchTerm);\r\n  //         }\r\n  //     },\r\n  //     [debouncedSearchTerm] // Only call effect if debounced search term changes\r\n  // );\r\n\r\n  return (\r\n    <KTCard>\r\n      <div className=\"page\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row mb-7 mt-6\">\r\n            {/* begin::Input */}\r\n\r\n            <div className=\"col-md-4\">\r\n              {/* begin::Label */}\r\n              <label className=\"fw-bold fs-6 mb-2\">Trạng thái</label>\r\n              {/* end::Label */}\r\n              <input\r\n                placeholder=\"Nhập tên tìm kiếm...\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                className={clsx(\"form-control form-control-solid mb-3 mb-lg-0\")}\r\n                autoComplete=\"off\"\r\n                // value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            {/* end::Input */}\r\n\r\n            {/* begin::Input */}\r\n            <div className=\"col-md-8\">\r\n              {/* begin::Label */}\r\n              <label className=\"fw-bold fs-6 mb-2\">\r\n                Danh sách dược sĩ liên kết\r\n              </label>\r\n              {/* end::Label */}\r\n              <input\r\n                placeholder=\"Nhập tên tìm kiếm...\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                className={clsx(\"form-control form-control-solid mb-3 mb-lg-0\")}\r\n                autoComplete=\"off\"\r\n                // value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n            {/* end::Input */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </KTCard>\r\n  );\r\n}\r\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\components\\Status.js",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\popup\\PopupThongTinHoSoDuocSi.js",["1726","1727","1728","1729","1730","1731","1732","1733"],[],"import { LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\nimport { enAU } from \"date-fns/locale\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\nimport { PhamViVaViTriChuyenMon } from \"../danh-sach-ho-so-thu-ly-duoc-si/components/PhamViChuyenMon\";\r\n// import ThongTinCaNhanCapNhat from \"../danh-sach-ho-so-thu-ly-duoc-si/components/ThongTinCaNhanCapNhat\";\r\nimport { ThongTinCapCCHN } from \"../danh-sach-ho-so-thu-ly-duoc-si/components/ThongTinCapCCHN\";\r\n\r\nexport function PopupThongTinHoSoDuocSi(props) {\r\n  const data = props?.data;\r\n\r\n  const initRow = {\r\n    id: 1,\r\n    noi_dung_thuc_hanh: null,\r\n    tu_ngay: new Date(),\r\n    den_ngay: new Date(),\r\n  };\r\n\r\n  const [form, setForm] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [noiDungThucHanh, setNoiDungThucHanh] = useState([]);\r\n  const [noiDungThucHanhList, setNoiDungThucHanhList] = useState();\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"data\", data)\r\n  // },[props?.data])\r\n\r\n  const setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n    if (!!errors[field])\r\n      setErrors({\r\n        ...errors,\r\n        [field]: null,\r\n      });\r\n  };\r\n\r\n  const addRow = async () => {\r\n    const content =\r\n      noiDungThucHanh[noiDungThucHanh.length - 1]?.noi_dung_thuc_hanh;\r\n    // if (content == null && typeof content == \"object\") {\r\n    //   toast.error(\"Vui lòng nhập đầy đủ thông tin thực hành.\", {\r\n    //     position: \"top-right\",\r\n    //     autoClose: 2000,\r\n    //     hideProgressBar: false,\r\n    //     closeOnClick: true,\r\n    //     pauseOnHover: true,\r\n    //     draggable: true,\r\n    //     progress: undefined,\r\n    //     toastId: \"error\",\r\n    //   });\r\n    // } else {\r\n    let newRow = { ...initRow };\r\n    var id = 0;\r\n    if (noiDungThucHanh.length == 0) {\r\n      id = 1;\r\n    } else {\r\n      id = noiDungThucHanh[noiDungThucHanh.length - 1].id + 1;\r\n    }\r\n    newRow.id = id;\r\n    await setNoiDungThucHanh(noiDungThucHanh.concat(newRow));\r\n    // }\r\n  };\r\n  const setRowValue = async (e, ndth) => {\r\n    const dataRow = {\r\n      ...ndth,\r\n      noi_dung_thuc_hanh: e,\r\n    };\r\n    const updatedData = noiDungThucHanh.map((x) =>\r\n      x.id === ndth.id ? { ...x, ...dataRow } : x\r\n    );\r\n    await setNoiDungThucHanh(updatedData);\r\n  };\r\n  const setRowDateValue = async (e, ndth, type) => {\r\n    const dataRow = {\r\n      ...ndth,\r\n      [type]: e,\r\n    };\r\n    const updatedData = noiDungThucHanh.map((x) =>\r\n      x.id === ndth.id ? { ...x, ...dataRow } : x\r\n    );\r\n    await setNoiDungThucHanh(updatedData);\r\n  };\r\n  const removeRow = (id) => {\r\n    const formArray = noiDungThucHanh.filter((row) => row.id != id);\r\n    setNoiDungThucHanh(formArray);\r\n  };\r\n\r\n  const renderTable = (arrayTest) => {\r\n    return (\r\n      <>\r\n        {noiDungThucHanh.length > 0 ? (\r\n          <table className=\"table mt-4\">\r\n            <thead>\r\n              <tr>\r\n                <th className=\"fw-bolder px-3\" style={{ width: \"4%\" }}>\r\n                  STT\r\n                </th>\r\n                <th className=\"fw-bolder px-3\" style={{ width: \"25%\" }}>\r\n                  Họ tên\r\n                </th>\r\n                <th className=\"fw-bolder px-3\" style={{ width: \"45%\" }}>\r\n                  Nội dung ý kiến\r\n                </th>\r\n                <th className=\"fw-bolder px-3\">Thời gian</th>\r\n                <th className=\"fw-bolder px-3\"></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {arrayTest.map((ndth, index) => (\r\n                <tr key={ndth.id}>\r\n                  <td\r\n                    className=\"px-3 py-0 text-center\"\r\n                    style={{ verticalAlign: \"middle\" }}\r\n                  >\r\n                    <span className=\"fw-bold\">{ndth.id}</span>\r\n                  </td>\r\n                  <td className=\"px-3 py-0\">\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Nhập họ tên\"\r\n                      style={{\r\n                        fontSize: 14,\r\n                        fontWeight: 400,\r\n                        height: \"38px\",\r\n                        margin: \"10px 0 10px 0\",\r\n                      }}\r\n                      onChange={(e) => {\r\n                        setField(\"so_nha\", e.target.value);\r\n                      }}\r\n                      value={form?.so_nha != null ? form?.so_nha : \"\"}\r\n                    />\r\n                  </td>\r\n                  <td className=\"px-3 py-0\">\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Nhập nội dung ý kiến\"\r\n                      style={{\r\n                        fontSize: 14,\r\n                        fontWeight: 400,\r\n                        height: \"38px\",\r\n                        margin: \"10px 0 10px 0\",\r\n                      }}\r\n                      onChange={(e) => {\r\n                        setField(\"so_nha\", e.target.value);\r\n                      }}\r\n                      value={form?.so_nha != null ? form?.so_nha : \"\"}\r\n                    />\r\n                  </td>\r\n                  <td className=\"px-3 py-0\" style={{ verticalAlign: \"middle\" }}>\r\n                    <span>Thời gian ngày giờ</span>\r\n                  </td>\r\n                  <td\r\n                    className=\"px-3 py-0\"\r\n                    style={{ verticalAlign: \"middle\", textAlign: \"center\" }}\r\n                  >\r\n                    <button\r\n                      className=\"btn btn-danger px-0 py-0 mb-4\"\r\n                      style={{\r\n                        width: \"38px\",\r\n                        height: \"38px\",\r\n                        fontSize: \"12px\",\r\n                        margin: \"10px 0 10px 0\",\r\n                      }}\r\n                      onClick={() => {\r\n                        removeRow(ndth.id);\r\n                      }}\r\n                    >\r\n                      X\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : null}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={props?.show}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n      size=\"xl\"\r\n      onHide={() => props?.hide()}\r\n      centered\r\n    >\r\n      <LocalizationProvider dateAdapter={AdapterDateFns} locale={enAU}>\r\n        <Modal.Header className=\"px-4\" closeButton>\r\n          <Modal.Title className=\" ms-auto \">\r\n            <h2 className=\" text-uppercase text-center text-primary\">\r\n              Thông tin hồ sơ\r\n            </h2>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"row justify-content-center\">\r\n            {/* <ThongTinCaNhanCapNhat data={data} /> */}\r\n            <div className=\"card py-6 px-6 mx-3 my-3\">\r\n              <PhamViVaViTriChuyenMon id={data?.id} hideGhiChu={true} />\r\n            </div>\r\n            <ThongTinCapCCHN />\r\n\r\n            <div className=\"card py-6 px-6 mx-3 my-3\">\r\n              <div className=\"row pb-2\">\r\n                <div className=\"col-md-6 col-sm-6\">\r\n                  <label className=\"fw-bold fs-5\">KẾT QUẢ THẨM XÉT</label>\r\n                </div>\r\n              </div>\r\n              <div className=\"row px-2 py-2\">\r\n                <div className=\"col-6\">\r\n                  <span className=\"fw-bolder\">1. Nội dung thẩm xét, lý do</span>\r\n                  <Form>\r\n                    <Form.Control as={\"textarea\"} rows={3} />\r\n                  </Form>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <span className=\"fw-bolder\">2. Nội dung đề nghị</span>\r\n                  <Form>\r\n                    <Form.Control as={\"textarea\"} rows={3} />\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card py-6 px-6 mx-3 my-3\">\r\n              <div className=\"row pb-2\">\r\n                <div className=\"col-md-6 col-sm-6\">\r\n                  <label className=\"fw-bold fs-5\">\r\n                    Ý KIẾN CỦA LÃNH ĐẠO PHÒNG\r\n                  </label>\r\n                </div>\r\n                <div className=\"col-md-6 col-sm-6 text-end\">\r\n                  <button\r\n                    className=\"btn btn-primary ms-3 px-1 py-2 fw-normal\"\r\n                    style={{ width: \"120px\" }}\r\n                    onClick={() => {\r\n                      addRow();\r\n                    }}\r\n                  >\r\n                    THÊM MỚI\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              {renderTable(noiDungThucHanh)}\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <button\r\n                className=\"mx-1 btn btn-trolai\"\r\n                onClick={() => props?.hide()}\r\n              >\r\n                {\" \"}\r\n                ĐÓNG\r\n              </button>\r\n              <button className=\"mx-1 btn btn-primary\">Lưu</button>\r\n              <button className=\"mx-1 btn btn-success\">Duyệt</button>\r\n              <button\r\n                className=\"mx-1 btn btn-info\"\r\n                style={{\r\n                  backgroundColor: \"#0dcaf0\",\r\n                  borderColor: \"#0dcaf0\",\r\n                }}\r\n              >\r\n                Bổ sung\r\n              </button>\r\n              <button className=\"mx-1 btn btn-danger\">Từ chối</button>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </LocalizationProvider>\r\n    </Modal>\r\n  );\r\n}\r\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\popup\\PopupBoSung.js",["1734","1735"],[],"import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport api from \"../../../configs/api\";\nimport { selectRoleUser } from \"../../../redux-module/auth/authSlice\";\n\nexport default function PopupBoSung(props) {\n  //validate thêm vị trí hành nghề\n  const [form, setForm] = useState({});\n\n  const [errors, setErrors] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const roleUser = useSelector(selectRoleUser)[0].ten_en;\n  const roleUserten = useSelector(selectRoleUser)[0].ten;\n\n  const setField = (field, value) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n    if (!!errors[field])\n      setErrors({\n        ...errors,\n        [field]: null,\n      });\n  };\n\n  const findFormErrors = () => {\n    const { noi_dung_yeu_cau_bo_sung } = form;\n    const newErrors = {};\n    // name errors\n    if (!noi_dung_yeu_cau_bo_sung || noi_dung_yeu_cau_bo_sung === \"\")\n      newErrors.noi_dung_yeu_cau_bo_sung = \"Lý do bổ sung không được bỏ trống!\";\n    return newErrors;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const newErrors = findFormErrors();\n    // Conditional logic:\n    if (Object.keys(newErrors).length > 0) {\n      console.log(newErrors);\n      // We got errors!\n      setErrors(newErrors);\n      for (const property in newErrors) {\n        toast.error(newErrors[property], {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n        return;\n      }\n    } else {\n      if (props?.isMulti) {\n        handleSubmitDuyet();\n      }\n\n      // No errors! Put any logic here for the form submission!\n    }\n  };\n\n  const handleSubmitDuyet = () => {\n    const { noi_dung_yeu_cau_bo_sung } = form;\n\n    const arrayTemp = props?.selectedRow?.map((e) => e.id);\n    console.log(\"log arrayTemp\", arrayTemp);\n\n    const json = {\n      ids: arrayTemp,\n      trang_thai_ho_so: \"8\",\n      noi_dung_yeu_cau_bo_sung,\n    };\n    if (arrayTemp.length === 0) {\n      toast.error(\"Chưa có hồ sơ nào được chọn\", {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        toastId: \"success\",\n      });\n      setIsLoading(false);\n      return;\n    }\n    axios\n      .put(api.API_DUYET_MULTI_YEU_CAU_CHUNG_CHI, json)\n      .then(async ({ data }) => {\n        await toast.success(data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        props?.getList({});\n        setIsLoading(false);\n        resetState();\n        props?.onHide();\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {});\n  };\n\n  const resetState = () => {\n    setField(\"noi_dung_yeu_cau_bo_sung\", \"\");\n  };\n\n  return (\n    <Modal\n      centered\n      show={props?.show}\n      onHide={() => {\n        props?.onHide();\n        setErrors({});\n      }}\n    >\n      <Modal.Header className=\"bg-blue2\">\n        <Modal.Title className=\"text-white\" style={{ fontSize: \"22px\" }}>\n          {props?.title}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body style={{ justifyContent: \"center\" }}>\n        {props.isMulti ? (\n          <span className=\"fw-bold fs-6 mb-2\">Họ tên : {roleUserten}</span>\n        ) : null}\n        <br />\n        <br />\n        <span className=\"fw-bold fs-6 mb-2\">Yêu cầu bổ sung</span>\n\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Nhập lý do...\"\n          style={{ height: 38 }}\n          value={\n            form.noi_dung_yeu_cau_bo_sung === null\n              ? \"\"\n              : form.noi_dung_yeu_cau_bo_sung\n          }\n          onChange={(e) => {\n            setField(\"noi_dung_yeu_cau_bo_sung\", e.target.value);\n          }}\n          isInvalid={!!errors.noi_dung_yeu_cau_bo_sung}\n        />\n      </Modal.Body>\n      <Modal.Footer>\n        <div className=\"d-flex justify-content-center\">\n          <Button\n            className=\"btn btn-secondary\"\n            style={{ marginRight: 10 }}\n            onClick={() => {\n              props?.onHide();\n              resetState();\n              setErrors({});\n            }}\n          >\n            QUAY LẠI\n          </Button>\n          <Button\n            className=\"btn btn-primary\"\n            onClick={(e) => {\n              handleSubmit(e);\n            }}\n          >\n            Đồng ý\n          </Button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-thu-ly-duoc-si\\components\\ThongTinCapCCHN.js",["1736","1737","1738","1739"],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\popup\\PopupDelete.js",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-thu-ly-duoc-si\\components\\PhamViChuyenMon.js",["1740"],[],"import { Checkbox, FormControlLabel } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  commonActions,\r\n  selectListIdCheckedPVCM,\r\n  selectListIdCheckedVTHN\r\n} from \"../../../../redux-module/common/commonSlice\";\r\n\r\nexport function PhamViVaViTriChuyenMon(props) {\r\n  const dispatch = useDispatch();\r\n  const ListIdCheckedPVCM = useSelector(selectListIdCheckedPVCM);\r\n  const listIdCheckedVTHN = useSelector(selectListIdCheckedVTHN);\r\n  const [ListPVCM, setListPVCM] = useState([]);\r\n  const [ListVTHN, setListVTHN] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setListPVCM(props?.dataDMPVCM);\r\n    setListVTHN(props?.dataVTHN);\r\n    dispatch(commonActions.setListIdCheckedPVCM(props?.listCheckedDMPVCM));\r\n    dispatch(commonActions.setListIdCheckedVTHN(props?.listCheckedVTHN));\r\n  }, [props?.dataDMPVCM, props?.dataVTHN]);\r\n\r\n  const renderCheckbox = (e) => {\r\n    return (\r\n      <div className=\"row col-12\" key={e?.id}>\r\n        <span key={e?.id} className=\"font-weight-bold mb-1\">\r\n          {e?.ten}\r\n        </span>\r\n        {e.value && e.value.length > 0\r\n          ? e.value.map((a, i) => {\r\n              return (\r\n                <div className=\"col-6\" key={i}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        key={i}\r\n                        checked={listIdCheckedVTHN.includes(String(a.id))}\r\n                        onChange={() => {\r\n                          let checkExist = listIdCheckedVTHN.includes(\r\n                            String(a.id)\r\n                          );\r\n                          let listTemp = listIdCheckedVTHN;\r\n                          if (checkExist) {\r\n                            let x1 = listTemp.filter((x) => x !== String(a.id));\r\n                            dispatch(commonActions.setListIdCheckedVTHN(x1));\r\n                          } else {\r\n                            let x2 = [...listTemp, a.id];\r\n                            dispatch(commonActions.setListIdCheckedVTHN(x2));\r\n                          }\r\n                        }}\r\n                        value={a?.id || \"\"}\r\n                      />\r\n                    }\r\n                    label={a?.rut_gon}\r\n                  />\r\n                </div>\r\n              );\r\n            })\r\n          : null}\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      {props?.hidePhamVi ? null : (\r\n        <div className=\"col-12 mb-8\">\r\n          <label className=\"text-primary required fw-bold\">\r\n            Phạm vi chuyên môn\r\n          </label>\r\n          <div className=\"row\">\r\n            {ListPVCM && ListPVCM.length > 0 ? (\r\n              <>\r\n                {ListPVCM.map((e, i) => {\r\n                  return (\r\n                    <div className=\"col-6\" key={i}>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            key={`chilđren${e.id}`}\r\n                            checked={ListIdCheckedPVCM.includes(String(e.id))}\r\n                            onChange={() => {\r\n                              let checkExist = ListIdCheckedPVCM.includes(\r\n                                String(e.id)\r\n                              );\r\n                              let listTemp = ListIdCheckedPVCM;\r\n                              if (checkExist) {\r\n                                let x1 = listTemp.filter(\r\n                                  (x) => x !== String(e.id)\r\n                                );\r\n                                dispatch(\r\n                                  commonActions.setListIdCheckedPVCM(x1)\r\n                                );\r\n                              } else {\r\n                                let x2 = [...listTemp, e.id];\r\n                                dispatch(\r\n                                  commonActions.setListIdCheckedPVCM(x2)\r\n                                );\r\n                              }\r\n                            }}\r\n                            value={e?.id || \"\"}\r\n                          />\r\n                        }\r\n                        label={e?.ten}\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}\r\n                {props?.hideGhiChu ? null : (\r\n                  <>\r\n                    <span className=\"font-weight-bold my-2\">Ghi chú:</span>\r\n                    <Form.Control\r\n                      rows={3}\r\n                      as=\"textarea\"\r\n                      className=\"mx-2\"\r\n                      placeholder=\"Nhập ghi chú\"\r\n                      style={{ fontSize: 14, fontWeight: 400 }}\r\n                    />\r\n                  </>\r\n                )}\r\n              </>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {props?.hideViTri ? null : (\r\n        <div className=\"col-12 mb-4\">\r\n          <label className=\"text-primary required fw-bold mb-1\">\r\n            Vị trí hành nghề\r\n          </label>\r\n          <div className=\"row\">\r\n            {ListVTHN && ListVTHN.length > 0 ? (\r\n              <>\r\n                {ListVTHN?.map((e, i) => {\r\n                  return <div key={i}>{renderCheckbox(e)}</div>;\r\n                })}\r\n                {props?.hideGhiChu ? null : (\r\n                  <>\r\n                    <span className=\"font-weight-bold my-2\">Ghi chú:</span>\r\n                    <Form.Control\r\n                      rows={3}\r\n                      as=\"textarea\"\r\n                      className=\"mx-2\"\r\n                      placeholder=\"Nhập ghi chú\"\r\n                      style={{ fontSize: 14, fontWeight: 400 }}\r\n                    />\r\n                  </>\r\n                )}\r\n              </>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-thu-ly-duoc-si\\components\\LyDoHeader.js",["1741"],[],"export default function LyDoHeader(props) {\n  var trangThai = \"\";\n  if (props?.thongTinHoSo?.trang_thai_ho_so) {\n    trangThai = props?.thongTinHoSo?.trang_thai_ho_so;\n  } else if (props?.thongTinHoSo?.yeu_cau_cchnd?.trang_thai_ho_so) {\n    trangThai = props?.thongTinHoSo?.yeu_cau_cchnd?.trang_thai_ho_so;\n  }\n\n  const renderNoiDung = () => {\n    return (\n      <div>\n        {props?.thongTinHoSo?.yeu_cau_cchnd\n          ?.noi_dung_yeu_cau_bo_sung_chuyen_vien\n        }\n\n      </div>\n    )\n  }\n\n  switch (trangThai) {\n    case \"3\":\n      return (\n        <div\n          className=\"card-box py-4 px-6 mx-3 my-3\"\n          style={{\n            color: \"#a94442\",\n            borderColor: \"#ebccd1\",\n            backgroundColor: \"#f2dede\",\n          }}\n        >\n          <div className=\"col\">\n            <strong>Lý do từ chối: </strong>\n            <span>\n              {props?.thongTinHoSo?.yeu_cau_cchnd?.ly_do_tu_choi_chuyen_vien}\n            </span>\n          </div>\n        </div>\n      );\n    case \"7\":\n      return (\n        <div\n          className=\"card-box py-4 px-6 mx-3 my-3\"\n          style={{\n            color: \"#a94442\",\n            borderColor: \"#ebccd1\",\n            backgroundColor: \"#f2dede\",\n          }}\n        >\n          <div className=\"col\">\n            <strong>Lý do từ chối: </strong>\n            <span dangerouslySetInnerHTML={{ __html: props?.thongTinHoSo?.yeu_cau_cchnd?.ly_do_tu_choi_lanh_dao }}></span>\n          </div>\n        </div>\n      );\n    case \"5\":\n      return (\n        <div\n          className=\"card-box py-4 px-6 mx-3 my-3\"\n          style={{\n            color: \"#806027\",\n            borderColor: \"#fdebcd\",\n            backgroundColor: \"#fdf1db\",\n          }}\n        >\n          <div className=\"col\">\n            <strong>Yêu cầu bổ sung: </strong>\n            <span dangerouslySetInnerHTML={{ __html: props?.thongTinHoSo?.yeu_cau_cchnd?.noi_dung_yeu_cau_bo_sung_chuyen_vien}}></span>\n          </div>\n        </div>\n      );\n    case \"8\":\n      return (\n        <div\n          className=\"card-box py-4 px-6 mx-3 my-3\"\n          style={{\n            color: \"#806027\",\n            borderColor: \"#fdebcd\",\n            backgroundColor: \"#fdf1db\",\n          }}\n        >\n          <div className=\"col\">\n            <strong>Yêu cầu bổ sung: </strong>\n            <span dangerouslySetInnerHTML={{ __html: props?.thongTinHoSo?.yeu_cau_cchnd?.noi_dung_yeu_cau_bo_sung_lanh_dao }}></span>\n          </div>\n        </div>\n      );\n\n    default:\n      return null;\n  }\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\popup\\PopupCancel.js",["1742","1743","1744"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport api from \"../../../configs/api\";\nimport { selectRoleUser } from \"../../../redux-module/auth/authSlice\";\n\nexport default function PopupCancel(props) {\n  //validate thêm vị trí hành nghề\n  const [form, setForm] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const roleUser = useSelector(selectRoleUser)[0].ten_en;\n  const roleUserten = useSelector(selectRoleUser)[0].ten;\n  const navigate = useNavigate();\n\n  const setField = (field, value) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n    if (!!errors[field])\n      setErrors({\n        ...errors,\n        [field]: null,\n      });\n  };\n\n  const findFormErrors = () => {\n    const { ly_do_tu_choi } = form;\n    const newErrors = {};\n    // name errors\n    if (!ly_do_tu_choi || ly_do_tu_choi === \"\")\n      newErrors.ly_do_tu_choi = \"Lý do từ chối không được bỏ trống!\";\n    return newErrors;\n  };\n\n  const updateHoSoLanhDao = async () => {\n    const { ly_do_tu_choi } = form;\n    const jsonUpdate = {\n      trang_thai_ho_so: \"7\",\n      ly_do_tu_choi,\n    };\n    axios\n      .put(\n        api.API_YEU_CAU_CHUNG_CHI_HANH_NGHE + `/update_inform/${props?.data?.id}`,\n        jsonUpdate\n      )\n      .then(async ({ data }) => {\n        toast.success(data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        props?.onHide();\n        resetState();\n        props?.getList();\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {});\n  };\n\n  const updateHoSo = () => {\n    const { ly_do_tu_choi } = form;\n    const jsonUpdate = {\n      trang_thai_ho_so: \"3\",\n      ly_do_tu_choi,\n    };\n\n    axios\n      .put(api.API_YEU_CAU_CHUNG_CHI_HANH_NGHE + `/update_inform/${props?.data?.id}`,jsonUpdate)\n      .then(async ({ data }) => {\n        toast.success(data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        props?.onHide();\n        resetState();\n        props?.getList({});\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {});\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const newErrors = findFormErrors();\n    // Conditional logic:\n    if (Object.keys(newErrors).length > 0) {\n      console.log(newErrors);\n      // We got errors!\n      setErrors(newErrors);\n      for (const property in newErrors) {\n        toast.error(newErrors[property], {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n        return;\n      }\n    } else {\n      if (props?.isMulti) {\n        handleSubmitDuyet();\n      } else if (roleUser === \"lanhdao\") {\n        updateHoSoLanhDao();\n      } else {\n        updateHoSo();\n      }\n\n      // No errors! Put any logic here for the form submission!\n    }\n  };\n\n  const handleSubmitDuyet = () => {\n    const { ly_do_tu_choi } = form;\n\n    const arrayTemp = props?.selectedRow?.map((e) => e.id);\n\n    const json = {\n      ids: arrayTemp,\n      trang_thai_ho_so: \"7\",\n      ly_do_tu_choi,\n    };\n    if (arrayTemp.length === 0) {\n      toast.error(\"Chưa có hồ sơ nào được chọn\", {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        toastId: \"success\",\n      });\n      setIsLoading(false);\n      return;\n    }\n    axios\n      .put(api.API_DUYET_MULTI_YEU_CAU_CHUNG_CHI, json)\n      .then(async ({ data }) => {\n        await toast.success(data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        props?.getList({});\n        setIsLoading(false);\n        resetState();\n        props?.onHide();\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {});\n  };\n\n  const resetState = () => {\n    setField(\"ly_do_tu_choi\", \"\");\n  };\n\n  return (\n    <Modal\n      centered\n      show={props?.show}\n      onHide={() => {\n        props?.onHide();\n        setErrors({});\n      }}\n    >\n      <Modal.Header className=\"bg-blue2\">\n        <Modal.Title className=\"text-white\" style={{ fontSize: \"22px\" }}>\n          {props?.title}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body style={{ justifyContent: \"center\" }}>\n        {props.isMulti ? (\n          <span className=\"fw-bold fs-6 mb-2\">Họ tên : {roleUserten}</span>\n        ) : null}\n        <br />\n        <span className=\"fw-bold fs-6 mb-2\">Lý do từ chối</span>\n\n        <Form.Control\n          as=\"textarea\"\n          rows={3}\n          placeholder=\"Nhập lý do...\"\n          style={{ fontSize: 14, fontWeight: 500 }}\n          value={form.ly_do_tu_choi === null ? \"\" : form.ly_do_tu_choi}\n          onChange={(e) => {\n            setField(\"ly_do_tu_choi\", e.target.value);\n          }}\n          isInvalid={!!errors.ly_do_tu_choi}\n        />\n      </Modal.Body>\n      <Modal.Footer>\n        <div className=\"d-flex justify-content-center\">\n          <Button\n            className=\"btn btn-secondary\"\n            style={{ marginRight: 10 }}\n            onClick={() => {\n              props?.onHide();\n              resetState();\n              setErrors({});\n            }}\n          >\n            QUAY LẠI\n          </Button>\n          <Button\n            className=\"btn btn-primary\"\n            onClick={(e) => {\n              handleSubmit(e);\n            }}\n          >\n            Đồng ý\n          </Button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\popup\\PopupCapNhatYeuCauLienKetDS.js",["1745","1746","1747"],[],"import { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider, DesktopDatePicker } from \"@mui/x-date-pickers\";\nimport { Checkbox, FormControlLabel, TextField } from \"@mui/material\";\nimport axios from \"axios\";\nimport { enAU } from \"date-fns/locale\";\nimport { useEffect, useState } from \"react\";\nimport { Button, Form, Modal, Spinner } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { toast } from \"react-toastify\";\nimport api from \"../../../configs/api\";\nimport { GioiTinh, HinhThuc } from \"../../../data\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  commonActions,\n  selectListIdCheckedPVCM,\n  selectListIdCheckedVTHN,\n} from \"../../../redux-module/common/commonSlice\";\nimport LoadingIndicator from \"../../../components/LoadingIndicator\";\n\nexport default function PopupCapNhatYeuCauLienKetDS(props) {\n  const dispatch = useDispatch();\n  const [listVanBangChuyenMon, setListVanBangChuyenMon] = useState([]);\n  const [listNoiCapCMND, setListNoiCapCMND] = useState([]);\n  const [ListPVCM, setListPVCM] = useState([]);\n  const [ListVTHN, setListVTHN] = useState([]);\n  const [selectedGioiTinh, setSelectedGioiTinh] = useState(GioiTinh[0]);\n  const [selectedNoiCapCMND, setSelectedNoiCapCMND] = useState(null);\n  const [selectedHinhThuc, setSelectedHinhThuc] = useState({});\n  const [FileAnhChanDung, setFileAnhChanDung] = useState([]);\n  const [FileCMNDCCCD, setFileCMNDCCCD] = useState([]);\n  const [FileGiayToKhac, setFileGiayToKhac] = useState([]);\n  const [FileHinhChupCCHND, setFileHinhChupCCHND] = useState([]);\n  const [selectedVanBang, setSelectedVanBang] = useState({});\n  const ListIdCheckedPVCM = useSelector(selectListIdCheckedPVCM);\n  const listIdCheckedVTHN = useSelector(selectListIdCheckedVTHN);\n  const [isLoading, setIsLoading] = useState(false);\n  const [FileDelAnhChanDung, setFileDelAnhChanDung] = useState([]);\n  const [FileDelCMNDCCCD, setFileDelCMNDCCCD] = useState([]);\n  const [FileDelGiayToKhac, setFileDelGiayToKhac] = useState([]);\n  const [FileDelHinhChupCCHND, setFileDelHinhChupCCHND] = useState([]);\n  const [LoadingBtn, setLoadingBtn] = useState(false);\n\n  //validate ttcchn\n  const [formCCHND, setFormCCHND] = useState({});\n  const [errorsCCHND, setErrorsCCHND] = useState({});\n  const setFieldCCHND = (field, value) => {\n    setFormCCHND({\n      ...formCCHND,\n      [field]: value,\n    });\n    if (!!errors[field])\n      setErrorsCCHND({\n        ...errorsCCHND,\n        [field]: null,\n      });\n  };\n  const findFormErrors = () => {\n    const { ten } = formTTHC;\n    const newErrors = {};\n    // name errors\n    if (!ten || ten === \"\") newErrors.ten = \"Tên không được bỏ trống!\";\n\n    return newErrors;\n  };\n  //validate tthc\n  const [formTTHC, setFormTTHC] = useState({});\n  const [errors, setErrors] = useState({});\n  const setField = (field, value) => {\n    setFormTTHC({\n      ...formTTHC,\n      [field]: value,\n    });\n    if (!!errors[field])\n      setErrors({\n        ...errors,\n        [field]: null,\n      });\n  };\n  // const findFormErrorsCCHND = () => {\n  //   const { ten } = formTTHC;\n  //   const newErrors = {};\n  //   // name errors\n  //   if (!ten || ten === \"\") newErrors.ten = \"Tên không được bỏ trống!\";\n  //   return newErrors;\n  // };\n\n  useEffect(() => {\n    if (props?.show) {\n      getCATinhThanh();\n      getThongTin();\n    }\n  }, [props?.show]);\n\n\n\n  const getThongTin = async () => {\n    await setIsLoading(true);\n    axios\n      .get(api.API_THONG_TIN_YEU_CAU_DUOC_SI)\n      .then(async ({ data }) => {\n        setListVanBangChuyenMon(data?.results?.van_bang?.danh_sach_van_bang);\n        setSelectedVanBang(data?.results?.van_bang?.current_van_bang);\n        setSelectedNoiCapCMND({\n          label: data?.results?.nhan_vien?.noi_cap,\n          value: \"123\",\n        });\n        if (data?.results?.nhan_vien?.gioi_tinh != null) {\n          const gioitinh = GioiTinh.find((e) => e.value === data?.results?.nhan_vien?.gioi_tinh)\n          setSelectedGioiTinh(gioitinh)\n        } \n        \n        setFormTTHC({\n          ...data?.results?.nhan_vien,\n          ngay_sinh: data?.results?.nhan_vien?.ngay_sinh,\n          ngay_cap: data?.results?.nhan_vien?.ngay_cap,\n        });\n        setFormCCHND({\n          ...data?.results?.chung_chi,\n          ngay_cap: data?.results?.chung_chi?.ngay_cap,\n        });\n        setListPVCM(data?.results?.pvhd_chuyen_mon?.danh_sach_pvhd_chuyen_mon);\n        setListVTHN(data?.results?.vi_tri_hanh_nghe?.danh_sach_vt_hn);\n        dispatch(\n          commonActions.setListIdCheckedPVCM(\n            data?.results?.pvhd_chuyen_mon?.pvhd_chuyen_mon_checked || []\n          )\n        );\n        dispatch(\n          commonActions.setListIdCheckedVTHN(\n            data?.results?.vi_tri_hanh_nghe?.vt_hn_checked || []\n          )\n        );\n        let _selectedHinhThuc = HinhThuc.find(\n          (e) => e?.id === data?.results?.chung_chi?.hinh_thuc_thi\n        );\n        setSelectedHinhThuc(_selectedHinhThuc);\n        setFileAnhChanDung(data?.results?.dinh_kem?.dinh_kem_chan_dung || []);\n        setFileCMNDCCCD(data?.results?.dinh_kem?.dinh_kem_cmnd || []);\n        setFileHinhChupCCHND(data?.results?.dinh_kem?.dinh_kem_cchnd || []);\n        setFileGiayToKhac(data?.results?.dinh_kem?.dinh_kem_giay_to_khac || []);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const getCATinhThanh = () => {\n    axios\n      .get(api.API_CA_TINH_THANH)\n      .then(async ({ data }) => {\n        setListNoiCapCMND(data?.results);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {});\n  };\n\n  const renderCheckbox = (e) => {\n    return (\n      <div className=\"row col-12\" key={e?.id}>\n        <span key={e?.id} className=\"font-weight-bold mb-1\">\n          {e?.ten}\n        </span>\n        {e.value && e.value.length > 0\n          ? e.value.map((a, i) => {\n              return (\n                <div key={a.value} className=\"col-6\">\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        key={i}\n                        checked={listIdCheckedVTHN.includes(String(a.value))}\n                        onChange={() => {\n                          let checkExist = listIdCheckedVTHN.includes(\n                            String(a.value)\n                          );\n                          let listTemp = listIdCheckedVTHN;\n                          if (checkExist) {\n                            let x1 = listTemp.filter(\n                              (x) => x !== String(a.value)\n                            );\n                            dispatch(commonActions.setListIdCheckedVTHN(x1));\n                          } else {\n                            let x2 = [...listTemp, a.value];\n                            dispatch(commonActions.setListIdCheckedVTHN(x2));\n                          }\n                        }}\n                        value={a?.value || \"\"}\n                      />\n                    }\n                    label={a?.label}\n                  />\n                </div>\n              );\n            })\n          : null}\n      </div>\n    );\n  };\n\n  const renderChooseFile = ({\n    title,\n    name,\n    arrayFileMap,\n    setFile,\n    arrayDelFile,\n    setFileDelete,\n  }) => {\n    return (\n      <div className=\"col-6 pb-2\">\n        <div className=\"row\">\n          <div className=\"col-10\">{title}</div>\n          <div className=\"col-2\">\n            <button className=\"btn btn-primary btn-sm font-weight-bold\">\n              <UploadControl name={name}>CHỌN</UploadControl>\n            </button>\n          </div>\n          <div className=\"col-12\">\n            {arrayFileMap?.length > 0\n              ? arrayFileMap.map((e, i) => {\n                  return (\n                    <button\n                      key={i}\n                      className=\"btn ml-2 mb-2\"\n                      style={{\n                        backgroundColor: \"#e8e8e8\",\n                        padding: \"12px 10px 12px 16px\",\n                        marginRight: \"12px\",\n                      }}\n                    >\n                      <span>{e?.name}</span>\n                      <i\n                        style={{\n                          display: \"inline\",\n                          color: \"red\",\n                          marginLeft: \"8px\",\n                        }}\n                        onClick={() => {\n                          let arrFile = arrayFileMap;\n                          arrFile = arrFile.filter(\n                            (item) => item.name !== e?.name\n                          );\n                          setFile(arrFile);\n                          //set del file\n                          if (e.url) {\n                            setFileDelete(arrayDelFile.concat(e));\n                          }\n                        }}\n                        className=\"fas fa-times-circle\"\n                      ></i>\n                    </button>\n                  );\n                })\n              : null}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const UploadControl = ({\n    children,\n    value,\n    onChange,\n    disabled,\n    accept,\n    name,\n  }) => {\n    return (\n      <label htmlFor={`contained-button-${name}`} className=\"m-0 w-100\">\n        <input\n          disabled={disabled}\n          style={{ display: \"none\" }}\n          id={`contained-button-${name}`}\n          multiple\n          type=\"file\"\n          accept=\"audio/*|video/*|image/*|MIME_type\"\n          onChange={(event) => {\n            switch (name) {\n              case \"hinhchupcchnd\":\n                setFileHinhChupCCHND(\n                  FileHinhChupCCHND.concat(Object.values(event.target.files))\n                );\n                break;\n              case \"filecmndcccd\":\n                setFileCMNDCCCD(\n                  FileCMNDCCCD.concat(Object.values(event.target.files))\n                );\n                break;\n              case \"anhchandung\":\n                setFileAnhChanDung(\n                  FileAnhChanDung.concat(Object.values(event.target.files))\n                );\n                break;\n              case \"giaytokhac\":\n                setFileGiayToKhac(\n                  FileGiayToKhac.concat(Object.values(event.target.files))\n                );\n                break;\n              default:\n                break;\n            }\n          }}\n        />\n        {children}\n      </label>\n    );\n  };\n\n  const updateYeuCauLienKet = async (value) => {\n    await setLoadingBtn(true);\n    const {\n      so_giay_phep,\n      co_quan_cap,\n      noi_cap,\n      ngay_cap,\n      phu_trach_chuyen_mon,\n    } = formCCHND;\n    const configs = {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n    };\n    const data = new FormData();\n    await data.append(\"so_giay_phep\", so_giay_phep || \"\");\n    await data.append(\"co_quan_cap\", co_quan_cap || \"\");\n    await data.append(\"noi_cap\", noi_cap || \"\");\n    await data.append(\"ngay_cap\", new Date(ngay_cap).getTime());\n    await data.append(\"hinh_thuc_thi\", selectedHinhThuc?.id || null);\n    await data.append(\"phu_trach_chuyen_mon\", phu_trach_chuyen_mon || \"\");\n    await data.append(\"van_bang_chuyen_mon_id\", selectedVanBang?.value || null);\n    for (let x = 0; x < ListIdCheckedPVCM.length; x++) {\n      await data.append(\"pham_vi_chuyen_mon_ids[]\", ListIdCheckedPVCM[x]);\n    }\n    for (let x = 0; x < listIdCheckedVTHN.length; x++) {\n      await data.append(\"vi_tri_hanh_nghe_ids[]\", listIdCheckedVTHN[x]);\n    }\n    // file đính kèm\n    for (let x = 0; x < FileHinhChupCCHND.length; x++) {\n      if (!FileHinhChupCCHND[x].url) {\n        await data.append(\"dinh_kem_hinh_chup_cchnd[]\", FileHinhChupCCHND[x]);\n      }\n    }\n    for (let x = 0; x < FileAnhChanDung.length; x++) {\n      if (!FileAnhChanDung[x].url) {\n        await data.append(\"dinh_kem_anh_chan_dung[]\", FileAnhChanDung[x]);\n      }\n    }\n    for (let x = 0; x < FileCMNDCCCD.length; x++) {\n      if (!FileCMNDCCCD[x].url) {\n        await data.append(\"dinh_kem_cmnd[]\", FileCMNDCCCD[x]);\n      }\n    }\n    for (let x = 0; x < FileGiayToKhac.length; x++) {\n      if (!FileGiayToKhac[x].url) {\n        await data.append(\"dinh_kem_khac[]\", FileGiayToKhac[x]);\n      }\n    }\n    // delete files\n    for (let x = 0; x < FileDelHinhChupCCHND.length; x++) {\n      if (FileDelHinhChupCCHND[x].url) {\n        await data.append(\n          \"delete_dinh_kem_hinh_chup_cchnd[]\",\n          FileDelHinhChupCCHND[x].url\n        );\n      }\n    }\n    for (let x = 0; x < FileDelAnhChanDung.length; x++) {\n      if (FileDelAnhChanDung[x].url) {\n        await data.append(\n          \"delete_dinh_kem_anh_chan_dung[]\",\n          FileDelAnhChanDung[x].url\n        );\n      }\n    }\n    for (let x = 0; x < FileDelCMNDCCCD.length; x++) {\n      if (FileDelCMNDCCCD[x].url) {\n        await data.append(\"delete_dinh_kem_cmnd[]\", FileDelCMNDCCCD[x].url);\n      }\n    }\n    for (let x = 0; x < FileDelGiayToKhac.length; x++) {\n      if (FileDelGiayToKhac[x].url) {\n        await data.append(\"delete_dinh_kem_khac[]\", FileDelGiayToKhac[x].url);\n      }\n    }\n    axios\n      .put(\n        value == 1\n          ? api.API_LUU_YEU_CAU_LIEN_KET\n          : api.API_GUI_YEU_CAU_LIEN_KET,\n        data,\n        configs\n      )\n      .then(async ({ data }) => {\n        toast.success(data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        resetState();\n        props?.getChungChiUser();\n        props.hide();\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setLoadingBtn(false);\n      });\n  };\n\n  const handleSubmit = (e, value) => {\n    e.preventDefault();\n    updateYeuCauLienKet(value);\n  };\n\n  const resetState = () => {\n    setFileAnhChanDung([]);\n    setFileCMNDCCCD([]);\n    setFileGiayToKhac([]);\n    setFileHinhChupCCHND([]);\n    setFileDelAnhChanDung([]);\n    setFileDelCMNDCCCD([]);\n    setFileDelGiayToKhac([]);\n    setFileDelHinhChupCCHND([]);\n    dispatch(commonActions.setListIdCheckedVTHN([]));\n    dispatch(commonActions.setListIdCheckedPVCM([]));\n  };\n  return (\n    <Modal\n      backdrop=\"static\"\n      keyboard={false}\n      size=\"xl\"\n      show={props?.show}\n      onHide={() => {\n        props?.hide();\n      }}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <LocalizationProvider dateAdapter={AdapterDateFns} locale={enAU}>\n        <Modal.Header className=\"px-4\" closeButton>\n          <Modal.Title className=\" ms-auto \">\n            <h2 className=\" text-uppercase text-center text-primary\">\n              YÊU CẦU LIÊN KẾT DÀNH CHO DƯỢC SĨ ĐÃ CÓ CCHND\n            </h2>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {/* THÔNG TIN HÀNH CHÍNH */}\n          <>\n            {isLoading && <LoadingIndicator />}\n            {!isLoading && (\n              <>\n                <div className=\"row card-box\" style={{ pointerEvents: \"none\" }}>\n                  <div className=\"col-12 text-title pb-3 fw-bolder\">\n                    Thông tin hành chính\n                  </div>\n                  <div className=\"col-4 mb-4\">\n                    <span className=\"required fw-bolder text-primary\">\n                      Họ đệm\n                    </span>\n                    <Form.Control\n                      type=\"text\"\n                      className=\"mt-2 text-uppercase\"\n                      style={{ fontSize: 14, fontWeight: 400, height: \"38px\" }}\n                      onChange={(e) => {\n                        setField(\"ho\", e.target.value.toUpperCase());\n                      }}\n                      value={formTTHC?.ho != null ? formTTHC?.ho : \"\"}\n                      isInvalid={!!errors?.ho}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors?.ho}\n                    </Form.Control.Feedback>\n                  </div>\n                  <div className=\"col-2 mb-4\">\n                    <span className=\"required fw-bolder text-primary\">Tên</span>\n                    <Form.Control\n                      type=\"text\"\n                      className=\"mt-2 text-uppercase\"\n                      style={{ fontSize: 14, fontWeight: 400, height: \"38px\" }}\n                      onChange={(e) => {\n                        setField(\"ten\", e.target.value.toUpperCase());\n                      }}\n                      value={formTTHC?.ten != null ? formTTHC?.ten : \"\"}\n                      isInvalid={!!errors?.ten}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors?.ten}\n                    </Form.Control.Feedback>\n                  </div>\n                  <div className=\"col-3 mb-4\">\n                    <span className=\"required fw-bolder d-block mb-2 text-primary\">\n                      Ngày sinh\n                    </span>\n                    <DesktopDatePicker\n                      label=\" \"\n                      maxDate={new Date()}\n                      inputFormat=\"dd/MM/yyyy\"\n                      value={formTTHC?.ngay_sinh}\n                      onChange={(e) => {\n                        setField(\"ngay_sinh\", e);\n                      }}\n                      renderInput={(params) => <TextField onKeyDown={(e)=> {e.preventDefault()}} {...params} />}\n                      isInvalid={!!errors?.ngay_sinh}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors?.ngay_sinh}\n                    </Form.Control.Feedback>\n                  </div>\n                  <div className=\"col-3 mb-4\">\n                    <span className=\"required fw-bolder text-primary\">\n                      Giới tính\n                    </span>\n                    <Select\n                      key={\"id\"}\n                      className=\"mt-2\"\n                      options={GioiTinh}\n                      style={{ height: \"44px\" }}\n                      onChange={(e) => {\n                        setSelectedGioiTinh(e);\n                      }}\n                      value={selectedGioiTinh}\n                    />\n                    <span className=\"text-danger\">\n                      {!selectedGioiTinh ? \" không được bỏ trống!\" : \"\"}\n                    </span>\n                  </div>\n\n                  <div className=\"col-lg-3 col-sm-6 col-md-6 mb-4\">\n                    <span className=\"required fw-bolder text-primary\">\n                      CMND/CCCD\n                    </span>\n                    <Form.Control\n                      type=\"text\"\n                      className=\"mt-2\"\n                      style={{ fontSize: 14, fontWeight: 400, height: \"38px\" }}\n                      onChange={(e) => {\n                        setField(\"ma_cong_dan\", e.target.value);\n                      }}\n                      value={\n                        formTTHC?.ma_cong_dan != null\n                          ? formTTHC?.ma_cong_dan\n                          : \"\"\n                      }\n                      isInvalid={!!errors?.so_hieu}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors?.so_hieu}\n                    </Form.Control.Feedback>\n                  </div>\n                  <div className=\"col-lg-3 col-sm-6 col-md-6 mb-4\">\n                    <span className=\"required fw-bolder d-block mb-2 text-primary\">\n                      Ngày cấp CMND/CCCD\n                    </span>\n                    <DesktopDatePicker\n                      label=\" \"\n                      maxDate={new Date()}\n                      inputFormat=\"dd/MM/yyyy\"\n                      value={formTTHC?.ngay_cap}\n                      onChange={(e) => {\n                        setField(\"ngay_cap\", e.target.value);\n                      }}\n                      renderInput={(params) => <TextField onKeyDown={(e)=> {e.preventDefault()}} {...params} />}\n                      // isInvalid={!!errors?.ngay_cap}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {/* {errors?.ngay_cap} */}\n                    </Form.Control.Feedback>\n                  </div>\n                  <div className=\"col-lg-6 col-sm-12 col-md-12 mb-4\">\n                    <span className=\"required fw-bolder d-block mb-2 text-primary\">\n                      Nơi cấp CMND/CCCD\n                    </span>\n                    <Select\n                      key={\"id\"}\n                      className=\"mt-2\"\n                      options={listNoiCapCMND}\n                      style={{ height: \"44px\" }}\n                      onChange={(e) => {\n                        setSelectedNoiCapCMND(e);\n                      }}\n                      value={selectedNoiCapCMND}\n                    />\n                    <span className=\"text-danger\">\n                      {errors?.noi_tot_nghiep_id\n                        ? \"Nơi tốt nghiệp không được bỏ trống!\"\n                        : \"\"}\n                    </span>\n                  </div>\n                </div>\n\n                {/* THÔNG TIN CHỨNG CHỈ HÀNH NGHỀ DƯỢC */}\n                <div className=\"row card-box\">\n                  <div className=\"col-12 text-title pb-3 fw-bolder\">\n                    THÔNG TIN CHỨNG CHỈ HÀNH NGHỀ DƯỢC\n                  </div>\n                  <div className=\"col-6 mb-4\">\n                    <span className=\"required fw-bolder text-primary\">\n                      Số giấy phép\n                    </span>\n                    <Form.Control\n                      type=\"text\"\n                      className=\"mt-2\"\n                      placeholder=\"Nhập số giấy phép\"\n                      style={{\n                        fontSize: 14,\n                        fontWeight: 400,\n                        height: \"38px\",\n                        textTransform: \"uppercase\",\n                      }}\n                      onChange={(e) => {\n                        setFieldCCHND(\"so_giay_phep\", e.target.value);\n                      }}\n                      value={\n                        formCCHND?.so_giay_phep != null\n                          ? formCCHND?.so_giay_phep\n                          : \"\"\n                      }\n                      isInvalid={!!errorsCCHND?.so_giay_phep}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errorsCCHND?.so_giay_phep}\n                    </Form.Control.Feedback>\n                  </div>\n\n                  <div className=\"col-6 mb-4\">\n                    <span className=\"required fw-bolder d-block mb-2 text-primary\">\n                      Ngày cấp chứng chỉ\n                    </span>\n                    <DesktopDatePicker\n                      label=\" \"\n                      maxDate={new Date()}\n                      toolbarPlaceholder=\"tran\"\n                      inputFormat=\"dd/MM/yyyy\"\n                      value={formCCHND?.ngay_cap || null}\n                      onChange={(e) => {\n                        setFieldCCHND(\"ngay_cap\", e);\n                      }}\n                      renderInput={(params) => <TextField onKeyDown={(e)=> {e.preventDefault()}} {...params} />}\n                      // isInvalid={!!errors?.ngay_cap}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {/* {errors?.ngay_cap} */}\n                    </Form.Control.Feedback>\n                  </div>\n\n                  <div className=\"col-6 mb-4\">\n                    <span className=\"required fw-bolder text-primary\">\n                      Văn bằng chuyên môn\n                    </span>\n                    <Select\n                      key={\"id\"}\n                      className=\"mt-2\"\n                      placeholder=\"Chọn văn bằng chuyên môn\"\n                      options={listVanBangChuyenMon}\n                      style={{ height: \"44px\" }}\n                      onChange={(e) => {\n                        setSelectedVanBang(e);\n                      }}\n                      value={selectedVanBang}\n                    />\n                    <span className=\"text-danger\"></span>\n                  </div>\n\n                  <div className=\"col-6 mb-4\">\n                    <span className=\" fw-bolder text-primary\">Nơi cấp</span>\n                    <Form.Control\n                      type=\"text\"\n                      className=\"mt-2\"\n                      placeholder=\"Nhập nơi cấp\"\n                      style={{ fontSize: 14, fontWeight: 400, height: \"38px\" }}\n                      onChange={(e) => {\n                        setFieldCCHND(\"co_quan_cap\", e.target.value);\n                      }}\n                      value={\n                        formCCHND?.co_quan_cap != null\n                          ? formCCHND?.co_quan_cap\n                          : \"\"\n                      }\n\n                      // isInvalid={!!errors?.so_hieu}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {/* {errors?.so_hieu} */}\n                    </Form.Control.Feedback>\n                  </div>\n\n                  <div className=\"col-6 mb-4\">\n                    <span className=\"fw-bolder text-primary\">\n                      Phụ cấp chuyên môn tại\n                    </span>\n                    <Form.Control\n                      type=\"text\"\n                      className=\"mt-2\"\n                      placeholder=\"Nhập nơi công tác\"\n                      style={{ fontSize: 14, fontWeight: 400, height: \"38px\" }}\n                      onChange={(e) => {\n                        setFieldCCHND(\"phu_trach_chuyen_mon\", e.target.value);\n                      }}\n                      value={\n                        formCCHND?.phu_trach_chuyen_mon != null\n                          ? formCCHND?.phu_trach_chuyen_mon\n                          : \"\"\n                      }\n\n                      // isInvalid={!!errors?.so_hieu}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {/* {errors?.so_hieu} */}\n                    </Form.Control.Feedback>\n                  </div>\n\n                  <div className=\"col-6 mb-4\">\n                    <span className=\"required fw-bolder text-primary\">\n                      Hình thức\n                    </span>\n                    <Select\n                      key={\"id\"}\n                      className=\"mt-2\"\n                      options={HinhThuc}\n                      placeholder=\"Chọn hình thức\"\n                      style={{ height: \"44px\" }}\n                      onChange={(e) => {\n                        setSelectedHinhThuc(e);\n                      }}\n                      value={selectedHinhThuc}\n                    />\n                    <span className=\"text-danger\">\n                      {/* {errors?.noi_tot_nghiep_id\n                  ? \"Nơi tốt nghiệp không được bỏ trống!\"\n                  : \"\"} */}\n                    </span>\n                  </div>\n                  <div className=\"col-12 mb-4\">\n                    <span className=\"required fw-bolder text-primary\">\n                      Phạm vi chuyên môn\n                    </span>\n                    <div className=\"row\">\n                      {ListPVCM && ListPVCM.length > 0\n                        ? ListPVCM.map((e, i) => {\n                            return (\n                              <div className=\"col-6\" key={i}>\n                                <FormControlLabel\n                                  key={e.value}\n                                  control={\n                                    <Checkbox\n                                      key={`chilđren${e.value}`}\n                                      checked={ListIdCheckedPVCM.includes(\n                                        String(e.value)\n                                      )}\n                                      onChange={() => {\n                                        let checkExist =\n                                          ListIdCheckedPVCM.includes(\n                                            String(e.value)\n                                          );\n                                        let listTemp = ListIdCheckedPVCM;\n                                        if (checkExist) {\n                                          let x1 = listTemp.filter(\n                                            (x) => x !== String(e.value)\n                                          );\n                                          dispatch(\n                                            commonActions.setListIdCheckedPVCM(\n                                              x1\n                                            )\n                                          );\n                                        } else {\n                                          let x2 = [...listTemp, e.value];\n                                          dispatch(\n                                            commonActions.setListIdCheckedPVCM(\n                                              x2\n                                            )\n                                          );\n                                        }\n                                      }}\n                                      value={e?.id || \"\"}\n                                    />\n                                  }\n                                  label={e?.label}\n                                />\n                              </div>\n                            );\n                          })\n                        : null}\n                    </div>\n                  </div>\n                  <div className=\"col-12 mb-4\">\n                    <span className=\"required fw-bolder text-primary mb-2\">\n                      Vị trí hành nghề\n                    </span>\n                    <div className=\"row\">\n                      {ListVTHN && ListVTHN.length > 0\n                        ? ListVTHN?.map((e, i) => {\n                            return <div key={i}>{renderCheckbox(e)}</div>;\n                          })\n                        : null}\n                    </div>\n                  </div>\n                </div>\n\n                {/* Đính kèm */}\n                <div className=\"row card-box\">\n                  <div className=\"col-12 text-title pb-3 fw-bolder\">\n                    Đính kèm\n                  </div>\n                  {renderChooseFile({\n                    title: \"1. Hình chụp CCHND\",\n                    name: \"hinhchupcchnd\",\n                    arrayFileMap: FileHinhChupCCHND,\n                    setFile: (value) => {\n                      setFileHinhChupCCHND(value);\n                    },\n                    arrayDelFile: FileDelHinhChupCCHND,\n                    setFileDelete: (value) => {\n                      setFileDelHinhChupCCHND(value);\n                    },\n                  })}\n                  {renderChooseFile({\n                    title: \"2. Ảnh chân dung\",\n                    name: \"anhchandung\",\n                    arrayFileMap: FileAnhChanDung,\n\n                    setFile: (value) => {\n                      setFileAnhChanDung(value);\n                    },\n                    arrayDelFile: FileDelAnhChanDung,\n                    setFileDelete: (value) => {\n                      setFileDelAnhChanDung(value);\n                    },\n                  })}\n                  {renderChooseFile({\n                    title: \"3. CMND/CCCD\",\n                    name: \"filecmndcccd\",\n                    arrayFileMap: FileCMNDCCCD,\n                    setFile: (value) => {\n                      setFileCMNDCCCD(value);\n                    },\n                    arrayDelFile: FileDelCMNDCCCD,\n\n                    setFileDelete: (value) => {\n                      setFileDelCMNDCCCD(value);\n                    },\n                  })}\n                  {renderChooseFile({\n                    title: \"4. Giấy tờ chứng minh khác\",\n                    name: \"giaytokhac\",\n                    arrayFileMap: FileGiayToKhac,\n                    setFile: (value) => {\n                      setFileGiayToKhac(value);\n                    },\n                    arrayDelFile: FileDelGiayToKhac,\n                    setFileDelete: (value) => {\n                      setFileDelGiayToKhac(value);\n                    },\n                  })}\n                </div>\n              </>\n            )}\n          </>\n        </Modal.Body>\n      </LocalizationProvider>\n      <Modal.Footer style={{ width: \"100%\" }}>\n        <div className=\"row w-100\">\n          <div className=\"col-12 text-center mt-5\">\n            {LoadingBtn ? (\n              <Button variant=\"secondary\" style={{ marginRight: 10 }}>\n                <Spinner animation=\"border\" role=\"status\">\n                  <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n              </Button>\n            ) : (\n              <>\n                <button\n                  variant=\"secondary\"\n                  style={{ marginRight: 10 }}\n                  className=\"btn btn-trolai\"\n                  onClick={() => {\n                    props?.hide();\n                    resetState();\n                  }}\n                >\n                  ĐÓNG\n                </button>\n                {formCCHND?.trang_thai_ho_so !== \"2\" ? (\n                  <>\n                    <Button\n                      variant=\"success\"\n                      style={{ marginRight: 10 }}\n                      onClick={(e) => {\n                        handleSubmit(e, 1);\n                      }}\n                    >\n                      Lưu\n                    </Button>\n                    <Button\n                      variant=\"primary\"\n                      onClick={(e) => {\n                        handleSubmit(e, 2);\n                      }}\n                    >\n                      Gửi yêu cầu\n                    </Button>\n                  </>\n                ) : null}\n              </>\n            )}\n          </div>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\data\\index.js",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\popup\\PopupSoQuyetDinh.js",["1748","1749"],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\duoc-si\\bang-cap\\BangCap.js",["1750","1751","1752","1753","1754"],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\duoc-si\\lich-su-chung-chi\\LichSuChungChi.js",["1755","1756","1757","1758","1759"],[],"import axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nimport { vi } from \"date-fns/locale\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\nimport { DesktopDatePicker } from \"@mui/x-date-pickers/DesktopDatePicker\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Oval } from \"react-loader-spinner\";\r\nimport { toast } from \"react-toastify\";\r\nimport { KTCard } from \"../../../../../_metronic/helpers\";\r\nimport api from \"../../../../configs/api\";\r\n\r\nexport function LichSuChungChi(props) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [chungChiList, setChungChiList] = useState([]);\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerPage] = useState(10);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n\r\n  const empty_json = {};\r\n  const json = {\r\n    nhan_vien_id: props?.userId,\r\n  };\r\n\r\n  useEffect(() => {\r\n    getChungChiList({});\r\n  }, []);\r\n\r\n  const handlePageChange = (page) => {\r\n    setPage(page);\r\n    getChungChiList({ page_number: page });\r\n  };\r\n\r\n  const handlePerRowsChange = async (newPerPage, page) => {\r\n    await setIsLoading(true);\r\n    axios\r\n      .post(api.API_DS_CHUNG_CHI + `?page=${page}&per_page=${newPerPage}`, json)\r\n      .then(({ data }) => {\r\n        if (data?.results) {\r\n          setChungChiList(data?.results);\r\n          setPerPage(newPerPage);\r\n        }\r\n      })\r\n      .catch(() => {})\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const getChungChiList = ({ page_number = page, size = perPage }) => {\r\n    setIsLoading(true);\r\n    axios\r\n      .post(\r\n        api.API_DS_CHUNG_CHI + `?page=${page_number}&per_page=${size}`,\r\n        json\r\n      )\r\n      .then(async ({ data }) => {\r\n        setChungChiList(data?.results);\r\n        setTotalRows(data?.total);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error?.response?.data?.msg, {\r\n          position: \"top-right\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          toastId: \"error\",\r\n        });\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Ngày thay đổi\",\r\n      selector: (row) => (\r\n        <>\r\n          {row?.ngay_thay_doi ? (\r\n            <span>{moment(row?.ngay_thay_doi).format(\"DD/MM/YYYY\")}</span>\r\n          ) : (\r\n            <span></span>\r\n          )}\r\n        </>\r\n      ),\r\n      grow: 1,\r\n      style: {\r\n        cursor: \"pointer\",\r\n        color: \"#202124\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Số CCHND\",\r\n      selector: (row) => <span>{row?.chung_chi_moi}</span>,\r\n      grow: 1,\r\n      style: {\r\n        cursor: \"pointer\",\r\n        color: \"#202124\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Hoạt động\",\r\n      selector: (row) => <span>{row?.loai_thay_doi}</span>,\r\n      grow: 1,\r\n      style: {\r\n        cursor: \"pointer\",\r\n        color: \"#202124\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Nội dung\",\r\n      selector: (row) => <span>{row?.noi_dung_thay_doi}</span>,\r\n      grow: 4,\r\n      style: {\r\n        cursor: \"pointer\",\r\n        color: \"#202124\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Chuyên viên xử lý\",\r\n      selector: (row) => <span>{row?.noi_dung_thay_doi}</span>,\r\n      grow: 1,\r\n      style: {\r\n        cursor: \"pointer\",\r\n        color: \"#202124\",\r\n      },\r\n    },\r\n  ];\r\n\r\n  const paginationOptions = {\r\n    rowsPerPageText: \"Dòng hiển thị\",\r\n    rangeSeparatorText: \"trên\",\r\n  };\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: \"solid\",\r\n        borderTopWidth: \"1px\",\r\n        borderTopColor: \"#e0e0e0\",\r\n        borderBottomColor: \"#e0e0e0\",\r\n      },\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"15px\",\r\n      },\r\n    },\r\n    rows: {\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        outline: \"1px solid #FFFFFF\",\r\n      },\r\n    },\r\n    pagination: {\r\n      style: {\r\n        border: \"none\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns} locale={vi}>\r\n      <div className=\"card-box bg-white py-6 px-6 mx-3 my-3\">\r\n        <div className=\"row\" style={{ padding: \"8px 16px 8px 16px\" }}>\r\n          <div className=\"col-md-6 col-sm-6\">\r\n            <label className=\"fw-bold fs-3\">LỊCH SỬ CHỨNG CHỈ</label>\r\n          </div>\r\n        </div>\r\n\r\n        <DataTable\r\n          noDataComponent={\r\n            <img\r\n              style={{ width: \"30%\", height: \"auto\" }}\r\n              src=\"/media/nodata-found.svg\"\r\n            />\r\n          }\r\n          sortServer\r\n          progressPending={isLoading}\r\n          columns={columns}\r\n          data={chungChiList}\r\n          customStyles={customStyles}\r\n          pagination\r\n          highlightOnHover\r\n          pointerOnHover\r\n          paginationServer\r\n          paginationTotalRows={totalRows}\r\n          onChangeRowsPerPage={handlePerRowsChange}\r\n          onChangePage={handlePageChange}\r\n          paginationComponentOptions={paginationOptions}\r\n          progressComponent={\r\n            <div\r\n              style={{\r\n                padding: \"24px\",\r\n              }}\r\n            >\r\n              <Oval\r\n                arialLabel=\"loading-indicator\"\r\n                color=\"#007bff\"\r\n                height={40}\r\n              />\r\n            </div>\r\n          }\r\n        />\r\n      </div>\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\duoc-si\\lich-su-thuc-hanh\\LichSuThucHanh.js",["1760","1761","1762","1763","1764","1765","1766","1767","1768","1769"],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-thu-ly-duoc-si\\components\\DeNghi.js",["1770"],[],"import React, { useEffect } from \"react\";\nimport { HinhThuc, LoaiDeNghi } from \"../../../../data\";\n\nexport default function DeNghi(props) {\n\n  useEffect(() => {\n    console.log(props)\n  }, [props])\n\n  const getLoaiDeNghi = (value) => {\n    let data = LoaiDeNghi.find((e) => e?.id === value);\n    if (data) {\n      return data.name;\n    }\n  };\n\n  const getHinhThuc = (value) => {\n    let data = HinhThuc.find((e) => e?.id === value);\n    if (data) {\n      return data.name;\n    }\n  };\n\n  const renderNoiDung = () => {\n    let type = props?.ThuTuc?.ten;\n    switch (type) {\n      case \"Điều chỉnh nội dung Chứng chỉ hành nghề dược\":\n        return (\n          <>\n            <span className=\"text-fix\">Nội dung xin điều chỉnh: </span>\n            <span>{props?.NoiDung}</span>\n          </>\n        );\n      case \"Cấp lại chứng chỉ hành nghề dược\":\n        return (\n          <>\n            <span className=\"text-fix\">Lý do hỏng/mất: </span>\n            <span>{props?.NoiDung}</span>\n          </>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"card-box py-6 px-6 mx-3 my-3\">\n      <div className=\"fw-bold fs-5\">ĐỀ NGHỊ 1</div>\n\n      <div>\n        <span className=\"text-fix py-2\">\n          Người đề nghị cấp chứng chỉ hành nghề dược thuộc trường hợp sau:{\" \"}\n        </span>\n        <span>{getLoaiDeNghi(props?.DeNghi?.loai_de_nghi)}</span>\n      </div>\n      <div>\n        <span className=\"text-fix py-2\">\n          Đề nghị cấp chứng chỉ hành nghề dược theo hình thức:\n        </span>\n        <span> {getHinhThuc(props?.DeNghi?.hinh_thuc_thi)}</span>\n      </div>\n      <div className=\"text-fix pt-2\">\n        Đăng ký phạm vi hành nghề chuyên môn sau:\n      </div>\n      <div className=\"row\">\n        {props?.DeNghi?.danh_muc_pham_vi_hn &&\n        props?.DeNghi?.danh_muc_pham_vi_hn.length > 0\n          ? props?.DeNghi?.danh_muc_pham_vi_hn.map((e, i) => {\n              if (e?.value) {\n                return (\n                  <div key={i} className=\"col-12\">\n                    <b>{e?.ten}:</b>\n                    <div className=\"ml-1\">{e?.value}</div>\n                  </div>\n                );\n              }\n            })\n          : null}\n      </div>\n      <div className=\"col-12 px-0 pt-2\">{renderNoiDung()}</div>\n    </div>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\duoc-si\\lich-su-dao-tao\\LichSuDaoTao.js",["1771","1772","1773","1774","1775","1776"],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\popup\\PopupQuanLyNguoiDung.js",["1777","1778"],[],"import { LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\nimport axios from \"axios\";\r\nimport { enAU } from \"date-fns/locale\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport { toast } from \"react-toastify\";\r\nimport api from \"../../../configs/api\";\r\nimport { optionsDoiTuong } from \"../../../data\";\r\n\r\nexport default function PopupQuanLyNguoiDung(props) {\r\n  const [form, setForm] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedDoiTuong, setSelectedDoiTuong] = useState({});\r\n  const [display_chuc_vu, setDisplay_chuc_vu] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (props?.show) {\r\n      if (props.edit === false) {\r\n        setForm({\r\n          ho_ten: \"\",\r\n          tai_khoan: \"\",\r\n          mat_khau: \"\",\r\n          nhap_lai_mat_khau: \"\"\r\n        });\r\n        setSelectedDoiTuong(null);\r\n      } else {\r\n        setForm({\r\n          ...props?.data,\r\n        });\r\n        setDisplay_chuc_vu(props?.data?.display_chuc_vu);\r\n        selectVaiTro(props?.data?.chuc_vu)\r\n      }\r\n    }\r\n  }, [props?.show, props?.edit]);\r\n\r\n  const setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n    if (!!errors[field])\r\n      setErrors({\r\n        ...errors,\r\n        [field]: null,\r\n      });\r\n  };\r\n\r\n  const resetState = () => {\r\n    setForm({});\r\n    setErrors({});\r\n    setSelectedDoiTuong(null)\r\n  }\r\n\r\n  const selectVaiTro = (x) => {\r\n    const vaitro = optionsDoiTuong.find((e) => e.value === x);\r\n    if (vaitro) {\r\n      setSelectedDoiTuong(vaitro);\r\n    } else {\r\n      setSelectedDoiTuong(null);\r\n    }\r\n  };\r\n\r\n  const findFormErrors = () => {\r\n    const { ho_ten, tai_khoan, mat_khau, nhap_lai_mat_khau } = form;\r\n    const newErrors = {};\r\n\r\n    if (!ho_ten || ho_ten === \"\")\r\n      newErrors.ho_ten = \"Họ tên không được để trống!\";\r\n\r\n    if (props?.edit === false) {\r\n      if (!tai_khoan || tai_khoan === \"\")\r\n        newErrors.tai_khoan = \"Tài khoản không được để trống!\";\r\n      if (!selectedDoiTuong)\r\n        newErrors.doi_tuong = \"Chức vụ không được để trống!\";\r\n      if (!mat_khau || mat_khau === \"\")\r\n        newErrors.mat_khau = \"Vui lòng nhập mật khẩu hiện tại!\";\r\n      if (!nhap_lai_mat_khau || nhap_lai_mat_khau === \"\")\r\n        newErrors.nhap_lai_mat_khau = \"Vui lòng nhập xác nhận mật khẩu!\";\r\n    }\r\n    return newErrors;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newErrors = findFormErrors();\r\n    console.log(props?.edit)\r\n    if (Object.keys(newErrors).length > 0) {\r\n      setErrors(newErrors);\r\n      console.log(newErrors);\r\n    } else if (props?.edit === false) {\r\n      setIsLoading(true);\r\n      const json = {\r\n        ho_ten: form?.ho_ten,\r\n        tai_khoan: form?.tai_khoan,\r\n        mat_khau: form?.mat_khau,\r\n        chuc_vu: selectedDoiTuong?.value,\r\n      };\r\n      axios\r\n        .post(api.API_QL_NGUOI_DUNG_CREATE_LANH_DAO, json)\r\n        .then(async ({ data }) => {\r\n          toast.success(\"Thêm mới tài khoản thành công\", {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            toastId: \"success\",\r\n          });\r\n          resetState();\r\n          props?.getList();\r\n          props?.hide();\r\n        })\r\n        .catch((error) => {\r\n          toast.error(error?.response?.data?.msg, {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            toastId: \"error\",\r\n          });\r\n        })\r\n        .finally(() => {\r\n          setIsLoading(false);\r\n        });\r\n    } else if (props?.edit === true) {\r\n      setIsLoading(true);\r\n      const json = {\r\n        chuc_vu: selectedDoiTuong?.value,\r\n        mat_khau: form?.mat_khau,\r\n        ho_ten: form?.ho_ten,\r\n        display_chuc_vu: display_chuc_vu,\r\n      };\r\n      axios\r\n        .put(api.API_QL_TAI_KHOAN_NGUOI_DUNG_ID + \"/\" + props?.data?.id, json)\r\n        .then(async ({ data }) => {\r\n          toast.success(\"Cập nhật tài khoản thành công\", {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            toastId: \"success\",\r\n          });\r\n          resetState();\r\n          props?.getList();\r\n          props?.hide();\r\n        })\r\n        .catch((error) => {\r\n          toast.error(error?.response?.data?.msg, {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            toastId: \"error\",\r\n          });\r\n        })\r\n        .finally(() => {\r\n          setIsLoading(false);\r\n        });\r\n    } else {\r\n      toast.error(\"Có lỗi xảy ra, vui lòng thử lại sau.\", {\r\n        position: \"top-right\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        toastId: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const groupStyles = {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  };\r\n  const cardBox = {\r\n    backgroundColor: \"#fff\",\r\n    backgroundClip: \"border-box\",\r\n    border: \"1px solid #e7eaed\",\r\n    padding: \"1.5rem\",\r\n    marginBottom: \"24px\",\r\n    borderRadius: \"0.5rem\",\r\n  };\r\n  const formatGroupLabel = (listTemp) => (\r\n    <div style={groupStyles}>\r\n      <span>{listTemp.ten}</span>\r\n    </div>\r\n  );\r\n\r\n\r\n  return (\r\n    <Modal\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n      size=\"xl\"\r\n      show={props?.show}\r\n      onHide={() => {\r\n        props?.hide();\r\n      }}\r\n    >\r\n      <LocalizationProvider dateAdapter={AdapterDateFns} locale={enAU}>\r\n        <Modal.Header className=\"bg-blue2\" closeButton>\r\n          <Modal.Title className=\"text-white\">\r\n            {!props.edit ? \"Thêm\" : \"Cập nhật\"} người dùng\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div>\r\n            <div className=\"row\" style={cardBox}>\r\n              <div className=\" col-12 form-group\">\r\n                <div className=\" form-group mt-2\">\r\n                  <label className=\"required fw-bold fs-6 mb-2\">\r\n                    Họ và tên\r\n                  </label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Nhập họ và tên đệm\"\r\n                    style={{ height: 38 }}\r\n                    value={form.ho_ten === null ? \"\" : form.ho_ten}\r\n                    onChange={(e) => {\r\n                      setField(\"ho_ten\", e.target.value);\r\n                    }}\r\n                    className = \"text-uppercase\"\r\n                  />\r\n                  <span className=\"text-danger\">\r\n                    {errors?.ho_ten ? <span>{errors?.ho_ten}</span> : \"\"}\r\n                  </span>\r\n                </div>\r\n\r\n                <div className=\" form-group mt-2\">\r\n                  <label className=\"required fw-bold fs-6 mb-2\">\r\n                    Tên tài khoản\r\n                  </label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Tên tài khoản\"\r\n                    style={{ height: 38 }}\r\n                    value={form.tai_khoan === null ? \"\" : form.tai_khoan}\r\n                    onChange={(e) => {\r\n                      setField(\"tai_khoan\", e.target.value);\r\n                    }}\r\n                    disabled={props?.edit}\r\n                  />\r\n                  <span className=\"text-danger\">\r\n                    {errors?.tai_khoan ? <span>{errors?.tai_khoan}</span> : \"\"}\r\n                  </span>\r\n                </div>\r\n                <div className=\"form-group mt-2 mb-5\">\r\n                  <label className=\"required fw-bold fs-6 mb-2\">Chức vụ</label>\r\n                  <Select\r\n                    placeholder=\"Chọn chức vụ\"\r\n                    value={selectedDoiTuong}\r\n                    key={\"id\"}\r\n                    options={optionsDoiTuong}\r\n                    formatGroupLabel={formatGroupLabel}\r\n                    onChange={async (data) => {\r\n                      setSelectedDoiTuong(data);\r\n                    }}\r\n                  />\r\n                  <span className=\"text-danger\">\r\n                    {errors?.chuc_vu ? <span>{errors?.chuc_vu}</span> : \"\"}\r\n                  </span>\r\n                </div>\r\n                {props.edit ? (\r\n                  <div className=\"form-group mb-2\">\r\n                    <label className=\"fw-bold fs-6 mb-2\">\r\n                      Trạng thái (Hiển thị trong văn bản)\r\n                    </label>\r\n                    <div className=\"form-check form-check-solid form-switch fv-row\">\r\n                      <input\r\n                        className=\"form-check-input w-45px h-30px\"\r\n                        type=\"checkbox\"\r\n                        id=\"display_chuc_vu\"\r\n                        checked={display_chuc_vu}\r\n                        onChange={(e) => {\r\n                          setDisplay_chuc_vu(!display_chuc_vu);\r\n                        }}\r\n                      />\r\n                      <label className=\"form-check-label\"></label>\r\n                    </div>\r\n                  </div>\r\n                ) : null}\r\n\r\n                <div className=\"form-group mt-2 mb-5\">\r\n                  <label className=\"required fw-bold fs-6 mb-2\">\r\n                    Mật khẩu\r\n                  </label>\r\n                  <Form.Control\r\n                    placeholder=\"Nhập mật khẩu mới\"\r\n                    className=\"input-register\"\r\n                    style={{ fontSize: 14, fontWeight: 400 }}\r\n                    onChange={(e) => {\r\n                      setField(\"mat_khau\", e.target.value);\r\n                    }}\r\n                  />\r\n                  <span className=\"text-danger\">\r\n                    {errors?.mat_khau ? <span>{errors?.mat_khau}</span> : \"\"}\r\n                  </span>\r\n                </div>\r\n\r\n                <div className=\"form-group mt-2 mb-5\">\r\n                  <label className=\"required fw-bold fs-6 mb-2\">\r\n                    Xác nhận mật khẩu\r\n                  </label>\r\n                  <Form.Control\r\n                    placeholder=\"Nhập lại mật khẩu mới\"\r\n                    className=\"input-register\"\r\n                    style={{ fontSize: 14, fontWeight: 400 }}\r\n                    onChange={(e) => {\r\n                      setField(\"nhap_lai_mat_khau\", e.target.value);\r\n                    }}\r\n                  />\r\n                  <span className=\"text-danger\">\r\n                    {errors?.nhap_lai_mat_khau ? <span>{errors?.nhap_lai_mat_khau}</span> : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"secondary\"\r\n            onClick={() => {\r\n              props?.hide();\r\n              setErrors({});\r\n            }}\r\n          >\r\n            <i className=\"fas fa-times\"></i> Hủy\r\n          </Button>\r\n          <Button\r\n            variant=\"btn btn-primary\"\r\n            onClick={async (e) => {\r\n              handleSubmit(e);\r\n            }}\r\n          >\r\n            {props?.edit ? (\r\n              <i className=\"fa fa-pencil-alt text-white\"></i>\r\n            ) : (\r\n              <i className=\"fas fa-save text-white\"></i>\r\n            )}{\" \"}\r\n            {props?.edit ? \"CẬP NHẬT\" : \"THÊM\"}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </LocalizationProvider>\r\n    </Modal>\r\n  );\r\n}\r\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-thu-ly-duoc-si\\components\\thong-tin-ca-nhan\\ThongTinCaNhan.js",["1779","1780","1781","1782"],[],"import axios from \"axios\";\nimport moment from \"moment\";\nimport { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport api from \"../../../../../configs/api\";\nimport { GioiTinh } from \"../../../../../data\";\n\nexport default function ThongTinCaNhan(props) {\n  const { yeu_cau_cchnd } = props?.thongTinHoSo;\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [vanBang, setVanBang] = useState({});\n  const [noiTotNghiep, setNoiTotNghiep] = useState({});\n\n  const empty_json = { }\n\n  useEffect(() => {\n    getVanBangList();\n    getNoiTotNghiepList();\n  }, [])\n\n  const getVanBangList = () => {\n    axios\n      .post(api.API_LIST_VAN_BANG + `?page=${1}&per_page=${100}`, empty_json)\n      .then(async ({ data }) => {\n        if (yeu_cau_cchnd?.doi_tuong?.van_bang_chuyen_mon_id) {\n          data?.results.forEach((e) => {\n            if (e.id === yeu_cau_cchnd?.doi_tuong?.van_bang_chuyen_mon_id) {\n              setVanBang(e)\n            }\n          });\n        }\n      })\n      .catch((error) => {\n        toast.error(\"Không thể lấy danh sách văn bằng chuyên môn\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const getNoiTotNghiepList = () => {\n    axios\n      .post(\n        api.API_LIST_NOI_TOT_NGHIEP + `?page=${1}&per_page=${100}`,\n        empty_json\n      )\n      .then(async ({ data }) => {\n        if (yeu_cau_cchnd?.doi_tuong?.noi_tot_nghiep_id) {\n          data?.results.forEach((e) => {\n            if (e.id === yeu_cau_cchnd?.doi_tuong?.noi_tot_nghiep_id) {\n              setNoiTotNghiep(e)\n            }\n          });\n        }\n      })\n      .catch((error) => {\n        toast.error(\"Không thể lấy danh sách nơi tốt nghiệp\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const selectGioiTinh = (id) => {\n    let tempGioiTinh = GioiTinh.find((e) => e.value === id);\n    return tempGioiTinh.label;\n  };\n\n  return (\n    <div className=\"card-box py-6 px-6 mx-3 my-3\">\n      <div className=\"fw-bold fs-5 mb-1\">THÔNG TIN CÁ NHÂN</div>\n      <div className=\"row\">\n        <div className=\"col-3 pr-0\">\n          <span className=\"text-fix pr-1\">Họ tên: </span>\n          <span className=\"text-user-info\">\n            {yeu_cau_cchnd?.doi_tuong?.ho || \"\"}\n            {\" \"}\n            {yeu_cau_cchnd?.doi_tuong?.ten || \"\"}\n          </span>\n        </div>\n        <div className=\"col-2\">\n          <span className=\"text-fix pr-1\">Ngày sinh: </span>\n          <span className=\" text-user-info\">\n            {moment(Number(yeu_cau_cchnd?.doi_tuong?.ngay_sinh)).format(\n              \"DD/MM/YYYY\"\n            ) || \"\"}\n          </span>\n        </div>\n        <div className=\"col-2\">\n          <span className=\"text-fix pr-1\">Giới tính: </span>\n          <span className=\" text-user-info\">\n            {yeu_cau_cchnd?.doi_tuong?.gioi_tinh\n              ? selectGioiTinh(yeu_cau_cchnd?.doi_tuong?.gioi_tinh)\n              : \"\"}\n          </span>\n        </div>\n        <div className=\"col-3\">\n          <span className=\"text-fix pr-1\">Email: </span>\n          <span className=\" text-user-info\">\n            {yeu_cau_cchnd?.doi_tuong?.email || \"\"}\n          </span>\n        </div>\n        <div className=\"col-2\">\n          <span className=\"text-fix pr-1\">SĐT: </span>\n          <span className=\" text-user-info\">\n            {yeu_cau_cchnd?.doi_tuong?.dien_thoai || \"\"}\n          </span>\n        </div>        \n        <div className=\"col-12\">\n          <span className=\"text-fix pr-1\">Nơi ở hiện nay: </span>\n          <span className=\" text-user-info\">\n            {yeu_cau_cchnd?.doi_tuong?.dia_chi || \"\"}\n          </span>\n        </div>\n        <div className=\"col-12\">\n          <span className=\"text-fix pr-1\">Hộ khẩu thường trú: </span>\n          <span className=\" text-user-info\">\n            {yeu_cau_cchnd?.doi_tuong?.dia_chi_thuong_tru || \"\"}\n          </span>\n        </div>\n        <div className=\"col-3\">\n          <span className=\"text-fix pr-1\">CMND/CCCD: </span>\n          <span className=\" text-user-info\">\n            {yeu_cau_cchnd?.doi_tuong?.ma_cong_dan || \"\"}\n          </span>\n        </div>\n        <div className=\"col-2\">\n          <span className=\"text-fix pr-1\">Ngày cấp: </span>\n          <span className=\" text-user-info\">\n            {moment(Number(yeu_cau_cchnd?.doi_tuong?.ngay_cap)).format(\n              \"DD/MM/YYYY\"\n            ) || \"\"}\n          </span>\n        </div>\n        <div className=\"col-7\">\n          <span className=\"text-fix pr-1\">Nơi cấp: </span>\n          <span className=\" text-user-info\">\n            {yeu_cau_cchnd?.doi_tuong?.noi_cap || \"\"}\n          </span>\n        </div>\n\n        {/* <div style={props?.onHideLastRow ? {display: \"none\"} : {display: \"flex\"}}>\n          <div className=\"col-5\">\n            <span className=\"text-fix pr-1\">Văn bằng chuyên môn:</span>\n            <span className=\" text-user-info\">\n              {vanBang?.ten || \"\"}\n            </span>\n          </div>\n          <div className=\"col-5\">\n            <span className=\"text-fix pr-1\">Tốt nghiệp tại: </span>\n            <span className=\" text-user-info\">\n              {noiTotNghiep?.ten || \"\"}\n            </span>\n          </div>\n          <div className=\"col-2\">\n            <span className=\"text-fix pr-1\">Năm tốt nghiệp: </span>\n            <span className=\" text-user-info\">\n              {yeu_cau_cchnd?.doi_tuong?.nam_tot_nghiep || \"\"}\n            </span>\n          </div>\n        </div> */}\n        \n      </div>\n    </div>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-thu-ly-duoc-si\\components\\thong-tin-hanh-chinh\\ThongTinHanhChinhCapNhat.js",["1783","1784","1785"],[],"import { DesktopDatePicker } from \"@mui/x-date-pickers\";\r\nimport { TextField } from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport { toast } from \"react-toastify\";\r\nimport api from \"../../../../../configs/api\";\r\nimport { GioiTinh } from \"../../../../../data\";\r\n\r\nexport function ThongTinHanhChinhCapNhat() {\r\n\r\n    const [SelectedGioiTinh, setSelectedGioiTinh] = useState({});\r\n\r\n    useEffect(() => {\r\n        getTinhThanh();\r\n    }, []);\r\n\r\n    //validate thêm vị trí hành nghề\r\n    const [form, setForm] = useState({});\r\n    const [errors, setErrors] = useState({});\r\n    // location\r\n    const [ListTinhThanh, setListTinhThanh] = useState([]);\r\n    const [ListQuanHuyen, setListQuanHuyen] = useState([]);\r\n    const [ListXaPhuong, setListXaPhuong] = useState([]);\r\n\r\n    const [disQuanHuyen, setDisQuanHuyen] = useState(true);\r\n    const [disXaPhuong, setDisXaPhuong] = useState(true);\r\n\r\n    const [quanHuyenValue, setQuanHuyenValue] = useState(null);\r\n    const [xaPhuongValue, setXaPhuongValue] = useState(null);\r\n\r\n    const setField = (field, value) => {\r\n        setForm({\r\n            ...form,\r\n            [field]: value,\r\n        });\r\n        if (!!errors[field])\r\n            setErrors({\r\n                ...errors,\r\n                [field]: null,\r\n            });\r\n    };\r\n\r\n    const findFormErrors = () => {\r\n        const { ly_do_tu_choi } = form;\r\n        const newErrors = {};\r\n        // name errors\r\n        if (!ly_do_tu_choi || ly_do_tu_choi === \"\")\r\n            newErrors.ly_do_tu_choi = \"Lý do từ chối không được bỏ trống!\";\r\n        return newErrors;\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const newErrors = findFormErrors();\r\n        // Conditional logic:\r\n        if (Object.keys(newErrors).length > 0) {\r\n            console.log(newErrors);\r\n            // We got errors!\r\n            setErrors(newErrors);\r\n            for (const property in newErrors) {\r\n                toast.error(newErrors[property], {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    toastId: \"error\",\r\n                });\r\n                return;\r\n            }\r\n        } else {\r\n            // No errors! Put any logic here for the form submission!\r\n            updateHoSo();\r\n        }\r\n    };\r\n\r\n    const onChangeTinhThanh = async (values) => {\r\n        setField(\"tinh_thanh_id\", values.id);\r\n        getQuanHuyen(values.id);\r\n        setDisQuanHuyen(false);\r\n        setDisXaPhuong(true);\r\n        setQuanHuyenValue(null);\r\n        setXaPhuongValue(null);\r\n    };\r\n\r\n    const getTinhThanh = () => {\r\n        axios\r\n            .get(api.API_TINH_THANH)\r\n            .then(({ data }) => {\r\n                let resultsTinhThanh = data?.results;\r\n                resultsTinhThanh.forEach((e) => {\r\n                    e.label = e.ten;\r\n                    e.value = e.id;\r\n                });\r\n                setListTinhThanh(resultsTinhThanh);\r\n            })\r\n            .catch((error) => {\r\n                if (error.response.data) {\r\n                    toast.error(error.response.data.msg, {\r\n                        position: \"top-right\",\r\n                        autoClose: 2000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        toastId: \"success\",\r\n                    });\r\n                }\r\n            });\r\n    };\r\n    const getQuanHuyen = (value) => {\r\n        axios\r\n            .get(`${api.API_QUAN_HUYEN}/${value}?per_page=100`)\r\n            .then(({ data }) => {\r\n                let resultsQuanHuyen = data?.results;\r\n                resultsQuanHuyen.forEach((e) => {\r\n                    e.label = e.ten;\r\n                    e.value = e.id;\r\n                });\r\n                setListQuanHuyen(resultsQuanHuyen);\r\n            })\r\n            .catch((error) => {\r\n                if (error.response.data) {\r\n                    toast.error(error.response.data.msg, {\r\n                        position: \"top-right\",\r\n                        autoClose: 2000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        toastId: \"success\",\r\n                    });\r\n                }\r\n            });\r\n    };\r\n    const getXaPhuong = (value) => {\r\n        axios\r\n            .get(`${api.API_XA_PHUONG}/${value}?per_page=100`)\r\n            .then(({ data }) => {\r\n                let resultsXaPhuong = data?.results;\r\n                resultsXaPhuong.forEach((e) => {\r\n                    e.label = e.ten;\r\n                    e.value = e.id;\r\n                });\r\n                setListXaPhuong(resultsXaPhuong);\r\n            })\r\n            .catch((error) => {\r\n                if (error.response.data) {\r\n                    toast.error(error.response.data.msg, {\r\n                        position: \"top-right\",\r\n                        autoClose: 2000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        toastId: \"success\",\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    const onChangeQuanHuyen = (values) => {\r\n        setField(\"quan_huyen_id\", values.id);\r\n        getXaPhuong(values.id);\r\n        setDisXaPhuong(false);\r\n        setQuanHuyenValue(values);\r\n        setXaPhuongValue(null);\r\n    };\r\n\r\n    const onChangeXaPhuong = (values) => {\r\n        setField(\"phuong_xa_id\", values.id);\r\n        setXaPhuongValue(values);\r\n    };\r\n\r\n    const updateHoSo = () => {\r\n        const { ly_do_tu_choi } = form;\r\n        const jsonUpdate = {\r\n            ly_do_tu_choi,\r\n        };\r\n        axios\r\n            .post(api.API_YEU_CAU_CHUNG_CHI_HANH_NGHE + \"/thu_ly\", jsonUpdate)\r\n            .then(async ({ data }) => {\r\n                toast.success(\"Cập nhật thành công\", {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    toastId: \"success\",\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                toast.error(error?.data?.errors, {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    toastId: \"error\",\r\n                });\r\n            })\r\n            .finally(() => { });\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"card py-6 px-6 mx-3 my-3\">\r\n            <div className=\"col-12 text-title pb-3 fw-bolder\">\r\n                Thông tin hành chính\r\n            </div>\r\n            <div className=\"row\">\r\n                {/* Họ tên */}\r\n                <div className=\"row col-12\">\r\n                    <div className=\"col-4 mb-4\">\r\n                        <span className=\"required fw-bolder text-primary\">Họ và tên</span>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            className=\"mt-2\"\r\n                            placeholder=\"Nhập họ tên\"\r\n                            style={{ fontSize: 14, fontWeight: 400, height: \"38px\" }}\r\n                            onChange={(e) => {\r\n                                setField(\"ho\", e.target.value);\r\n                            }}\r\n                            className=\"text-uppercase\"\r\n                            value={form?.ho != null ? form?.ho : \"\"}\r\n                            isInvalid={!!errors?.ho}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {/* {errors?.so_hieu} */}\r\n                        </Form.Control.Feedback>\r\n                    </div>\r\n                    <div className=\"col-4 mb-4\">\r\n                        <span className=\"required fw-bolder d-block mb-2 text-primary\">\r\n                            Ngày sinh\r\n                        </span>\r\n                        <DesktopDatePicker\r\n                            label=\" \"\r\n                            inputFormat=\"dd/MM/yyyy\"\r\n                            // value={ngayCap}\r\n                            onChange={() => { }}\r\n                            renderInput={(params) => <TextField onKeyDown={(e)=> {e.preventDefault()}} {...params} />}\r\n                        // isInvalid={!!errors?.ngay_cap}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {/* {errors?.ngay_cap} */}\r\n                        </Form.Control.Feedback>\r\n                    </div>\r\n                    <div className=\"col-4 mb-4\">\r\n                        <span className=\"required fw-bolder text-primary\">Giới tính</span>\r\n                        <Select\r\n                            key={\"id\"}\r\n                            className=\"mt-2\"\r\n                            placeholder=\"Chọn giới tính\"\r\n                            options={GioiTinh}\r\n                            style={{ height: \"44px\" }}\r\n                            onChange={(e) => {\r\n                                setSelectedGioiTinh(e);\r\n                            }}\r\n                        // value={SelectedGioiTinh}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                {/* CMND/SDT */}\r\n                <div className=\"row col-12\">\r\n                    <div className=\"col-4 mb-4\">\r\n                        <span className=\"required fw-bolder text-primary\">CMND/CCCD</span>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            className=\"mt-2\"\r\n                            placeholder=\"Nhập số CMND/CCCD\"\r\n                            style={{ fontSize: 14, fontWeight: 400, height: \"38px\" }}\r\n                            onChange={(e) => {\r\n                                //   setField(\"so_hieu\", e.target.value);\r\n                            }}\r\n                        // value={form?.so_hieu != null ? form?.so_hieu : \"\"}\r\n                        // isInvalid={!!errors?.so_hieu}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {/* {errors?.so_hieu} */}\r\n                        </Form.Control.Feedback>\r\n                    </div>\r\n                    <div className=\"col-4 mb-4\">\r\n                        <span className=\"required fw-bolder d-block mb-2 text-primary\">\r\n                            Ngày cấp CMND/CCCD\r\n                        </span>\r\n                        <DesktopDatePicker\r\n                            label=\" \"\r\n                            inputFormat=\"dd/MM/yyyy\"\r\n                            // value={ngayCap}\r\n                            onChange={() => { }}\r\n                            renderInput={(params) => <TextField onKeyDown={(e)=> {e.preventDefault()}} {...params} />}\r\n                        // isInvalid={!!errors?.ngay_cap}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {/* {errors?.ngay_cap} */}\r\n                        </Form.Control.Feedback>\r\n                    </div>\r\n                    <div className=\"col-4 mb-4\">\r\n                        <span className=\"required fw-bolder d-block mb-2 text-primary\">\r\n                            Nơi cấp CMND/CCCD\r\n                        </span>\r\n                        <Select\r\n                            key={\"id\"}\r\n                            labelField={\"ten\"}\r\n                            placeholder=\"Chọn nơi cấp CMND/CCCD\"\r\n                            searchBy={\"tenkhongdau\"}\r\n                            options={ListTinhThanh}\r\n                            onChange={() => { }}\r\n                            closeOnSelect={true}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {/* {errors?.so_hieu} */}\r\n                        </Form.Control.Feedback>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                {/* Hộ khẩu thường trú */}\r\n                <div className=\"row col-12\">\r\n                    <div className=\"col-4 mb-4\">\r\n                        <span className=\"required fw-bolder text-primary\">Tỉnh/TP</span>\r\n                        <Select\r\n                            key={\"id\"}\r\n                            labelField={\"ten\"}\r\n                            placeholder=\"Chọn tỉnh thành\"\r\n                            searchBy={\"tenkhongdau\"}\r\n                            options={ListTinhThanh}\r\n                            onChange={(values) => onChangeTinhThanh(values)}\r\n                            closeOnSelect={true}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {/* {errors?.so_hieu} */}\r\n                        </Form.Control.Feedback>\r\n                    </div>\r\n                    <div className=\"col-4 mb-4\">\r\n                        <span className=\"required fw-bolder text-primary\">Quận huyện</span>\r\n                        <Select\r\n                            key={\"id\"}\r\n                            className={\"quan_huyen\"}\r\n                            labelField={\"ten\"}\r\n                            placeholder=\"Chọn quận huyện\"\r\n                            options={ListQuanHuyen}\r\n                            onChange={(values) => onChangeQuanHuyen(values)}\r\n                            closeOnSelect={true}\r\n                            multi={false}\r\n                            isDisabled={disQuanHuyen}\r\n                            value={quanHuyenValue}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {/* {errors?.so_hieu} */}\r\n                        </Form.Control.Feedback>\r\n                    </div>\r\n                    <div className=\"col-4 mb-4\">\r\n                        <span className=\"required fw-bolder d-block text-primary\">\r\n                            Phường/Xã\r\n                        </span>\r\n                        <Select\r\n                            key={\"id\"}\r\n                            labelField={\"ten\"}\r\n                            placeholder=\"Chọn xã phường\"\r\n                            options={ListXaPhuong}\r\n                            onChange={(values) => onChangeXaPhuong(values)}\r\n                            closeOnSelect={true}\r\n                            isDisabled={disXaPhuong}\r\n                            value={xaPhuongValue}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {/* {errors?.ngay_cap} */}\r\n                        </Form.Control.Feedback>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"row col-12\">\r\n                    <div className=\"col-4 mb-4\">\r\n                        <span className=\"required fw-bolder text-primary\">Địa chỉ</span>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            className=\"mt-2\"\r\n                            placeholder=\"Nhập địa chỉ\"\r\n                            style={{ fontSize: 14, fontWeight: 400, height: \"38px\" }}\r\n                            onChange={(e) => {\r\n                                setField(\"ho\", e.target.value);\r\n                            }}\r\n                            value={form?.ho != null ? form?.ho : \"\"}\r\n                            isInvalid={!!errors?.ho}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {/* {errors?.so_hieu} */}\r\n                        </Form.Control.Feedback>\r\n                    </div>\r\n                    <div className=\"col-4 mb-4\">\r\n                        <span className=\"fw-bolder d-block mb-2 text-primary\">\r\n                            Số điện thoại\r\n                        </span>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            className=\"mt-2\"\r\n                            placeholder=\"Nhập số điện thoại\"\r\n                            style={{ fontSize: 14, fontWeight: 400, height: \"38px\" }}\r\n                            onChange={(e) => {\r\n                                //   setField(\"so_hieu\", e.target.value);\r\n                            }}\r\n                        // value={form?.so_hieu != null ? form?.so_hieu : \"\"}\r\n\r\n                        // isInvalid={!!errors?.so_hieu}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-4 mb-4\">\r\n                        <span className=\"fw-bolder d-block mb-2 text-primary\">Email</span>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            className=\"mt-2\"\r\n                            placeholder=\"Nhập email\"\r\n                            style={{ fontSize: 14, fontWeight: 400, height: \"38px\" }}\r\n                            onChange={(e) => {\r\n                                //   setField(\"so_hieu\", e.target.value);\r\n                            }}\r\n                        // value={form?.so_hieu != null ? form?.so_hieu : \"\"}\r\n\r\n                        // isInvalid={!!errors?.so_hieu}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row col-12\">\r\n                    <div className=\"col-4 mb-4\">\r\n                        <span className=\"required fw-bolder d-block mb-2 text-primary\">\r\n                            Nơi tốt nghiệp\r\n                        </span>\r\n                        <Select\r\n                            key={\"id\"}\r\n                            labelField={\"ten\"}\r\n                            placeholder=\"Chọn nơi tốt nghiệp\"\r\n                            options={ListXaPhuong}\r\n                            onChange={() => { }}\r\n                            closeOnSelect={true}\r\n                            value={xaPhuongValue}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {/* {errors?.ngay_cap} */}\r\n                        </Form.Control.Feedback>\r\n                    </div>\r\n                    <div className=\"col-4 mb-4\">\r\n                        <span className=\"fw-bolder d-block mb-2 text-primary\">Năm tốt nghiệp</span>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            className=\"mt-2\"\r\n                            placeholder=\"Nhập năm tốt nghiệp\"\r\n                            style={{ fontSize: 14, fontWeight: 400, height: \"38px\" }}\r\n                            onChange={(e) => {\r\n                                //   setField(\"so_hieu\", e.target.value);\r\n                            }}\r\n                        // value={form?.so_hieu != null ? form?.so_hieu : \"\"}\r\n\r\n                        // isInvalid={!!errors?.so_hieu}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-sach-ho-so-thu-ly-duoc-si\\components\\thong-tin-ca-nhan\\ThongTinCaNhanCapNhat.js",["1786","1787"],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-muc\\chung-nhan-thuc-hanh-co-so\\ChungNhanThucHanhCoSo.js",["1788","1789","1790","1791","1792","1793","1794","1795"],[],"import { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider, DesktopDatePicker } from \"@mui/x-date-pickers\";\nimport TextField from \"@mui/material/TextField\";\nimport axios from \"axios\";\nimport clsx from \"clsx\";\nimport { vi } from \"date-fns/locale\";\nimport moment from \"moment\";\nimport { useEffect, useState } from \"react\";\nimport BlockUi from \"react-block-ui\";\nimport { Button, Dropdown, Form, Modal } from \"react-bootstrap\";\nimport DataTable from \"react-data-table-component\";\nimport ImageUploading from \"react-images-uploading\";\nimport { Oval, TailSpin } from \"react-loader-spinner\";\nimport { toast } from \"react-toastify\";\nimport ReactTooltip from \"react-tooltip\";\nimport { KTCard, KTSVG, useDebounce } from \"../../../../../_metronic/helpers\";\nimport api from \"../../../../configs/api\";\nimport { PopupDelete } from \"../../popup/PopupDelete\";\nimport { AiTwotoneEdit } from \"react-icons/ai\";\nimport { IoRemoveCircle } from \"react-icons/io5\";\n\nexport function ChungNhanThucHanhCoSo() {\n  const [listChungNhan, setListChungNhan] = useState([]);\n  const [perPage, setPerPage] = useState(10);\n  const [isLoading, setIsLoading] = useState(true);\n  const [totalRows, setTotalRows] = useState(0);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [id, setId] = useState(\"\");\n  const [page, setPage] = useState(1);\n\n  const [trang_thai, setTrang_thai] = useState(true);\n  const [userInfo, setUserInfo] = useState({});\n\n  //open modal delete\n  const [isvisibleDelete, setIsvisibleDelete] = useState(false);\n  const [idDelete, setIdDelete] = useState(\"\");\n  const closeModalDelete = () => setIsvisibleDelete(false);\n  const showModalDelete = () => setIsvisibleDelete(true);\n\n  //modal\n  const [showAdd, setShowAdd] = useState(false);\n  const [edit, setEdit] = useState(false);\n\n  //modal thêm danh mục\n  const closeModal = () => setShowAdd(false);\n  const showModal = () => setShowAdd(true);\n\n  const [images, setImages] = useState([]);\n\n  const [ngayCap, setNgayCap] = useState(null);\n  const [ngayKiemTra, setNgayKiemTra] = useState(null);\n  const [ngayHieuLuc, setNgayHieuLuc] = useState(null);\n  const [ngayHetHan, setNgayHetHan] = useState(null);\n\n  //search\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const debouncedSearchTerm = useDebounce(searchTerm, 1000);\n\n  const getAuth = async () => {\n    let auth = JSON.parse(await localStorage.getItem(\"kt-auth-react-v\"));\n    await setUserInfo(auth);\n  };\n\n  useEffect(\n    () => {\n      getAuth();\n      if (debouncedSearchTerm !== undefined && searchTerm !== undefined) {\n        getList({ page_number: 1, search_key: debouncedSearchTerm });\n      }\n    },\n    [debouncedSearchTerm] // Only call effect if debounced search term changes\n  );\n\n  const getList = ({ page_number = page, size = perPage, search_key = \"\" }) => {\n    setIsLoading(true);\n    axios\n      .post(\n        api.API_GET_CHUNG_NHAN_THUC_HANH_CO_SO +\n          \"_get_list\" +\n          `?page=${page_number}&per_page=${size}`,\n        {\n          search_ten: search_key,\n        }\n      )\n      .then(async ({ data }) => {\n        setListChungNhan(data?.results);\n        setTotalRows(data?.total);\n\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  //validate thêm chỉ định chuyên khoa\n  const [form, setForm] = useState({});\n  const [errors, setErrors] = useState({});\n  const setField = (field, value) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n    if (!!errors[field])\n      setErrors({\n        ...errors,\n        [field]: null,\n      });\n  };\n\n  // SET IMG DATA\n  const uploadImageChange = async (imageList) => {\n    await setImages(imageList);\n  };\n\n  const findFormErrors = () => {\n    const {\n      diachi,\n      so_giaychungnhan,\n      ngay_cap,\n      ngay_het_han,\n      ngay_hieu_luc,\n      ngay_kiemtra,\n    } = form;\n    const newErrors = {};\n    // name errors\n    if (!diachi || diachi === \"\")\n      newErrors.diachi = \"Địa chỉ không được bỏ trống!\";\n    if (!so_giaychungnhan || so_giaychungnhan === \"\")\n      newErrors.so_giaychungnhan = \"Số giấy chứng nhận không được bỏ trống!\";\n\n    if (!ngay_cap || ngay_cap === \"\")\n      newErrors.ngay_cap = \"Ngày cấp không được bỏ trống!\";\n    if (!ngay_het_han || ngay_het_han === \"\")\n      newErrors.ngay_het_han = \"Ngày hết hạn không được bỏ trống!\";\n    if (!ngay_hieu_luc || ngay_hieu_luc === \"\")\n      newErrors.ngay_hieu_luc = \"Ngày hiệu lực không được bỏ trống!\";\n    if (!ngay_kiemtra || ngay_kiemtra === \"\")\n      newErrors.ngay_kiemtra = \"Ngày kiểm tra không được bỏ trống!\";\n\n    return newErrors;\n  };\n\n  // handle api\n  const addChungNhan = async (e) => {\n    e.preventDefault();\n    // get our new errors\n    const newErrors = findFormErrors();\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n    } else {\n      setIsLoading(true);\n\n      const configs = {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      };\n\n      const {\n        so_giaychungnhan,\n        diachi,\n        ngay_cap,\n        ngay_het_han,\n        ngay_hieu_luc,\n        ngay_kiemtra,\n      } = form;\n\n      const json = {\n        so_giaychungnhan,\n        diachi,\n        trang_thai,\n        ngay_cap,\n        ngay_het_han,\n        ngay_hieu_luc,\n        ngay_kiemtra,\n      };\n      const data = new FormData();\n\n      // await setField(\"thong_tin_dieu_tri_va_tiep_nhan\", jsonTTDV);\n      await data.append(\"so_giaychungnhan\", so_giaychungnhan);\n      await data.append(\"trang_thai\", trang_thai);\n      await data.append(\"diachi\", diachi);\n      await data.append(\"ngay_cap\", ngay_cap);\n      await data.append(\"ngay_het_han\", ngay_het_han);\n      await data.append(\"ngay_hieu_luc\", ngay_hieu_luc);\n      await data.append(\"ngay_kiemtra\", ngay_kiemtra);\n      await data.append(\n        \"coso_kinhdoanh_id\",\n        \"79698fe2-d166-4377-9da6-d6ddefab8eed\"\n      );\n      await data.append(\"dinhkem_giaychungnhan\", images[0]?.file);\n\n      axios\n        .post(api.API_GET_CHUNG_NHAN_THUC_HANH_CO_SO + \"_add\", data, configs)\n        .then(async ({ data }) => {\n          resetState();\n          closeModal();\n\n          toast.success(data?.msg, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            toastId: \"success\",\n          });\n          getList(1, perPage, \"\");\n          setIsLoading(false);\n          // navigate(0);\n        })\n        .catch((error) => {\n          toast.error(error?.data?.errors, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            toastId: \"error\",\n          });\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  };\n\n  const updateChungNhan = async (e) => {\n    e.preventDefault();\n    // get our new errors\n    const newErrors = findFormErrors();\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n    } else {\n      setIsLoading(true);\n      const configs = {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      };\n\n      const {\n        so_giaychungnhan,\n        diachi,\n        ngay_cap,\n        ngay_het_han,\n        ngay_hieu_luc,\n        ngay_kiemtra,\n      } = form;\n\n      const data = new FormData();\n\n      await data.append(\"so_giaychungnhan\", so_giaychungnhan);\n      await data.append(\"trang_thai\", trang_thai);\n      await data.append(\"diachi\", diachi);\n      await data.append(\"ngay_cap\", ngay_cap);\n      await data.append(\"ngay_het_han\", ngay_het_han);\n      await data.append(\"ngay_hieu_luc\", ngay_hieu_luc);\n      await data.append(\"ngay_kiemtra\", ngay_kiemtra);\n      //   await data.append(\"coso_kinhdoanh_id\", userInfo?.userInfo?.id);\n      await data.append(\n        \"coso_kinhdoanh_id\",\n        \"d68b1270-84cf-4f74-9a37-355d61a1194b\"\n      );\n      await data.append(\"dinhkem_giaychungnhan\", images[0]?.file);\n\n      await axios\n        .put(\n          api.API_GET_CHUNG_NHAN_THUC_HANH_CO_SO + \"_update/\" + id,\n          data,\n          configs\n        )\n        .then(async ({ data }) => {\n          resetState();\n          closeModal();\n          toast.success(data?.msg, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            toastId: \"success\",\n          });\n          getList(1, perPage, \"\");\n          setIsLoading(false);\n          // navigate(0);\n        })\n        .catch((error) => {\n          toast.error(error?.data?.errors, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            toastId: \"error\",\n          });\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  };\n\n  const resetState = async () => {\n    await setPerPage(10);\n    await setTotalRows(0);\n    await setForm({\n      diachi: \"\",\n      dinhkem_giaychungnhan: \"\",\n      ngay_cap: null,\n      ngay_het_han: null,\n      ngay_hieu_luc: null,\n      ngay_kiemtra: null,\n      so_giaychungnhan: \"\",\n    });\n    await setTrang_thai(true);\n    await setErrors({});\n    await setId(\"\");\n    await setShowUpdate(false);\n    await setEdit(false);\n    await setImages(false);\n\n    await setNgayCap(null);\n    await setNgayKiemTra(null);\n    await setNgayHieuLuc(null);\n    await setNgayHetHan(null);\n\n    // getNhomChuyenKhoa();\n  };\n  // DETAIL\n  const detail = async (data) => {\n    setForm({\n      ...data,\n    });\n    setEdit(true);\n    setId(data.id);\n    setTrang_thai(data.trang_thai);\n    setImages(data?.dinhkem_giaychungnhan);\n    setShowUpdate(true);\n    // showModal();\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    await setIsLoading(true);\n    axios\n      .post(\n        api.API_GET_CHUNG_NHAN_THUC_HANH_CO_SO +\n          \"_get_list\" +\n          `?page=${page}&per_page=${newPerPage}`,\n        {\n          so_giaychungnhan: searchTerm,\n        }\n      )\n      .then(({ data }) => {\n        if (data?.results) {\n          setListChungNhan(data?.results);\n          setPerPage(newPerPage);\n        }\n      })\n      .catch(() => {})\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const deleteCK = () => {\n    axios\n      .delete(\n        api.API_GET_CHUNG_NHAN_THUC_HANH_CO_SO + \"_update/\" + idDelete,\n        {}\n      )\n      .then(async ({ data }) => {\n        await toast.success(data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        closeModalDelete();\n        resetState();\n\n        if (page === 1) {\n          getList({ page_number: 1 });\n        } else if (listChungNhan?.length == 1) {\n          getList({ page_number: page - 1 });\n        } else {\n          getList({ page_number: page });\n        }\n      })\n      .catch((error) => {\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n  const handlePageChange = async (page) => {\n    await setPage(page);\n    getList({ page_number: page });\n  };\n\n  //selected date\n  const selectedNC = async (date) => {\n    await setNgayCap(date);\n    await setField(\"ngay_cap\", moment(date).format(\"DD/MM/YYYY\"));\n  };\n  const selectedNKT = async (date) => {\n    await setNgayKiemTra(date);\n    await setField(\"ngay_kiemtra\", moment(date).format(\"DD/MM/YYYY\"));\n  };\n  const selectedHL = async (date) => {\n    await setNgayHieuLuc(date);\n    await setField(\"ngay_hieu_luc\", moment(date).format(\"DD/MM/YYYY\"));\n  };\n  const selectedHH = async (date) => {\n    await setNgayHetHan(date);\n    await setField(\"ngay_het_han\", moment(date).format(\"DD/MM/YYYY\"));\n  };\n\n  const paginationOptions = {\n    rowsPerPageText: \"Dòng hiển thị\",\n    rangeSeparatorText: \"trên\",\n  };\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: \"solid\",\n        borderTopWidth: \"1px\",\n        borderTopColor: \"#e0e0e0\",\n        borderBottomColor: \"#e0e0e0\",\n      },\n    },\n    headCells: {\n      style: {\n        color: \"#202124\",\n        fontSize: \"16px\",\n      },\n    },\n    rows: {\n      highlightOnHoverStyle: {\n        backgroundColor: \"rgb(230, 244, 244)\",\n        borderBottomColor: \"#FFFFFF\",\n        outline: \"1px solid #FFFFFF\",\n      },\n    },\n    pagination: {\n      style: {\n        border: \"none\",\n      },\n    },\n  };\n  const columns = [\n    {\n      name: \"Số giấy chứng nhận\",\n      selector: (row) => (\n        <span\n          onClick={() => {\n            detail(row);\n            showModal();\n          }}\n        >\n          {row.so_giaychungnhan}\n        </span>\n      ),\n      grow: 2,\n      style: {\n        color: \"#1251ff\",\n        fontSize: \"14px\",\n        fontWeight: 500,\n        width: 300,\n        cursor: \"pointer\",\n      },\n    },\n    {\n      name: \"Địa chỉ\",\n      selector: (row) => (\n        <span data-tip={row?.diachi}>\n          {row.diachi}\n          <ReactTooltip place=\"top\" type=\"dark\" effect=\"float\" />\n        </span>\n      ),\n      grow: 2,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n\n    {\n      name: \"Hình ảnh\",\n      grow: 2,\n\n      selector: (row) => (\n        <div className=\"text-center\">\n          {row?.dinhkem_giaychungnhan ? (\n            <img\n              className=\"mt-1 mb-2\"\n              style={{ width: \"140px\" }}\n              src={\"https://cdn-dev.yte360.com/\" + row?.dinhkem_giaychungnhan}\n              width=\"120\"\n              // onClick={() => {\n              //   openPopupImage();\n              //   setImageChoose(row);\n              // }}\n            />\n          ) : (\n            <img\n              className=\"my-2\"\n              style={{ width: \"140px\" }}\n              src=\"/media/assets/noPicture.jpeg\"\n            />\n          )}\n        </div>\n      ),\n      style: {\n        color: \"#202124\",\n        fontSize: \"14px\",\n        fontWeight: 500,\n      },\n    },\n\n    {\n      name: \"Ngày hiệu lực\",\n      selector: (row) => (\n        <span data-tip={row?.ngay_hieu_luc}>\n          {row.ngay_hieu_luc}\n          <ReactTooltip place=\"top\" type=\"dark\" effect=\"float\" />\n        </span>\n      ),\n      grow: 2,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n\n    {\n      name: \"Ngày hết hạn\",\n      selector: (row) => (\n        <span data-tip={row?.ngay_het_han}>\n          {row.ngay_het_han}\n          <ReactTooltip place=\"top\" type=\"dark\" effect=\"float\" />\n        </span>\n      ),\n      grow: 2,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Ngày kiểm tra\",\n      selector: (row) => (\n        <span data-tip={row?.ngay_kiemtra}>\n          {row.ngay_kiemtra}\n          <ReactTooltip place=\"top\" type=\"dark\" effect=\"float\" />\n        </span>\n      ),\n      grow: 2,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n\n    {\n      name: \"Trang thái\",\n      selector: (row) => <span>{row.trang_thai}</span>,\n      grow: 3,\n      cell: (row) => (\n        <td>\n          {row.trang_thai ? (\n            <span className=\"badge badge-light-success fs-7 fw-bold\">\n              Hoạt động\n            </span>\n          ) : (\n            <span className=\"badge badge-light-dark fs-7 fw-bold\">\n              Không hoạt động\n            </span>\n          )}\n        </td>\n      ),\n    },\n\n    {\n      name: \"Thao tác\",\n      grow: 1,\n\n      cell: (row) => (\n        <Dropdown style={{ width: \"100%\", textAlign: \"center\" }}>\n          <Dropdown.Toggle variant=\"link\">\n            <i\n              className=\"fas fa-bars text-primary\"\n              style={{ marginLeft: \"3px\", marginRight: \"-3px\" }}\n            ></i>\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu style={{ position: \"absolute\", overflow: \"auto\" }}>\n            <Dropdown.Item\n              className=\"py-5\"\n              onClick={async () => {\n                await detail(row);\n                await showModal();\n              }}\n            >\n              <AiTwotoneEdit style={{ marginRight: 5 }} color=\"blue\" />\n              Cập nhật tin\n            </Dropdown.Item>\n            <Dropdown.Item\n              className=\"py-5\"\n              onClick={async () => {\n                await setIdDelete(row?.id);\n                showModalDelete();\n              }}\n            >\n              <IoRemoveCircle style={{ marginRight: 5 }} color=\"red\" />\n              Xoá tin\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      ),\n    },\n  ];\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.toggleSelected,\n      style: {\n        backgroundColor: \"#f5f5f5\",\n        userSelect: \"none\",\n      },\n    },\n  ];\n  const cardBox = {\n    backgroundColor: \"#fff\",\n    backgroundClip: \"border-box\",\n    border: \"1px solid #e7eaed\",\n    padding: \"1.5rem\",\n    marginBottom: \"24px\",\n    borderRadius: \"0.5rem\",\n  };\n  return (\n    <KTCard>\n      <LocalizationProvider dateAdapter={AdapterDateFns} locale={vi}>\n        <div className=\"page\">\n          <div className=\"container-fluid\">\n            <div className=\"fv-row mb-7 mt-6\">\n              {/* begin::Label */}\n              <label className=\"fw-bold fs-6 mb-2\">Số giấy chứng nhận</label>\n              {/* end::Label */}\n\n              {/* begin::Input */}\n\n              <div className=\"row\">\n                <div className=\"col-md-6 col-sm-6\">\n                  <input\n                    placeholder=\"Nhập số giấy chứng nhận tìm kiếm...\"\n                    type=\"text\"\n                    name=\"name\"\n                    className={clsx(\n                      \"form-control form-control-solid mb-3 mb-lg-0\"\n                    )}\n                    autoComplete=\"off\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                  />\n                </div>\n\n                <div\n                  className=\"col-md-6 col-sm-6 d-flex justify-content-end\"\n                  data-kt-user-table-toolbar=\"base\"\n                >\n                  <button type=\"button\" className=\"btn btn-light-primary me-3\">\n                    <KTSVG\n                      path=\"/media/icons/duotune/arrows/arr078.svg\"\n                      className=\"svg-icon-2\"\n                    />\n                    Export\n                  </button>\n\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                    onClick={async () => {\n                      //   resetState();\n\n                      await setForm({\n                        diachi: \"\",\n                        dinhkem_giaychungnhan: \"\",\n                        ngay_cap: null,\n                        ngay_het_han: null,\n                        ngay_hieu_luc: null,\n                        ngay_kiemtra: null,\n                        so_giaychungnhan: \"\",\n                      });\n                      await setTrang_thai(true);\n                      await setErrors({});\n                      await setId(\"\");\n                      await setShowUpdate(false);\n                      await setEdit(false);\n                      await setImages(false);\n\n                      await setNgayCap(null);\n                      await setNgayKiemTra(null);\n                      await setNgayHieuLuc(null);\n                      await setNgayHetHan(null);\n\n                      showModal();\n                    }}\n                  >\n                    <KTSVG\n                      path=\"/media/icons/duotune/arrows/arr075.svg\"\n                      className=\"svg-icon-2\"\n                    />\n                    Thêm\n                  </button>\n                </div>\n              </div>\n\n              {/* end::Input */}\n            </div>\n            <BlockUi\n              tag=\"div\"\n              // blocking={!isLoading}\n              loader={\n                <TailSpin\n                  arialLabel=\"loading-indicator\"\n                  height={60}\n                  width={60}\n                  strokeWidth={2}\n                  strokeWidthSecondary={1}\n                  color=\"blue\"\n                  secondaryColor=\"blue\"\n                  wrapperclassName={\"d-inline-flex\"}\n                />\n              }\n            >\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <div className=\"\" style={cardBox}>\n                    <DataTable\n                      noDataComponent={\n                        <img\n                          style={{ width: \"30%\", height: \"auto\" }}\n                          src=\"/media/nodata-found.svg\"\n                        />\n                      }\n                      sortServer\n                      progressPending={isLoading}\n                      columns={columns}\n                      data={listChungNhan}\n                      customStyles={customStyles}\n                      pagination\n                      highlightOnHover\n                      pointerOnHover\n                      paginationServer\n                      paginationTotalRows={totalRows}\n                      onChangeRowsPerPage={handlePerRowsChange}\n                      onChangePage={handlePageChange}\n                      paginationComponentOptions={paginationOptions}\n                      conditionalRowStyles={conditionalRowStyles}\n                      progressComponent={\n                        <div\n                          style={{\n                            padding: \"24px\",\n                          }}\n                        >\n                          <Oval\n                            arialLabel=\"loading-indicator\"\n                            color=\"#007bff\"\n                            height={40}\n                          />\n                        </div>\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {/* Modal add question */}\n\n              <Modal\n                backdrop=\"static\"\n                keyboard={false}\n                show={showAdd}\n                onHide={closeModal}\n                centered\n                size=\"lg\"\n              >\n                <Modal.Header closeButton className=\"bg-blue2\">\n                  <Modal.Title className=\"text-white\">\n                    {!edit ? \"Thêm\" : \"Cập nhật\"} chứng nhận thực hành cơ sở\n                  </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                  <div className=\"form-group mb-5\">\n                    <label className=\"required fw-bold fs-6 mb-2\">\n                      Số giấy chứng nhận\n                    </label>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Nhập số giấy chứng nhận\"\n                      style={{ fontSize: 14, fontWeight: 500 }}\n                      value={\n                        form.so_giaychungnhan === null\n                          ? \"\"\n                          : form.so_giaychungnhan\n                      }\n                      onChange={async (e) => {\n                        await setField(\"so_giaychungnhan\", e.target.value);\n                      }}\n                      isInvalid={!!errors.so_giaychungnhan}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.so_giaychungnhan}\n                    </Form.Control.Feedback>\n                  </div>\n\n                  <div className=\"form-group mb-5\">\n                    <label className=\"required fw-bold fs-6 mb-2\">\n                      Địa chỉ\n                    </label>\n                    <Form.Control\n                      as=\"textarea\"\n                      rows={2}\n                      placeholder=\"Nhập địa chỉ\"\n                      style={{ fontSize: 14, fontWeight: 500 }}\n                      value={form.diachi === null ? \"\" : form.diachi}\n                      onChange={(e) => {\n                        setField(\"diachi\", e.target.value);\n                      }}\n                      isInvalid={!!errors.diachi}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.diachi}\n                    </Form.Control.Feedback>\n                  </div>\n\n                  <div className=\"form-group mb-5 row\">\n                    <div className=\"col-md-6 row\">\n                      <label className=\"required fw-bold fs-6\">Ngày cấp</label>\n\n                      <div className=\"row\">\n                        <div>\n                          <DesktopDatePicker\n                            inputFormat=\"dd/MM/yyyy\"\n                            value={ngayCap}\n                            onChange={selectedNC}\n                            maxDate={new Date()}\n                            renderInput={(params) => (\n                              <TextField variant=\"standard\" {...params} />\n                            )}\n                          />\n                        </div>\n\n                        {errors?.ngay_cap !== null ? (\n                          <span\n                            className=\"text-danger mt-2\"\n                            style={{ fontSize: 12 }}\n                          >\n                            {errors?.ngay_cap}\n                          </span>\n                        ) : null}\n                      </div>\n                    </div>\n                    <div className=\"col-md-6 row\">\n                      <label className=\"required fw-bold fs-6\">\n                        Ngày kiểm tra\n                      </label>\n                      <div className=\"row\">\n                        <div>\n                          <DesktopDatePicker\n                            inputFormat=\"dd/MM/yyyy\"\n                            value={ngayKiemTra}\n                            onChange={selectedNKT}\n                            maxDate={new Date()}\n                            renderInput={(params) => (\n                              <TextField variant=\"standard\" {...params} />\n                            )}\n                          />\n                        </div>\n\n                        {errors?.ngay_kiemtra !== null ? (\n                          <span\n                            className=\"text-danger mt-2\"\n                            style={{ fontSize: 12 }}\n                          >\n                            {errors?.ngay_kiemtra}\n                          </span>\n                        ) : null}\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"form-group mb-5 row\">\n                    <div className=\"col-md-6 row\">\n                      <label className=\"required fw-bold fs-6\">\n                        Ngày hiệu lực\n                      </label>\n                      <div className=\"row\">\n                        <div>\n                          <DesktopDatePicker\n                            inputFormat=\"dd/MM/yyyy\"\n                            value={ngayHieuLuc}\n                            onChange={selectedHL}\n                            maxDate={new Date()}\n                            renderInput={(params) => (\n                              <TextField variant=\"standard\" {...params} />\n                            )}\n                          />\n                        </div>\n\n                        {errors?.ngay_hieu_luc !== null ? (\n                          <span\n                            className=\"text-danger mt-2\"\n                            style={{ fontSize: 12 }}\n                          >\n                            {errors?.ngay_hieu_luc}\n                          </span>\n                        ) : null}\n                      </div>\n                    </div>\n                    <div className=\"col-md-6 row\">\n                      <label className=\"required fw-bold fs-6\">\n                        Ngày hết hạn\n                      </label>\n                      <div className=\"row\">\n                        <div>\n                          <DesktopDatePicker\n                            inputFormat=\"dd/MM/yyyy\"\n                            value={ngayHetHan}\n                            onChange={selectedHH}\n                            maxDate={new Date()}\n                            renderInput={(params) => (\n                              <TextField variant=\"standard\" {...params} />\n                            )}\n                          />\n                        </div>\n                        {errors?.ngay_het_han !== null ? (\n                          <span\n                            className=\"text-danger mt-2\"\n                            style={{ fontSize: 12 }}\n                          >\n                            {errors?.ngay_het_han}\n                          </span>\n                        ) : null}\n                      </div>\n                    </div>\n                  </div>\n\n                  <ImageUploading\n                    value={images}\n                    onChange={uploadImageChange}\n                    maxNumber={1}\n                    dataURLKey=\"data_url\"\n                  >\n                    {({\n                      imageList,\n                      onImageUpload,\n                      onImageRemove,\n                      isDragging,\n                      dragProps,\n                    }) => (\n                      <div className=\"form-group mb-2\">\n                        <label className=\"required fw-bold fs-6 mb-2\">\n                          Đính kèm giấy chứng nhận\n                        </label>\n                        <div>\n                          {edit ? (\n                            form?.dinhkem_giaychungnhan !== null ? (\n                              <div className=\"form-group\">\n                                <button\n                                  style={{ fontSize: \"14px\" }}\n                                  className=\"btn btn-danger\"\n                                  onClick={() => {\n                                    setField(\"dinhkem_giaychungnhan\", null);\n                                    setImages([]);\n                                  }}\n                                >\n                                  Xóa\n                                </button>\n                                <div>\n                                  <img\n                                    className=\"mr-2 my-2\"\n                                    src={\n                                      \"https://cdn-dev.yte360.com/\" +\n                                      form?.dinhkem_giaychungnhan\n                                    }\n                                    alt=\"\"\n                                    width=\"140\"\n                                  />\n                                </div>\n                              </div>\n                            ) : (\n                              <div>\n                                <button\n                                  className=\"btn bg-blue2 text-white\"\n                                  style={\n                                    (isDragging ? { color: \"red\" } : null,\n                                    { fontSize: \"14px\" })\n                                  }\n                                  onClick={onImageUpload}\n                                  {...dragProps}\n                                >\n                                  Kéo và thả ở đây\n                                </button>\n                                <div>\n                                  <img\n                                    src=\"/media/assets/noPicture.jpeg\"\n                                    className=\"my-2\"\n                                    style={{ width: \"140px\" }}\n                                    alt=\"\"\n                                  />\n                                </div>\n                              </div>\n                            )\n                          ) : (\n                            <div>\n                              {imageList.length >= 1 || images?.length >= 1 ? (\n                                imageList.map((image, index) => (\n                                  <div key={index} className=\"form-group\">\n                                    <button\n                                      style={{ fontSize: \"14px\" }}\n                                      className=\"btn btn-danger\"\n                                      onClick={() => onImageRemove(index)}\n                                    >\n                                      Xóa\n                                    </button>\n                                    <div>\n                                      <img\n                                        className=\"mr-2 my-2\"\n                                        src={image.data_url}\n                                        alt=\"\"\n                                        width=\"140\"\n                                      />\n                                    </div>\n                                  </div>\n                                ))\n                              ) : (\n                                <div>\n                                  <button\n                                    className=\"btn bg-blue2 text-white\"\n                                    style={\n                                      (isDragging ? { color: \"red\" } : null,\n                                      { fontSize: \"14px\" })\n                                    }\n                                    onClick={onImageUpload}\n                                    {...dragProps}\n                                  >\n                                    Kéo và thả ở đây\n                                  </button>\n                                  <div>\n                                    <img\n                                      src=\"/media/assets/noPicture.jpeg\"\n                                      className=\"my-2\"\n                                      style={{ width: \"140px\" }}\n                                      alt=\"\"\n                                    />\n                                  </div>\n                                </div>\n                              )}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    )}\n                  </ImageUploading>\n\n                  <div className=\"form-group mb-2\">\n                    <label className=\"fw-bold fs-6 mb-2\">Trạng thái</label>\n                    <div className=\"form-check form-check-solid form-switch fv-row\">\n                      <input\n                        className=\"form-check-input w-45px h-30px\"\n                        type=\"checkbox\"\n                        id=\"trang_thai\"\n                        // value={trang_thai}\n                        checked={trang_thai}\n                        onChange={(e) => {\n                          setTrang_thai(!trang_thai);\n                        }}\n                      />\n                      <label className=\"form-check-label\"></label>\n                    </div>\n                  </div>\n                </Modal.Body>\n                <Modal.Footer>\n                  <Button variant=\"secondary\" onClick={closeModal}>\n                    <i className=\"fas fa-times\"></i> Huỷ\n                  </Button>\n                  <Button\n                    variant=\"btn text-white bg-blue2\"\n                    onClick={async (e) => {\n                      !edit ? addChungNhan(e) : updateChungNhan(e);\n                    }}\n                  >\n                    {edit ? (\n                      <i className=\"fa fa-pencil-alt text-white\"></i>\n                    ) : (\n                      <i className=\"fas fa-save text-white\"></i>\n                    )}{\" \"}\n                    {edit ? \"Cập nhật\" : \"Thêm\"}\n                  </Button>\n                </Modal.Footer>\n              </Modal>\n\n              <PopupDelete\n                title=\"Bạn có đồng ý xóa hội đồng này không?\"\n                show={isvisibleDelete}\n                onHide={closeModalDelete}\n                onDetele={() => {\n                  deleteCK();\n                }}\n              />\n            </BlockUi>\n          </div>\n        </div>\n      </LocalizationProvider>\n    </KTCard>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-muc\\noi-tot-nghiep\\NoiTotNghiep.js",["1796","1797","1798","1799","1800","1801","1802","1803","1804","1805"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport BlockUi from \"react-block-ui\";\nimport { Form } from \"react-bootstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Oval } from \"react-loader-spinner\";\nimport clsx from \"clsx\";\nimport { toast } from \"react-toastify\";\nimport { KTCard, KTSVG, useDebounce } from \"../../../../../_metronic/helpers\";\nimport Status from \"../../../../components/Status\";\nimport api from \"../../../../configs/api\";\nimport { PopupDelete } from \"../../popup/PopupDelete\";\n\nexport function NoiTotNghiep() {\n  const [listNoiTotNghiep, setListNoiTotNghiep] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n  const [page, setPage] = useState(1);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [stt, setStt] = useState(0);\n  const [trang_thai, setTrang_thai] = useState(true);\n\n  //open modal delete\n  const [isvisibleDelete, setIsvisibleDelete] = useState(false);\n  const [idDelete, setIdDelete] = useState(\"\");\n  const closeModalDelete = () => setIsvisibleDelete(false);\n  const showModalDelete = () => setIsvisibleDelete(true);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const debouncedSearchTerm = useDebounce(searchTerm, 1000);\n\n  useEffect(\n    () => {\n      if (debouncedSearchTerm !== undefined && searchTerm !== undefined) {\n        getList(1, perPage, debouncedSearchTerm);\n      }\n    },\n    [debouncedSearchTerm] // Only call effect if debounced search term changes\n  );\n\n  const getList = ({\n    page_number = page,\n    size = perPage,\n    search_key = searchTerm,\n  }) => {\n    setIsLoading(true);\n    axios\n      .post(\n        api.API_LIST_NOI_TOT_NGHIEP_GET_LIST +\n          `?page=${page_number}&per_page=${size}`,\n        { search_ten: search_key }\n      )\n      .then(async ({ data }) => {\n        setListNoiTotNghiep(data?.results);\n        setTotalRows(data?.total);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  //validate thêm nơi tốt nghiệp\n  const [form, setForm] = useState({});\n  const [errors, setErrors] = useState({});\n  const setField = (field, value) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n    if (!!errors[field])\n      setErrors({\n        ...errors,\n        [field]: null,\n      });\n  };\n  const findFormErrors = () => {\n    const { ten, chi_tiet, loai, stt, ten_in } = form;\n    const newErrors = {};\n    // name errors\n    if (!ten || ten === \"\") newErrors.ten = \"Tên không được bỏ trống!\";\n\n    return newErrors;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // get our new errors\n    const newErrors = findFormErrors();\n    // Conditional logic:\n    if (Object.keys(newErrors).length > 0) {\n      console.log(newErrors);\n      // We got errors!\n      setErrors(newErrors);\n    } else {\n      // No errors! Put any logic here for the form submission!\n      showUpdate ? updateNoiTotNghiep() : addNoiTotNghiep();\n    }\n  };\n\n  // handle api\n  const addNoiTotNghiep = async () => {\n    setIsLoading(true);\n    const { ten } = form;\n    const json = {\n      ten,\n      trang_thai: trang_thai,\n    };\n    await axios\n      .post(api.API_NOI_TOT_NGHIEP + \"_add\", json)\n      .then(async ({ data }) => {\n        resetState();\n        toast.success(\"Tạo nơi tốt nghiệp thành công\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        getList({});\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        console.log(\"error\", error?.response);\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const updateNoiTotNghiep = async () => {\n    setIsLoading(true);\n    const { ten, id } = form;\n    const json = {\n      ten,\n      trang_thai: trang_thai,\n    };\n    await axios\n      .put(api.API_NOI_TOT_NGHIEP + \"/\" + id, json)\n      .then(async ({ data }) => {\n        resetState();\n        toast.success(\"Cập nhật nơi tốt nghiệp thành công\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        getList({});\n      })\n      .catch((error) => {\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const resetState = () => {\n    setForm({\n      ten: \"\",\n    });\n    setErrors({});\n    setShowUpdate(false);\n    const updatedData = listNoiTotNghiep?.map((item) => {\n      return {\n        ...item,\n        toggleSelected: false,\n      };\n    });\n    setData(updatedData);\n  };\n\n  // DETAIL\n  const detail = async (data) => {\n    setForm({\n      ...data,\n    });\n    setTrang_thai(data?.trang_thai);\n    setShowUpdate(true);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    await setIsLoading(true);\n    axios\n      .post(\n        api.API_LIST_NOI_TOT_NGHIEP + `?page=${page}&per_page=${newPerPage}`,\n        {}\n      )\n      .then(({ data }) => {\n        if (data?.results) {\n          setListNoiTotNghiep(data?.results);\n          setPerPage(newPerPage);\n        }\n      })\n      .catch(() => {})\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const deleteNTN = () => {\n    axios\n      .delete(api.API_NOI_TOT_NGHIEP + \"/\" + idDelete)\n      .then(async ({ data }) => {\n        await toast.success(data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        closeModalDelete();\n        resetState();\n        if (page == 1) {\n          getList({ page_number: 1 });\n        } else if (listNoiTotNghiep?.length == 1) {\n          getList({ page_number: page - 1 });\n        } else {\n          getList({ page_number: page });\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\", error);\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n  const handlePageChange = (page) => {\n    setPage(page);\n    getList({ page_number: page });\n  };\n\n  //đổi màu khi selected\n  const [data, setData] = useState(listNoiTotNghiep);\n  useEffect(() => {\n    setData(listNoiTotNghiep);\n  }, [listNoiTotNghiep]);\n\n  const handleRowClicked = (row) => {\n    setErrors({});\n    const updatedData = listNoiTotNghiep?.map((item) => {\n      if (row.id !== item.id) {\n        return item;\n      }\n      return {\n        ...item,\n        toggleSelected: !item.toggleSelected,\n      };\n    });\n    setData(updatedData);\n  };\n\n  const paginationOptions = {\n    rowsPerPageText: \"Dòng hiển thị\",\n    rangeSeparatorText: \"trên\",\n  };\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: \"solid\",\n        borderTopWidth: \"1px\",\n        borderTopColor: \"#e0e0e0\",\n        borderBottomColor: \"#e0e0e0\",\n      },\n    },\n    headCells: {\n      style: {\n        color: \"#202124\",\n        fontSize: \"16px\",\n      },\n    },\n    rows: {\n      highlightOnHoverStyle: {\n        backgroundColor: \"rgb(230, 244, 244)\",\n        borderBottomColor: \"#FFFFFF\",\n        outline: \"1px solid #FFFFFF\",\n      },\n    },\n    pagination: {\n      style: {\n        border: \"none\",\n      },\n    },\n  };\n  const columns = [\n    {\n      name: \"Mã\",\n      selector: (row) => (\n        <div\n          onClick={() => {\n            detail(row);\n            handleRowClicked(row);\n          }}\n        >\n          <span>{row.ma_noi_tot_nghiep}</span>\n        </div>\n      ),\n      style: {\n        color: \"#1251ff\",\n        fontSize: \"14px\",\n        fontWeight: 500,\n        width: 300,\n        cursor: \"pointer\",\n      },\n      grow: 3,\n    },\n    {\n      name: \"Tên\",\n      selector: (row) => <span>{row.ten}</span>,\n      grow: 8,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Trang thái\",\n      selector: (row) => <span>{row.trang_thai}</span>,\n      grow: 3,\n      cell: (row) => (\n        <td>\n          <Status status={row.trang_thai} />\n        </td>\n      ),\n    },\n    {\n      name: \"Thao tác\",\n      grow: 2,\n      cell: (row) => (\n        <div className=\"container my-3\">\n          <button\n            onClick={async () => {\n              await setIdDelete(row?.id);\n              showModalDelete();\n            }}\n            className=\"btn btn-icon btn-bg-light btn-color-danger btn-sm\"\n          >\n            <KTSVG\n              path=\"/media/icons/duotune/general/gen027.svg\"\n              className=\"svg-icon-3\"\n            />\n          </button>\n        </div>\n      ),\n    },\n  ];\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.toggleSelected,\n      style: {\n        backgroundColor: \"#f5f5f5\",\n        userSelect: \"none\",\n      },\n    },\n  ];\n  const cardBox = {\n    backgroundColor: \"#fff\",\n    backgroundClip: \"border-box\",\n    border: \"1px solid #e7eaed\",\n    padding: \"1.5rem\",\n    marginBottom: \"24px\",\n    borderRadius: \"0.5rem\",\n  };\n  return (\n    <KTCard>\n      <div className=\"page\">\n        <div className=\"container-fluid\">\n          <div className=\"fv-row mb-7 mt-6\">\n            {/* begin::Label */}\n            <label className=\"required fw-bold fs-6 mb-2\">\n              Tên nơi tốt nghiệp\n            </label>\n            {/* end::Label */}\n\n            {/* begin::Input */}\n            <div className=\"col-md-6\">\n              <input\n                placeholder=\"Nhập tên tìm kiếm...\"\n                type=\"text\"\n                name=\"name\"\n                className={clsx(\"form-control form-control-solid mb-3 mb-lg-0\")}\n                autoComplete=\"off\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n            </div>\n\n            {/* end::Input */}\n          </div>\n          <BlockUi tag=\"div\" blocking={isLoading} centerY={true} centerX={true}>\n            <div className=\"row\">\n              <div className=\"col-md-8\">\n                <div className=\"\" style={cardBox}>\n                  <DataTable\n                    noDataComponent={\n                      <img\n                        style={{ width: \"30%\", height: \"auto\" }}\n                        src=\"/media/nodata-found.svg\"\n                      />\n                    }\n                    sortServer\n                    progressPending={isLoading}\n                    columns={columns}\n                    data={data}\n                    customStyles={customStyles}\n                    pagination\n                    highlightOnHover\n                    pointerOnHover\n                    paginationServer\n                    paginationTotalRows={totalRows}\n                    onChangeRowsPerPage={handlePerRowsChange}\n                    onChangePage={handlePageChange}\n                    paginationComponentOptions={paginationOptions}\n                    conditionalRowStyles={conditionalRowStyles}\n                    // onRowClicked={(data) => {\n                    //   detail(data);\n                    //   handleRowClicked(data);\n                    // }}\n                    progressComponent={\n                      <div\n                        style={{\n                          padding: \"24px\",\n                        }}\n                      >\n                        <Oval\n                          arialLabel=\"loading-indicator\"\n                          color=\"#007bff\"\n                          height={40}\n                        />\n                      </div>\n                    }\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-4\">\n                <div className=\"\" style={cardBox}>\n                  <div className=\"\">\n                    <p className=\"font-weight-bold\">\n                      {showUpdate\n                        ? \"Cập nhật nơi tốt nghiệp\"\n                        : \"Tạo mới nơi tốt nghiệp\"}\n                    </p>\n                  </div>\n\n                  {showUpdate ? (\n                    <div className=\"row mt-3\">\n                      <div className=\"col-4\">\n                        <p className=\"font-weight-bold\">Mã</p>\n                      </div>\n                      <div className=\"col-8\">\n                        <Form.Control\n                          disabled={true}\n                          type=\"text\"\n                          placeholder=\"Nhập tên mã nơi tốt nghiệp\"\n                          style={{ fontSize: 14, fontWeight: 500 }}\n                          value={\n                            form.ma_noi_tot_nghiep === null\n                              ? \"\"\n                              : form.ma_noi_tot_nghiep\n                          }\n                        />\n                      </div>\n                    </div>\n                  ) : null}\n\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      <p className=\"font-weight-bold\">\n                        Tên<span className=\"text-danger\">*</span>\n                      </p>\n                    </div>\n                    <div className=\"col-8\">\n                      <Form.Control\n                        as=\"textarea\"\n                        rows={3}\n                        placeholder=\"Nhập tên mã nơi tốt nghiệp\"\n                        style={{ fontSize: 14, fontWeight: 500 }}\n                        value={form.ten === null ? \"\" : form.ten}\n                        onChange={(e) => {\n                          setField(\"ten\", e.target.value);\n                        }}\n                        isInvalid={!!errors.ten}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.ten}\n                      </Form.Control.Feedback>\n                    </div>\n                  </div>\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      <label className=\"fw-bold fs-6 mb-2\">Trạng thái</label>\n                    </div>\n                    <div className=\"col-8\">\n                      <div className=\"form-check form-check-solid form-switch fv-row\">\n                        <input\n                          className=\"form-check-input w-45px h-30px\"\n                          type=\"checkbox\"\n                          id=\"trang_thai\"\n                          checked={trang_thai}\n                          onChange={(e) => {\n                            setTrang_thai(!trang_thai);\n                          }}\n                        />\n                        <label className=\"form-check-label\"></label>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      {showUpdate ? (\n                        <button\n                          className=\"btn text-white bg-blue2\"\n                          style={{ fontSize: \".9rem\" }}\n                          onClick={() => resetState()}\n                        >\n                          <i className=\"fas fa-sync-alt text-white\"></i> Làm mới\n                        </button>\n                      ) : null}\n                    </div>\n\n                    <div className=\"col-8\">\n                      <button\n                        className=\"btn text-white bg-blue2 mr-3\"\n                        style={{ fontSize: \".9rem\" }}\n                        onClick={(e) => {\n                          handleSubmit(e);\n                        }}\n                      >\n                        {showUpdate ? (\n                          <i className=\"fa fa-pencil-alt text-white\"></i>\n                        ) : (\n                          <i className=\"fas fa-save text-white\"></i>\n                        )}{\" \"}\n                        {showUpdate ? \"Cập nhật\" : \"Tạo nơi tốt nghiệp\"}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <PopupDelete\n              title=\"Bạn có đồng ý xóa nơi tốt nghiệp này không?\"\n              show={isvisibleDelete}\n              onHide={closeModalDelete}\n              onDetele={() => {\n                deleteNTN();\n              }}\n            />\n          </BlockUi>\n        </div>\n      </div>\n    </KTCard>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-muc\\loai-hinh-kinh-doanh\\LoaiHinhKinhDoanh.js",["1806","1807","1808","1809","1810","1811","1812","1813","1814","1815","1816","1817"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport BlockUi from \"react-block-ui\";\nimport { Form } from \"react-bootstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Oval } from \"react-loader-spinner\";\n// import { useDispatch } from \"react-redux\";\nimport clsx from \"clsx\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { KTCard, KTSVG, useDebounce } from \"../../../../../_metronic/helpers\";\nimport Status from \"../../../../components/Status\";\nimport api from \"../../../../configs/api\";\nimport { PopupDelete } from \"../../popup/PopupDelete\";\n\nexport function LoaiHinhKinhDoanh() {\n  const navigate = useNavigate();\n  const [listLoaiHinhKinhDoanh, setListLoaiHinhKinhDoanh] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n  const [page, setPage] = useState(1);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [stt, setStt] = useState(0);\n  const [trang_thai, setTrang_thai] = useState(true);\n\n  //open modal delete\n  const [isvisibleDelete, setIsvisibleDelete] = useState(false);\n  const [idDelete, setIdDelete] = useState(\"\");\n  const closeModalDelete = () => setIsvisibleDelete(false);\n  const showModalDelete = () => setIsvisibleDelete(true);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const debouncedSearchTerm = useDebounce(searchTerm, 1000);\n\n  useEffect(\n    () => {\n      if (debouncedSearchTerm !== undefined && searchTerm !== undefined) {\n        getList(1, perPage, debouncedSearchTerm);\n      }\n    },\n    [debouncedSearchTerm] // Only call effect if debounced search term changes\n  );\n\n  const getList = ({\n    page_number = page,\n    size = perPage,\n    search_key = searchTerm,\n  }) => {\n    setIsLoading(true);\n    axios\n      .post(\n        api.API_LIST_LOAI_HINH_KINH_DOANH +\n          `?page=${page_number}&per_page=${size}`,\n        {\n          search_ten: search_key,\n        }\n      )\n      .then(async ({ data }) => {\n        setListLoaiHinhKinhDoanh(data?.results);\n        setTotalRows(data?.total);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  //validate thêm loại hình kinh doanh\n  const [form, setForm] = useState({});\n  const [errors, setErrors] = useState({});\n  const setField = (field, value) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n    if (!!errors[field])\n      setErrors({\n        ...errors,\n        [field]: null,\n      });\n  };\n  const findFormErrors = () => {\n    const { ten, ma_loai_hinh, chi_tiet, loai, stt, ten_in } = form;\n    const newErrors = {};\n    // name errors\n    if (!ten || ten === \"\") newErrors.ten = \"Tên không được bỏ trống!\";\n    // if (!ma_loai_hinh || ma_loai_hinh === \"\")\n    //   newErrors.ma_loai_hinh = \"Mã không được bỏ trống!\";\n    return newErrors;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // get our new errors\n    const newErrors = findFormErrors();\n    // Conditional logic:\n    if (Object.keys(newErrors).length > 0) {\n      console.log(newErrors);\n      // We got errors!\n      setErrors(newErrors);\n    } else {\n      // No errors! Put any logic here for the form submission!\n      showUpdate ? updateLoaiHinhKinhDoanh() : addLoaiHinhKinhDoanh();\n    }\n  };\n\n  // handle api\n  const addLoaiHinhKinhDoanh = async () => {\n    setIsLoading(true);\n    const { ten } = form;\n    const json = {\n      ten,\n      trang_thai: trang_thai,\n    };\n    await axios\n      .post(api.API_LOAI_HINH_KINH_DOANH, json)\n      .then(async ({ data }) => {\n        resetState();\n        toast.success(\"Tạo loại hình kinh doanh thành công\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        getList({});\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        console.log(\"error\", error?.response);\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const updateLoaiHinhKinhDoanh = async () => {\n    setIsLoading(true);\n    const { ten, id } = form;\n    const json = {\n      ten,\n      trang_thai: trang_thai,\n    };\n    await axios\n      .put(api.API_LOAI_HINH_KINH_DOANH + \"/\" + id, json)\n      .then(async ({ data }) => {\n        resetState();\n        toast.success(\"Cập nhật loại hình kinh doanh thành công\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        getList({});\n      })\n      .catch((error) => {\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const resetState = () => {\n    setForm({\n      ma_loai_hinh: \"\",\n      ten: \"\",\n    });\n    setErrors({});\n    setShowUpdate(false);\n    const updatedData = listLoaiHinhKinhDoanh?.map((item) => {\n      return {\n        ...item,\n        toggleSelected: false,\n      };\n    });\n    setData(updatedData);\n  };\n\n  // DETAIL\n  const detail = async (data) => {\n    setForm({\n      ...data,\n    });\n    setTrang_thai(data?.trang_thai);\n    setShowUpdate(true);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    await setIsLoading(true);\n    axios\n      .post(\n        api.API_LIST_LOAI_HINH_KINH_DOANH +\n          `?page=${page}&per_page=${newPerPage}`,\n        {}\n      )\n      .then(({ data }) => {\n        if (data?.results) {\n          setListLoaiHinhKinhDoanh(data?.results);\n          setPerPage(newPerPage);\n        }\n      })\n      .catch(() => {})\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const deleteVBCM = () => {\n    axios\n      .delete(api.API_LOAI_HINH_KINH_DOANH + \"/\" + idDelete)\n      .then(async ({ data }) => {\n        await toast.success(data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        closeModalDelete();\n        resetState();\n        if (page == 1) {\n          getList({ page_number: 1 });\n        } else if (listLoaiHinhKinhDoanh?.length == 1) {\n          getList({ page_number: page - 1 });\n        } else {\n          getList({ page_number: page });\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\", error);\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n  const handlePageChange = (page) => {\n    setPage(page);\n    getList({ page_number: page });\n  };\n\n  //đổi màu khi selected\n  const [data, setData] = useState(listLoaiHinhKinhDoanh);\n  useEffect(() => {\n    setData(listLoaiHinhKinhDoanh);\n  }, [listLoaiHinhKinhDoanh]);\n\n  const handleRowClicked = (row) => {\n    setErrors({});\n    const updatedData = listLoaiHinhKinhDoanh?.map((item) => {\n      if (row.id !== item.id) {\n        return item;\n      }\n      return {\n        ...item,\n        toggleSelected: !item.toggleSelected,\n      };\n    });\n    setData(updatedData);\n  };\n  const formatGroupLabel = (listTemp) => (\n    <div style={groupStyles}>\n      <span>{listTemp.ten}</span>\n    </div>\n  );\n  const handleChangeLocation = (evt) => {\n    const temp = evt.target.validity.valid ? evt.target.value : stt;\n    setStt(temp);\n  };\n  const groupStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  };\n  const paginationOptions = {\n    rowsPerPageText: \"Dòng hiển thị\",\n    rangeSeparatorText: \"trên\",\n  };\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: \"solid\",\n        borderTopWidth: \"1px\",\n        borderTopColor: \"#e0e0e0\",\n        borderBottomColor: \"#e0e0e0\",\n      },\n    },\n    headCells: {\n      style: {\n        color: \"#202124\",\n        fontSize: \"16px\",\n      },\n    },\n    rows: {\n      highlightOnHoverStyle: {\n        backgroundColor: \"rgb(230, 244, 244)\",\n        borderBottomColor: \"#FFFFFF\",\n        outline: \"1px solid #FFFFFF\",\n      },\n    },\n    pagination: {\n      style: {\n        border: \"none\",\n      },\n    },\n  };\n  const columns = [\n    {\n      name: \"Mã\",\n      selector: (row) => (\n        <div\n          onClick={() => {\n            detail(row);\n            handleRowClicked(row);\n          }}\n        >\n          <span>{row.ma_loai_hinh}</span>\n        </div>\n      ),\n      style: {\n        color: \"#1251ff\",\n        fontSize: \"14px\",\n        fontWeight: 500,\n        width: 300,\n        cursor: \"pointer\",\n      },\n      grow: 3,\n    },\n    {\n      name: \"Tên\",\n      selector: (row) => <span>{row.ten}</span>,\n      grow: 8,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Trang thái\",\n      selector: (row) => <span>{row.trang_thai}</span>,\n      grow: 3,\n      cell: (row) => (\n        <td>\n          <Status status={row.trang_thai} />\n        </td>\n      ),\n    },\n    {\n      name: \"Thao tác\",\n      grow: 2,\n      cell: (row) => (\n        <div className=\"container my-3\">\n          <button\n            onClick={async () => {\n              await setIdDelete(row?.id);\n              showModalDelete();\n            }}\n            className=\"btn btn-icon btn-bg-light btn-color-danger btn-sm\"\n          >\n            <KTSVG\n              path=\"/media/icons/duotune/general/gen027.svg\"\n              className=\"svg-icon-3\"\n            />\n          </button>\n        </div>\n      ),\n    },\n  ];\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.toggleSelected,\n      style: {\n        backgroundColor: \"#f5f5f5\",\n        userSelect: \"none\",\n      },\n    },\n  ];\n  const cardBox = {\n    backgroundColor: \"#fff\",\n    backgroundClip: \"border-box\",\n    border: \"1px solid #e7eaed\",\n    padding: \"1.5rem\",\n    marginBottom: \"24px\",\n    borderRadius: \"0.5rem\",\n  };\n  return (\n    <KTCard>\n      <div className=\"page\">\n        <div className=\"container-fluid\">\n          <div className=\"fv-row mb-7 mt-6\">\n            {/* begin::Label */}\n            <label className=\"required fw-bold fs-6 mb-2\">\n              Tên loại hình kinh doanh\n            </label>\n            {/* end::Label */}\n\n            {/* begin::Input */}\n            <div className=\"col-md-6\">\n              <input\n                placeholder=\"Nhập tên tìm kiếm...\"\n                type=\"text\"\n                name=\"name\"\n                className={clsx(\"form-control form-control-solid mb-3 mb-lg-0\")}\n                autoComplete=\"off\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n            </div>\n\n            {/* end::Input */}\n          </div>\n          <BlockUi tag=\"div\" blocking={isLoading} centerY={true} centerX={true}>\n            <div className=\"row\">\n              <div className=\"col-md-8\">\n                <div className=\"\" style={cardBox}>\n                  <DataTable\n                    noDataComponent={\n                      <img\n                        style={{ width: \"30%\", height: \"auto\" }}\n                        src=\"/media/nodata-found.svg\"\n                      />\n                    }\n                    sortServer\n                    progressPending={isLoading}\n                    columns={columns}\n                    data={data}\n                    customStyles={customStyles}\n                    pagination\n                    highlightOnHover\n                    pointerOnHover\n                    paginationServer\n                    paginationTotalRows={totalRows}\n                    onChangeRowsPerPage={handlePerRowsChange}\n                    onChangePage={handlePageChange}\n                    paginationComponentOptions={paginationOptions}\n                    conditionalRowStyles={conditionalRowStyles}\n                    // onRowClicked={(data) => {\n                    //   detail(data);\n                    //   handleRowClicked(data);\n                    // }}\n                    progressComponent={\n                      <div\n                        style={{\n                          padding: \"24px\",\n                        }}\n                      >\n                        <Oval\n                          arialLabel=\"loading-indicator\"\n                          color=\"#007bff\"\n                          height={40}\n                        />\n                      </div>\n                    }\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-4\">\n                <div className=\"\" style={cardBox}>\n                  <div className=\"\">\n                    <p className=\"font-weight-bold\">\n                      {showUpdate\n                        ? \"Cập nhật loại hình kinh doanh\"\n                        : \"Tạo mới loại hình kinh doanh\"}\n                    </p>\n                  </div>\n\n                  {showUpdate ? (\n                    <div className=\"row mt-3\">\n                      <div className=\"col-4\">\n                        <p className=\"font-weight-bold\">Mã</p>\n                      </div>\n                      <div className=\"col-8\">\n                        <Form.Control\n                          disabled={true}\n                          type=\"text\"\n                          placeholder=\"Nhập tên mã hoạt động kinh doanh\"\n                          style={{ fontSize: 14, fontWeight: 500 }}\n                          value={\n                            form.ma_loai_hinh === null ? \"\" : form.ma_loai_hinh\n                          }\n                        />\n                      </div>\n                    </div>\n                  ) : null}\n\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      <p className=\"font-weight-bold\">\n                        Tên<span className=\"text-danger\">*</span>\n                      </p>\n                    </div>\n                    <div className=\"col-8\">\n                      <Form.Control\n                        as=\"textarea\"\n                        rows={3}\n                        placeholder=\"Nhập tên mã hoạt động kinh doanh\"\n                        style={{ fontSize: 14, fontWeight: 500 }}\n                        value={form.ten === null ? \"\" : form.ten}\n                        onChange={(e) => {\n                          setField(\"ten\", e.target.value);\n                        }}\n                        isInvalid={!!errors.ten}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.ten}\n                      </Form.Control.Feedback>\n                    </div>\n                  </div>\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      <label className=\"fw-bold fs-6 mb-2\">Trạng thái</label>\n                    </div>\n                    <div className=\"col-8\">\n                      <div className=\"form-check form-check-solid form-switch fv-row\">\n                        <input\n                          className=\"form-check-input w-45px h-30px\"\n                          type=\"checkbox\"\n                          id=\"trang_thai\"\n                          checked={trang_thai}\n                          onChange={(e) => {\n                            setTrang_thai(!trang_thai);\n                          }}\n                        />\n                        <label className=\"form-check-label\"></label>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      {showUpdate ? (\n                        <button\n                          className=\"btn text-white bg-blue2\"\n                          style={{ fontSize: \".9rem\" }}\n                          onClick={() => resetState()}\n                        >\n                          <i className=\"fas fa-sync-alt text-white\"></i> Làm mới\n                        </button>\n                      ) : null}\n                    </div>\n\n                    <div className=\"col-8\">\n                      <button\n                        className=\"btn text-white bg-blue2 mr-3\"\n                        style={{ fontSize: \".9rem\" }}\n                        onClick={(e) => {\n                          handleSubmit(e);\n                        }}\n                      >\n                        {showUpdate ? (\n                          <i className=\"fa fa-pencil-alt text-white\"></i>\n                        ) : (\n                          <i className=\"fas fa-save text-white\"></i>\n                        )}{\" \"}\n                        {showUpdate ? \"Cập nhật\" : \"Tạo loại hình kinh doanh\"}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <PopupDelete\n              title=\"Bạn có đồng ý xóa loại hình kinh doanh này không?\"\n              show={isvisibleDelete}\n              onHide={closeModalDelete}\n              onDetele={() => {\n                deleteVBCM();\n              }}\n            />\n          </BlockUi>\n        </div>\n      </div>\n    </KTCard>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\components\\Content.tsx",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\components\\ScrollTop.tsx",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\components\\toolbar\\Toolbar.tsx",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\components\\header\\HeaderWrapper.tsx",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\yeu-cau-lien-ket\\yeu-cau-lien-ket-duoc-si\\ChiTietYeuCauLienKetDuocSi.js",["1818"],["1819"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport api from \"../../../../configs/api\";\n\nLoadingOverlay.propTypes = undefined;\nexport default function ChiTietYeuCauLienKetDuocSi() {\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  const [FileAnhChanDung, setFileAnhChanDung] = useState([]);\n  const [FileCMNDCCCD, setFileCMNDCCCD] = useState([]);\n  const [FileGiayToKhac, setFileGiayToKhac] = useState([]);\n  const [FileHinhChupCCHND, setFileHinhChupCCHND] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [DataThongTinChungChi, setDataThongTinChungChi] = useState({});\n  const [DataThongTinCungCap, setDataThongTinCungCap] = useState({});\n  const [diff, setDiff] = useState([]);\n\n  useEffect(() => {\n    if (id) {\n      getThongTinYCLK(id);\n    }\n  }, []);\n\n  const duyetLienKet = async (e) => {\n    e.preventDefault();\n    await setIsLoading(true);\n    axios\n      .put(api.API_DUYET_LIEN_KET + \"/\" + id)\n      .then(async ({ data }) => {\n        navigate(-1);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const tuChoiLienKet = async (e) => {\n    e.preventDefault();\n    await setIsLoading(true);\n    axios\n      .put(api.API_TU_CHOI_LIEN_KET + \"/\" + id)\n      .then(async ({ data }) => {\n        navigate(-1);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const getThongTinYCLK = async (id) => {\n    await setIsLoading(true);\n    axios\n      .post(api.API_THONG_TIN_CHUNG_CHI_VA_SO_SANH + \"/\" + id)\n      .then(async ({ data }) => {\n        const { results } = data;\n        setDataThongTinChungChi(results?.thong_tin_chung_chi);\n        setDataThongTinCungCap(results?.thong_tin_cung_cap);\n        setDiff(results?.diff);\n        setFileAnhChanDung(\n          results?.thong_tin_cung_cap?.dinh_kem_anh_chan_dung || []\n        );\n        setFileCMNDCCCD(\n          results?.thong_tin_cung_cap?.dinh_kem_xac_nhan_cong_dan || []\n        );\n        setFileHinhChupCCHND(\n          results?.thong_tin_cung_cap?.dinh_kem_chung_chi || []\n        );\n        setFileGiayToKhac(\n          results?.thong_tin_cung_cap?.dinh_kem_xac_nhan_khac || []\n        );\n      })\n      .catch((error) => {\n        toast.error(\"Lấy thông tin chứng chỉ không thành công\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n        navigate(\"/error/404\");\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const renderChooseFile = ({ title, name, arrayFileMap, setFile }) => {\n    return (\n      <div className=\"col-6 pb-5\">\n        <div className=\"row\">\n          <div className=\"col-12\">{title}</div>\n          <div className=\"col-12\">\n            {arrayFileMap?.length > 0\n              ? arrayFileMap.map((e, i) => {\n                  return (\n                    <button\n                      key={`chooseFile${i}`}\n                      className=\"btn ml-2 mb-2\"\n                      style={{\n                        backgroundColor: \"#e8e8e8\",\n                        padding: \"12px 10px 12px 16px\",\n                        marginRight: \"12px\",\n                      }}\n                    >\n                      <span>{e?.name}</span>\n                    </button>\n                  );\n                })\n              : null}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const UploadControl = ({\n    children,\n    value,\n    onChange,\n    disabled,\n    accept,\n    name,\n  }) => {\n    return (\n      <label htmlFor={`contained-button-${name}`} className=\"m-0 w-100\">\n        <input\n          disabled={disabled}\n          style={{ display: \"none\" }}\n          id={`contained-button-${name}`}\n          multiple\n          type=\"file\"\n          accept=\"audio/*|video/*|image/*|MIME_type\"\n          onChange={(event) => {\n            switch (name) {\n              case \"denghicaplai\":\n                setFileHinhChupCCHND(Object.values(event.target.files));\n                break;\n              case \"banchinhhoacbansau\":\n                setFileCMNDCCCD(Object.values(event.target.files));\n                break;\n              case \"anhchandung\":\n                setFileAnhChanDung(Object.values(event.target.files));\n                break;\n              case \"banchinhdaduoccap\":\n                setFileGiayToKhac(Object.values(event.target.files));\n                break;\n              default:\n                break;\n            }\n          }}\n        />\n        {children}\n      </label>\n    );\n  };\n\n  return (\n    <div>\n      <LoadingOverlay spinner active={isLoading} text=\"Đang tải dữ liệu ...\">\n        <div className=\"card-box row px-3 py-3 mx-3 my-3\">\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <div className=\"title\">\n                <h3 className=\"text-primary\">Thông tin cung cấp</h3>\n                <h4>\n                  Số CC: <span>{DataThongTinCungCap?.so_giay_phep || \"\"}</span>\n                </h4>\n              </div>\n            </div>\n            <div className=\"col-6\">\n              <div className=\"title\">\n                <h3 className=\"text-primary\">Thông tin chứng chỉ</h3>\n                <h4>\n                  Số CC:{\" \"}\n                  <span\n                    className={\n                      diff.includes(\"so_giay_phep\") ? \"text-danger\" : \"\"\n                    }\n                  >\n                    {DataThongTinChungChi?.so_giay_phep || \"\"}\n                  </span>\n                </h4>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">Họ tên: </div>\n                <div className=\"col-9\">\n                  <span data-bind=\"\">{DataThongTinCungCap?.ten || \"\"}</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">Họ tên: </div>\n                <div className=\"col-9\">\n                  <span className={diff.includes(\"ten\") ? \"text-danger\" : \"\"}>\n                    {DataThongTinChungChi?.ten || \"\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">Ngày sinh: </div>\n                <div className=\"col-9\">\n                  <span className=\"\">\n                    {DataThongTinCungCap?.ngay_sinh || \"\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">Ngày sinh: </div>\n                <div className=\"col-9\">\n                  <span\n                    className={diff.includes(\"ngay_sinh\") ? \"text-danger\" : \"\"}\n                  >\n                    {DataThongTinChungChi?.ngay_sinh || \"\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">Giới tính: </div>\n                <div className=\"col-9\">\n                  <span className=\"\">\n                    {DataThongTinCungCap?.gioi_tinh || \"\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">Giới tính: </div>\n                <div className=\"col-9\">\n                  <span\n                    className={diff.includes(\"gioi_tinh\") ? \"text-danger\" : \"\"}\n                  >\n                    {DataThongTinChungChi?.gioi_tinh || \"\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">CMND/CCCD: </div>\n                <div className=\"col-9\">\n                  <span>{DataThongTinCungCap?.ma_cong_dan || \"\"}</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">CMND/CCCD: </div>\n                <div className=\"col-9\">\n                  <span\n                    className={\n                      diff.includes(\"ma_cong_dan\") ? \"text-danger\" : \"\"\n                    }\n                  >\n                    {DataThongTinChungChi?.ma_cong_dan || \"\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">Ngày cấp: </div>\n                <div className=\"col-9\">\n                  <span className=\"\">\n                    {DataThongTinCungCap?.ngay_cap || \"\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">Ngày cấp: </div>\n                <div className=\"col-9\">\n                  <span\n                    className={diff.includes(\"ngay_cap\") ? \"text-danger\" : \"\"}\n                  >\n                    {DataThongTinChungChi?.ngay_cap || \"\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">Nơi cấp: </div>\n                <div className=\"col-9\">\n                  <span className=\"\">{DataThongTinCungCap?.noi_cap || \"\"}</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">Nơi cấp: </div>\n                <div className=\"col-9\">\n                  <span\n                    className={diff.includes(\"noi_cap\") ? \"text-danger\" : \"\"}\n                  >\n                    {DataThongTinChungChi?.noi_cap || \"\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">Địa chỉ: </div>\n                <div className=\"col-9\">\n                  <span className=\"\">{DataThongTinCungCap?.dia_chi || \"\"}</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">Địa chỉ: </div>\n                <div className=\"col-9\">\n                  <span\n                    className={diff.includes(\"dia_chi\") ? \"text-danger\" : \"\"}\n                  >\n                    {DataThongTinChungChi?.dia_chi || \"\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">Văn bằng: </div>\n                <div className=\"col-9\">\n                  <span className=\"\">\n                    {DataThongTinCungCap?.van_bang || \"\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">Văn bằng: </div>\n                <div className=\"col-9\">\n                  <span\n                    className={diff.includes(\"van_bang\") ? \"text-danger\" : \"\"}\n                  >\n                    {DataThongTinChungChi?.van_bang || \"\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">Năm cấp: </div>\n                <div className=\"col-9\">\n                  <span className=\"\">{DataThongTinCungCap?.nam_cap || \"\"}</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">Năm cấp: </div>\n                <div className=\"col-9\">\n                  <span\n                    className={diff.includes(\"nam_cap\") ? \"text-danger\" : \"\"}\n                  >\n                    {DataThongTinChungChi?.nam_cap || \"\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">PVHD chuyên môn: </div>\n                <div className=\"col-9\">\n                  {DataThongTinCungCap?.pvhd_chuyen_mon?.length > 0 &&\n                    DataThongTinCungCap?.pvhd_chuyen_mon.map((e, i) => {\n                      return (\n                        <div key={`pvhd${i}`}>\n                          <span className=\"\">{e}</span>\n                          <br />\n                        </div>\n                      );\n                    })}\n                </div>\n              </div>\n            </div>\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">PVHD chuyên môn: </div>\n                <div className=\"col-9\">\n                  {DataThongTinChungChi?.pvhd_chuyen_mon?.length > 0 &&\n                    DataThongTinChungChi?.pvhd_chuyen_mon.map((e, i) => {\n                      return (\n                        <div key={`pvhdCC${i}`}>\n                          <span className=\"\">{e}</span>\n                          <br />\n                        </div>\n                      );\n                    })}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">Vị trí hành nghề: </div>\n                <div className=\"col-9\">\n                  {DataThongTinCungCap?.vi_tri_hanh_nghe?.length > 0 &&\n                    DataThongTinCungCap?.vi_tri_hanh_nghe.map((e, i) => {\n                      return (\n                        <div key={`vthn${i}`}>\n                          <span className=\"\">{e}</span>\n                          <br />\n                        </div>\n                      );\n                    })}\n                </div>\n              </div>\n            </div>\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">Vị trí hành nghề: </div>\n                <div className=\"col-9\">\n                  {DataThongTinChungChi?.vi_tri_hanh_nghe?.length > 0 &&\n                    DataThongTinChungChi?.vi_tri_hanh_nghe.map((e, i) => {\n                      return (\n                        <div key={`vthnCC${i}`}>\n                          <span className=\"\">{e}</span>\n                          <br />\n                        </div>\n                      );\n                    })}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">Hiệu lực từ: </div>\n                <div className=\"col-9\">\n                  <span className=\"\">\n                    {DataThongTinCungCap?.ngay_hieu_luc || \"\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">Hiệu lực từ: </div>\n                <div className=\"col-9\">\n                  <span\n                    className={\n                      diff.includes(\"ngay_hieu_luc\") ? \"text-danger\" : \"\"\n                    }\n                  >\n                    {DataThongTinChungChi?.ngay_hieu_luc || \"\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">Cơ quan cấp: </div>\n                <div className=\"col-9\">\n                  <span className=\"\">\n                    {DataThongTinCungCap?.co_quan_cap || \"\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">Cơ quan cấp: </div>\n                <div className=\"col-9\">\n                  <span\n                    className={\n                      diff.includes(\"co_quan_cap\") ? \"text-danger\" : \"\"\n                    }\n                  >\n                    {DataThongTinChungChi?.co_quan_cap || \"\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">Hình thức: </div>\n                <div className=\"col-9\">\n                  <span className=\"\">\n                    {DataThongTinCungCap?.hinh_thuc_thi || \"\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-6\">\n              <div className=\"row\">\n                <div className=\"col-3 font-weight-bold\">Hình thức: </div>\n                <div className=\"col-9\">\n                  <span\n                    className={\n                      diff.includes(\"hinh_thuc_thi\") ? \"text-danger\" : \"\"\n                    }\n                  >\n                    {DataThongTinChungChi?.hinh_thuc_thi || \"\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* ĐÍNH KÈM */}\n        <div className=\"row card-box px-3 py-3 mx-3 my-3\">\n          <div className=\"col-12 text-title pb-3 fw-bolder\">Đính kèm</div>\n          {renderChooseFile({\n            title: \"1. Hình chụp CCHND\",\n            name: \"hinhchupcchnd\",\n            arrayFileMap: FileHinhChupCCHND,\n            setFile: (value) => {\n              setFileHinhChupCCHND(value);\n            },\n          })}\n          {renderChooseFile({\n            title: \"2. Ảnh chân dung\",\n            name: \"anhchandung\",\n            arrayFileMap: FileAnhChanDung,\n            setFile: (value) => {\n              setFileAnhChanDung(value);\n            },\n          })}\n          {renderChooseFile({\n            title: \"3. CMND/CCCD\",\n            name: \"filecmndcccd\",\n            arrayFileMap: FileCMNDCCCD,\n            setFile: (value) => {\n              setFileCMNDCCCD(value);\n            },\n          })}\n          {renderChooseFile({\n            title: \"4. Giấy tờ chứng minh khác\",\n            name: \"giaytokhac\",\n            arrayFileMap: FileGiayToKhac,\n            setFile: (value) => {\n              setFileGiayToKhac(value);\n            },\n          })}\n        </div>\n\n        <div className=\"row w-100\">\n          <div className=\"col-12 mt-4 mb-5 text-center\">\n            <div\n              onClick={() => {\n                navigate(-1);\n              }}\n              className=\"btn px-4 py-2 mx-2 font-weight-bold btn-trolai\"\n            >\n              ĐÓNG\n            </div>\n            <div\n              onClick={(e) => {\n                duyetLienKet(e);\n              }}\n              className=\"btn btn-success text-white px-4 py-2 mx-2 font-weight-bold \"\n            >\n              DUYỆT LIÊN KẾT\n            </div>\n            <div\n              onClick={(e) => {\n                tuChoiLienKet(e);\n              }}\n              className=\"btn btn-danger text-white px-4 py-2 mx-2 font-weight-bold \"\n            >\n              TỪ CHỐI LIÊN KẾT\n            </div>\n          </div>\n        </div>\n      </LoadingOverlay>\n    </div>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\nop-ho-so\\danh-sach-ho-so\\ThemHoSo.js",["1820","1821"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport { toast } from \"react-toastify\";\nimport api from \"../../../../configs/api\";\nimport { commonActions } from \"../../../../redux-module/common/commonSlice\";\n\nexport function ThemHoSo() {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    getList();\n  }, []);\n\n  const groupStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  };\n\n  const [selectedThuTuc, setSelectedThuTuc] = useState(null);\n  const [listThuTuc, setListThuTuc] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [IsAdd, setIsAdd] = useState(false);\n  const navigate = useNavigate();\n\n  const formatGroupLabel = (listTemp) => (\n    <div style={groupStyles}>\n      <span>{listTemp.ten}</span>\n    </div>\n  );\n\n  // const getThongTinHoSo = async (id) => {\n  //   await setIsLoading(true);\n  //   axios\n  //     .get(api.API_YEU_CAU_CHUNG_CHI_HANH_NGHE + \"/\" + id)\n  //     .then(async ({ data }) => {\n  //       if (data) {\n  //         console.log(\"data getThongTinHoSo\", data);\n  //       }\n  //     })\n  //     .catch((error) => {\n  //       toast.error(\"Lấy thông tin chứng chỉ không thành công\", {\n  //         position: \"top-right\",\n  //         autoClose: 2000,\n  //         hideProgressBar: false,\n  //         closeOnClick: true,\n  //         pauseOnHover: true,\n  //         draggable: true,\n  //         progress: undefined,\n  //         toastId: \"error\",\n  //       });\n  //     })\n  //     .finally(() => {\n  //       setTimeout(() => {\n  //         setIsLoading(false);\n  //       }, 1000);\n  //     });\n  // };\n\n  const handleSubmit = async () => {\n    await setIsAdd(true);\n    if (!selectedThuTuc) {\n      toast.error(\"Vui lòng chọn thủ tục\", {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        toastId: \"error\",\n      });\n    } else {\n      await setIsLoading(true);\n      axios\n        .post(api.API_YEU_CAU_CHUNG_CHI_HANH_NGHE, {\n          thu_tuc_id: selectedThuTuc?.id,\n        })\n        .then(async ({ data }) => {\n          let { id } = data?.results;\n          if (id) {\n            localStorage.removeItem(\"soChungChi\")\n            navigate(`/admin/nop-ho-so/dieuchinh/${id}`);\n          }\n        })\n        .catch((error) => {\n          toast.error(error?.response?.data?.msg, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            toastId: \"error\",\n          });\n        })\n        .finally(() => {\n          setTimeout(() => {\n            setIsLoading(false);\n          }, 1000);\n        });\n    }\n  };\n\n  const getList = () => {\n    axios\n      .post(api.API_THU_TUC_BY_USER, {})\n      .then(async ({ data }) => {\n        let resultsThuTuc = data.results;\n        resultsThuTuc.forEach((e) => {\n          e.label = e.ten;\n          e.value = e.id;\n        });\n        setListThuTuc(resultsThuTuc);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {});\n  };\n\n  return (\n    <div>\n      <LoadingOverlay spinner active={isLoading} text=\"Loading your content...\">\n        <div className=\"card py-6 px-6 mx-3 my-3\">\n          <div className=\"text-title\">\n            <div className=\"fw-bold fs-5 mb-1\">Chọn thủ tục</div>\n            {IsAdd && !selectedThuTuc ? (\n              <span style={{ color: \"red\" }}>(Chưa chọn)</span>\n            ) : (\n              \"\"\n            )}{\" \"}\n          </div>\n          <div className=\"row pt-2\">\n            <div className=\"col-12 row\">\n              <div className=\"col-2 text-fix\">\n                Chọn thủ tục<span className=\"text-danger\">*</span>\n              </div>\n              <div className=\"col-5 text-user-info\">\n                <Select\n                  key={\"id\"}\n                  options={listThuTuc}\n                  value={selectedThuTuc}\n                  placeholder=\"Chọn thủ tục\"\n                  formatGroupLabel={formatGroupLabel}\n                  onChange={async (data) => {\n                    setSelectedThuTuc(data);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"card py-6 px-6 mx-3 my-3\">\n          <div className=\"text-title\">\n            <div className=\"fw-bold fs-5 mb-1\">Chi tiết thủ tục</div>\n          </div>\n          <div className=\"row pt-2\">\n            <div className=\"col-12\">\n              <div className=\"row pt-2\">\n                <div className=\"col-2 text-fix\">Lĩnh vực:</div>\n                <div className=\"col-10 text-user-info\">\n                  {selectedThuTuc?.linh_vuc}\n                </div>\n              </div>\n              <div className=\"row pt-2\">\n                <div className=\"col-2 text-fix\">Mức độ:</div>\n                <div className=\"col-10 text-user-info\">\n                  {selectedThuTuc?.muc_do}\n                </div>\n              </div>\n              <div className=\"row pt-2\">\n                <div className=\"col-2 text-fix\">Đối tượng thực hiện:</div>\n                <div className=\"col-10 text-user-info\">\n                  {selectedThuTuc?.doi_tuong}\n                </div>\n              </div>\n              <div className=\"row pt-2\">\n                <div className=\"col-2 text-fix\">Cơ quan thực hiện:</div>\n                <div className=\"col-10 text-user-info\">\n                  {selectedThuTuc?.co_quan_thuc_hien}\n                </div>\n              </div>\n              <div className=\"row pt-2\">\n                <div className=\"col-2 text-fix\">Thời hạn giải quyết:</div>\n                <div className=\"col-10 text-user-info\">\n                  {selectedThuTuc?.thoi_gian_giai_quyet}\n                </div>\n              </div>\n              <div className=\"row pt-2\">\n                <div className=\"col-2 text-fix\">Kết quả thực hiện</div>\n                <div className=\"col-10 text-user-info\">\n                  {selectedThuTuc?.ket_qua_thuc_hien}\n                </div>\n              </div>\n              <div className=\"row pt-2\">\n                <div className=\"col-2 text-fix\">Lệ phí</div>\n                <div className=\"col-10 text-user-info\">\n                  {selectedThuTuc?.le_phi_text}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card py-6 px-6 mx-3 my-3\">\n          <div className=\"text-title\">\n            <div className=\"fw-bold fs-5 mb-1\">Cách thức và trình tự thực hiện</div>\n          </div>\n          <div className=\"row pt-2\">\n            <div className=\"col-12\">\n              <div className=\"row-12 pt-2\">\n                <div className=\"text-fix\">Trình tự thực hiện:</div>\n              </div>\n              <div className=\"row pt-2\">\n                <div className=\"col-1 text-fix\">Bước 1:</div>\n                <div className=\"col-11 text-user-info\">\n                  Cá nhân chuẩn bị hồ sơ theo quy định và nộp hồ sơ tại Bộ phận\n                  tiếp nhận và trả hồ sơ của Sở Y tế (Địa chỉ: Số 59, đường\n                  Nguyễn Thị Minh Khai, quận 1), vào các ngày làm việc từ thứ\n                  hai đến thứ sáu (buổi sáng từ 07 giờ 30 phút đến 11 giờ 30\n                  phút, buổi chiều từ 13 giờ 00 phút đến 17 giờ 00 phút) và buổi\n                  sáng thứ bảy từ 07 giờ 30 phút đến 11 giờ 30 phút.\n                </div>\n              </div>\n              <div className=\"row pt-2\">\n                <div className=\"col-1 text-fix\">Bước 2:</div>\n                <div className=\"col-11 text-user-info\">\n                  Bộ phận tiếp nhận và trả kết quả Sở Y tế tiếp nhận hồ sơ, kiểm\n                  tra tính đầy đủ của các giấy tờ có trong hồ sơ:\n                  <div className=\"p-1\">\n                    + Trường hợp hồ sơ đầy đủ và hợp lệ thì cấp Phiếu tiếp nhận\n                    hồ sơ.\n                    <br />+ Trường hợp hồ sơ chưa đầy đủ thì hướng dẫn tổ chức,\n                    cá nhân bổ sung và hoàn thiện hồ sơ.\n                  </div>\n                </div>\n              </div>\n              <div className=\"row pt-2\">\n                <div className=\"col-1 text-fix\">Bước 3:</div>\n                <div className=\"col-11 text-user-info\">\n                  + Đối với hồ sơ không hợp lệ, trong thời hạn 03 ngày làm việc\n                  kể từ ngày nhận được hồ sơ đề nghị cấp Chứng chỉ hành nghề\n                  dược, Sở Y tế gửi trả lại hồ sơ cho cá nhân nộp hồ sơ. <br />+\n                  Đối với hồ sơ hợp lệ, trong thời hạn 30 ngày làm việc kể từ\n                  ngày nhận được hồ sơ đề nghị cấp Chứng chỉ hành nghề dược, Sở\n                  Y tế tổ chức thẩm định và cấp Chứng chỉ hành nghề dược. Trong\n                  trường hợp nếu không cấp, Sở Y tế sẽ có văn bản trả lời và nêu\n                  rõ lý do.\n                </div>\n              </div>\n              <div className=\"row pt-2\">\n                <div className=\"col-1 text-fix\">Bước 4:</div>\n                <div className=\"col-11 text-user-info\">\n                  Cá nhân căn cứ vào ngày hẹn trên Phiếu tiếp nhận hồ sơ, đến\n                  nhận kết quả giải quyết tại Bộ phận tiếp nhận và trả hồ sơ của\n                  Sở Y tế.\n                </div>\n              </div>\n              <div className=\"row-12 pt-2\">\n                <div className=\"text-fix\">Cách thực hiện:</div>\n                <div className=\"text-user-info\">Trực tiếp tại Sở Y tế.</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"card py-3 px-4 mx-3 my-3\">\n          <div className=\"text-title\">\n            <div className=\"fw-bold fs-5 mb-1\">Thành phần và số lượng hồ sơ</div>\n          </div>\n          <div className=\"row pt-2\">\n            <div className=\"col-12\">\n              <div className=\"row-12 pt-2\">\n                <div className=\"text-fix\">Thành phần hồ sơ</div>\n              </div>\n              <div className=\"row pt-2\">\n                <div className=\"col-12 text-user-info\">\n                  - Đơn đề nghị cấp Chứng chỉ hành nghề dược (theo mẫu).\n                  <br />\n                  - Bản sao có chứng thực các văn bằng chuyên môn.\n                  <br />\n                  - Giấy xác nhận về thời gian thực hành ở cơ sở dược hợp pháp\n                  do người đứng đầu cơ sở đó cấp (theo mẫu) do Bộ Y tế quy định;\n                  trừ trường hợp dược sĩ đại học tốt nghiệp hệ chuyên tu đăng ký\n                  loại hình nhà thuốc.\n                  <br />\n                  - Bản sao có chứng thực Giấy chứng minh nhân dân nếu hồ sơ gửi\n                  bằng đường bưu điện hoặc bản chụp và xuất trình Giấy chứng\n                  minh nhân dân bản gốc để đối chiếu nếu hồ sơ nộp trực tiếp.\n                  <br />\n                  - Giấy chứng nhận sức khỏe do cơ quan y tế có thẩm quyền cấp\n                  trong thời hạn 12 tháng.\n                  <br />- 02 ảnh chân dung cỡ 4cm x 6cm chụp trong vòng sáu (06)\n                  tháng gần nhất tính đến ngày nộp hồ sơ đề nghị cấp Chứng chỉ.\n                </div>\n              </div>\n              <div className=\"row-12 pt-2\">\n                <div className=\"text-fix\">Số lượng hồ sơ:</div>\n                <div className=\"text-user-info pt-1\">01 (bộ)</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"card py-6 px-6 mx-3 my-3\">\n          <div className=\"text-title\">\n            <div className=\"fw-bold fs-5 mb-1\">Điều kiện yêu cầu và căn cứ pháp lý</div>\n          \n          </div>\n          <div className=\"row pt-2\">\n            <div className=\"col-12\">\n              <div className=\"row-12 pt-2\">\n                <div className=\"text-fix\">\n                  Điều 13 Lượt dược (Điều kiện cấp Chứng chỉ hành nghề dược)\n                </div>\n              </div>\n              <div className=\"row pt-2\">\n                <div className=\"col-12 text-user-info\">\n                  1. Có văn bằng, chứng chỉ, giấy chứng nhận chuyên môn (sau đây\n                  gọi chung là văn bằng chuyên môn) được cấp hoặc công nhận tại\n                  Việt Nam phù hợp với vị trí công việc và cơ sở kinh doanh dược\n                  bao gồm:\n                  <div className=\"pl-3 pt-1\">\n                    a) Bằng tốt nghiệp đại học ngành dược (sau đây gọi là Bằng\n                    dược sỹ);\n                    <br />\n                    b) Bằng tốt nghiệp đại học ngành y đa khoa;\n                    <br />\n                    c) Bằng tốt nghiệp đại học ngành y học cổ truyền hoặc đại\n                    học ngành dược cổ truyền;\n                    <br />\n                    d) Bằng tốt nghiệp đại học ngành sinh học;\n                    <br />\n                    đ) Bằng tốt nghiệp đại học ngành hóa học;\n                    <br />\n                    e) Bằng tốt nghiệp cao đẳng ngành dược;\n                    <br />\n                    g) Bằng tốt nghiệp trung cấp ngành dược;\n                    <br />\n                    h) Bằng tốt nghiệp cao đẳng, trung cấp ngành y;\n                    <br />\n                    i) Bằng tốt nghiệp trung cấp y học cổ truyền hoặc dược cổ\n                    truyền;\n                    <br />\n                    k) Văn bằng, chứng chỉ sơ cấp dược;\n                    <br />\n                    l) Giấy chứng nhận về lương y, giấy chứng nhận về lương\n                    dược, giấy chứng nhận bài thuốc gia truyền hoặc văn bằng,\n                    chứng chỉ, giấy chứng nhận khác về y dược cổ truyền được cấp\n                    trước ngày Luật này có hiệu lực.\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row-12 pt-2\">\n                <div className=\"text-fix\">Căn cứ pháp lý:</div>\n                <div className=\"text-user-info pt-1\">\n                  - Luật Dược số 105/2016/QH13 ngày 06/4/2016 của Quốc hội, có\n                  hiệu lực từ ngày 01 tháng 01 năm 2017;\n                  <br />\n                  - Nghị định số 54/2017/NĐ-CP của Chính phủ ban hành ngày\n                  08/5/2017 Quy định chi tiết một số điều và biện pháp thi hành\n                  Luật dược, có hiệu lực từ ngày 01 tháng 7 năm 2017;\n                  <br />\n                  - Nghị định số 155/2018/NĐ-CP ngày 12/11/2018 của Chính phủ\n                  sửa đổi, bổ sung một số quy định liên quan đến điều kiện đầu\n                  tư kinh doanh thuộc phạm vi quản lý nhà nước của Bộ Y tế;\n                  <br />\n                  - Thông tư số 277/2016/TT-BTC ngày 14/11/2016 của Bộ Tài chính\n                  quy định mức thu, chế độ thu, nộp, quản lý và sử dụng phí\n                  trong lĩnh vực dược, mỹ phẩm, có hiệu lực kể từ ngày\n                  01/01/2017;\n                  <br />- Quyết định số 7867/QĐ-BYT ngày 28/12/2018 của Bộ Y tế\n                  về việc công bố thủ tục hành chính mới ban hành/ được sửa\n                  đổi/bổ sung/thay thế/bị bãi bỏ trong lĩnh vực Dược phẩm thuộc\n                  phạm vi quản lý của Bộ Y tế.\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row w-100\">\n          <div className=\"col-12 mt-4 mb-5 text-center\">\n            <div\n              onClick={(e) => {handleSubmit(e);}}\n              className=\"btn btn-primary text-white px-8 py-3 mx-2 font-weight-bold\"\n            >\n              NỘP HỒ SƠ\n            </div>\n          </div>\n        </div>\n      </LoadingOverlay>\n    </div>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\index.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-muc\\hoat-dong-chuyen-mon\\HoatDongChuyenMon.js",["1822","1823","1824","1825","1826"],[],"import axios from \"axios\";\n// import { setTitle } from \"../../saga-modules/common/actions\";\nimport clsx from \"clsx\";\nimport { useEffect, useState } from \"react\";\nimport BlockUi from \"react-block-ui\";\nimport { Form } from \"react-bootstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Oval, TailSpin } from \"react-loader-spinner\";\n// import { useDispatch } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport ReactTooltip from \"react-tooltip\";\nimport { KTCard, KTSVG, useDebounce } from \"../../../../../_metronic/helpers\";\nimport Status from \"../../../../components/Status\";\nimport api from \"../../../../configs/api\";\nimport { PopupDelete } from \"../../popup/PopupDelete\";\n\nexport function HoatDongChuyenMon() {\n  const [listChuyenMon, setListChuyenMon] = useState([]);\n  const [perPage, setPerPage] = useState(10);\n  const [isLoading, setIsLoading] = useState(true);\n  const [totalRows, setTotalRows] = useState(0);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [id, setId] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [trang_thai, setTrang_thai] = useState(true);\n\n  //open modal delete\n  const [isvisibleDelete, setIsvisibleDelete] = useState(false);\n  const [idDelete, setIdDelete] = useState(\"\");\n  const closeModalDelete = () => setIsvisibleDelete(false);\n  const showModalDelete = () => setIsvisibleDelete(true);\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const debouncedSearchTerm = useDebounce(searchTerm, 1000);\n\n  useEffect(\n    () => {\n      if (debouncedSearchTerm !== undefined && searchTerm !== undefined) {\n        getList(1, perPage, debouncedSearchTerm);\n      }\n    },\n    [debouncedSearchTerm] // Only call effect if debounced search term changes\n  );\n\n  const getList = (page_number = page, size = perPage, search_key = \"\") => {\n    setIsLoading(true);\n    axios\n      .post(\n        api.API_GET_HOAT_DONG_CHUYEN_MON +\n          \"_get_list\" +\n          `?page=${page}&per_page=${size}`,\n        {\n          search_ten: search_key,\n        }\n      )\n      .then(async ({ data }) => {\n        setListChuyenMon(data?.results);\n        setTotalRows(data?.total);\n\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  //validate thêm chỉ định chuyên khoa\n  const [form, setForm] = useState({});\n  const [errors, setErrors] = useState({});\n  const setField = (field, value) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n    if (!!errors[field])\n      setErrors({\n        ...errors,\n        [field]: null,\n      });\n  };\n  const findFormErrors = () => {\n    const { ten } = form;\n    const newErrors = {};\n    // name errors\n    if (!ten || ten === \"\") newErrors.ten = \"Tên không được bỏ trống!\";\n\n    return newErrors;\n  };\n\n  // handle api\n  const addChuyenMon = async (e) => {\n    e.preventDefault();\n    // get our new errors\n    const newErrors = findFormErrors();\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n    } else {\n      setIsLoading(true);\n      const { ten } = form;\n      const json = {\n        ten,\n        trang_thai,\n      };\n      await axios\n        .post(api.API_GET_HOAT_DONG_CHUYEN_MON + \"_add\", json)\n        .then(async ({ data }) => {\n          console.log(\"data\", data);\n          resetState();\n          toast.success(data?.msg, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            toastId: \"success\",\n          });\n          getList(1, perPage, \"\");\n          setIsLoading(false);\n          // navigate(0);\n        })\n        .catch((error) => {\n          console.log(\"error\", error?.response);\n          toast.error(error?.data?.errors, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            toastId: \"error\",\n          });\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  };\n\n  const updateChuyenMon = async (e) => {\n    e.preventDefault();\n    // get our new errors\n    const newErrors = findFormErrors();\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n    } else {\n      setIsLoading(true);\n      const { ten, id } = form;\n      const json = {\n        ten,\n        trang_thai,\n      };\n      await axios\n        .put(api.API_GET_HOAT_DONG_CHUYEN_MON + \"/\" + id, json)\n        .then(async ({ data }) => {\n          console.log(\"data\", data);\n          resetState();\n          toast.success(data?.msg, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            toastId: \"success\",\n          });\n          getList(1, perPage, \"\");\n          setIsLoading(false);\n          // navigate(0);\n        })\n        .catch((error) => {\n          console.log(\"error\", error?.response);\n          toast.error(error?.data?.errors, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            toastId: \"error\",\n          });\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  };\n\n  const resetState = () => {\n    setPerPage(10);\n    setTotalRows(0);\n    setForm({\n      ten: \"\",\n    });\n    setErrors({});\n    setId(\"\");\n    setTrang_thai(true);\n    setShowUpdate(false);\n    // getNhomChuyenKhoa();\n  };\n\n  // DETAIL\n  const detail = async (data) => {\n    setForm({\n      ...data,\n    });\n\n    setId(data.id);\n    setTrang_thai(data.trang_thai);\n\n    setShowUpdate(true);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    await setIsLoading(true);\n    axios\n      .get(\n        api.API_GET_HOAT_DONG_CHUYEN_MON +\n          \"_get_list\" +\n          `?page=${page}&per_page=${newPerPage}`,\n        {\n          ten: searchTerm,\n        }\n      )\n      .then(({ data }) => {\n        if (data?.results) {\n          setListChuyenMon(data?.results);\n          setPerPage(newPerPage);\n        }\n      })\n      .catch(() => {})\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const delele = () => {\n    const json = {\n      id: idDelete,\n    };\n    console.log(\"123213\", json);\n    axios\n      .delete(api.API_GET_HOAT_DONG_CHUYEN_MON + \"/\" + idDelete, {})\n      .then(async ({ data }) => {\n        console.log(\"data delete success\", data);\n        await toast.success(data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        closeModalDelete();\n        resetState();\n        // getList(1, perPage, \"\");\n\n        if (page === 1) {\n          getList({ page_number: 1 });\n        } else if (listChuyenMon?.length == 1) {\n          getList({ page_number: page - 1 });\n        } else {\n          getList({ page_number: page });\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\", error);\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n  const handlePageChange = (page) => {\n    setPage(page);\n\n    getList(page);\n  };\n  //đổi màu khi selected\n  const [data, setData] = useState(listChuyenMon);\n  useEffect(() => {\n    setData(listChuyenMon);\n  }, [listChuyenMon]);\n  const handleRowClicked = (row) => {\n    const updatedData = listChuyenMon?.map((item) => {\n      if (row.id !== item.id) {\n        return item;\n      }\n      return {\n        ...item,\n        toggleSelected: !item.toggleSelected,\n      };\n    });\n    setData(updatedData);\n  };\n\n  const paginationOptions = {\n    rowsPerPageText: \"Dòng hiển thị\",\n    rangeSeparatorText: \"trên\",\n  };\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: \"solid\",\n        borderTopWidth: \"1px\",\n        borderTopColor: \"#e0e0e0\",\n        borderBottomColor: \"#e0e0e0\",\n      },\n    },\n    headCells: {\n      style: {\n        color: \"#202124\",\n        fontSize: \"16px\",\n      },\n    },\n    rows: {\n      highlightOnHoverStyle: {\n        backgroundColor: \"rgb(230, 244, 244)\",\n        borderBottomColor: \"#FFFFFF\",\n        outline: \"1px solid #FFFFFF\",\n      },\n    },\n    pagination: {\n      style: {\n        border: \"none\",\n      },\n    },\n  };\n  const columns = [\n    {\n      name: \"Mã chuyên môn\",\n      grow: 3,\n      selector: (row) => (\n        <div\n          onClick={() => {\n            detail(row);\n            handleRowClicked(row);\n          }}\n        >\n          <span>{row.ma}</span>\n        </div>\n      ),\n      style: {\n        color: \"#1251ff\",\n        fontSize: \"14px\",\n        fontWeight: 500,\n        width: 300,\n        cursor: \"pointer\",\n      },\n    },\n    {\n      name: \"Tên chuyên môn\",\n      selector: (row) => (\n        <span data-tip={row?.ten}>\n          {row.ten}\n          <ReactTooltip place=\"top\" type=\"dark\" effect=\"float\" />\n        </span>\n      ),\n      grow: 7,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Trang thái\",\n      selector: (row) => <span>{row.trang_thai}</span>,\n      grow: 3,\n      cell: (row) => (\n        <td>\n          <Status status={row.trang_thai} />\n        </td>\n      ),\n    },\n    {\n      name: \"Thao tác\",\n      grow: 2,\n\n      cell: (row) => (\n        <div className=\"container my-3\">\n          <a\n            onClick={async () => {\n              await setIdDelete(row?.id);\n              showModalDelete();\n            }}\n            className=\"btn btn-icon btn-bg-light btn-color-danger btn-sm\"\n          >\n            <KTSVG\n              path=\"/media/icons/duotune/general/gen027.svg\"\n              className=\"svg-icon-3\"\n            />\n          </a>\n        </div>\n      ),\n    },\n  ];\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.toggleSelected,\n      style: {\n        backgroundColor: \"#f5f5f5\",\n        userSelect: \"none\",\n      },\n    },\n  ];\n  const cardBox = {\n    backgroundColor: \"#fff\",\n    backgroundClip: \"border-box\",\n    border: \"1px solid #e7eaed\",\n    padding: \"1.5rem\",\n    marginBottom: \"24px\",\n    borderRadius: \"0.5rem\",\n  };\n  return (\n    <KTCard>\n      <div className=\"page\">\n        <div className=\"container-fluid\">\n          <div className=\"fv-row mb-7 mt-6\">\n            {/* begin::Label */}\n            <label className=\"fw-bold fs-6 mb-2\">\n              Tên hoạt động chuyên môn\n            </label>\n            {/* end::Label */}\n\n            {/* begin::Input */}\n            <div className=\"col-md-6\">\n              <input\n                placeholder=\"Nhập tên tìm kiếm...\"\n                type=\"text\"\n                name=\"name\"\n                className={clsx(\"form-control form-control-solid mb-3 mb-lg-0\")}\n                autoComplete=\"off\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n            </div>\n\n            {/* end::Input */}\n          </div>\n          <BlockUi\n            tag=\"div\"\n            // blocking={!isLoading}\n            loader={\n              <TailSpin\n                arialLabel=\"loading-indicator\"\n                height={60}\n                width={60}\n                strokeWidth={2}\n                strokeWidthSecondary={1}\n                color=\"blue\"\n                secondaryColor=\"blue\"\n                wrapperclassName={\"d-inline-flex\"}\n              />\n            }\n          >\n            <div className=\"row\">\n              <div className=\"col-md-8\">\n                <div className=\"\" style={cardBox}>\n                  <DataTable\n                    noDataComponent={\n                      <img\n                        style={{ width: \"30%\", height: \"auto\" }}\n                        src=\"/media/nodata-found.svg\"\n                      />\n                    }\n                    sortServer\n                    progressPending={isLoading}\n                    columns={columns}\n                    data={data}\n                    customStyles={customStyles}\n                    pagination\n                    highlightOnHover\n                    pointerOnHover\n                    paginationServer\n                    paginationTotalRows={totalRows}\n                    onChangeRowsPerPage={handlePerRowsChange}\n                    onChangePage={handlePageChange}\n                    paginationComponentOptions={paginationOptions}\n                    conditionalRowStyles={conditionalRowStyles}\n                    // onRowClicked={(data) => {\n                    //   detail(data);\n                    //   handleRowClicked(data);\n                    // }}\n                    progressComponent={\n                      <div\n                        style={{\n                          padding: \"24px\",\n                        }}\n                      >\n                        <Oval\n                          arialLabel=\"loading-indicator\"\n                          color=\"#007bff\"\n                          height={40}\n                        />\n                      </div>\n                    }\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-4\">\n                <div className=\"\" style={cardBox}>\n                  <div className=\"\">\n                    <label className=\"fw-bold fs-6 mb-2\">\n                      Tạo mới/ cập nhật hoạt động chuyên môn.\n                    </label>\n                  </div>\n                  {showUpdate && (\n                    <div className=\"row mt-3\">\n                      <div className=\"col-4\">\n                        <label className=\"required fw-bold fs-6 mb-2\">\n                          Mã chuyên môn\n                        </label>\n                      </div>\n                      <div className=\"col-8\">\n                        <Form.Control\n                          disabled={true}\n                          type=\"text\"\n                          placeholder=\"Nhập mã chuyên môn\"\n                          style={{ fontSize: 14, fontWeight: 500 }}\n                          value={form.ma === null ? \"\" : form.ma}\n                        />\n                      </div>\n                    </div>\n                  )}\n\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      <label className=\"required fw-bold fs-6 mb-2\">\n                        Tên chuyên môn\n                      </label>\n                    </div>\n                    <div className=\"col-8\">\n                      <Form.Control\n                        as=\"textarea\"\n                        rows={3}\n                        placeholder=\"Nhập tên chuyên môn\"\n                        style={{ fontSize: 14, fontWeight: 500 }}\n                        value={form.ten === null ? \"\" : form.ten}\n                        onChange={(e) => {\n                          setField(\"ten\", e.target.value);\n                        }}\n                        isInvalid={!!errors.ten}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.ten}\n                      </Form.Control.Feedback>\n                    </div>\n                  </div>\n\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      {/* <p className=\"font-weight-bold\">\n                        Tên hội đồng<span className=\"text-danger\">*</span>\n                      </p> */}\n                      <label className=\"fw-bold fs-6 mb-2\">Trạng thái</label>\n                    </div>\n                    <div className=\"col-8\">\n                      <div className=\"form-check form-check-solid form-switch fv-row\">\n                        <input\n                          className=\"form-check-input w-45px h-30px\"\n                          type=\"checkbox\"\n                          id=\"trang_thai\"\n                          // value={trang_thai}\n                          checked={trang_thai}\n                          onChange={(e) => {\n                            setTrang_thai(!trang_thai);\n                          }}\n                        />\n                        <label className=\"form-check-label\"></label>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row mt-5\">\n                    <div className=\"col-4\">\n                      {showUpdate ? (\n                        <button\n                          className=\"btn text-white bg-blue2\"\n                          style={{ fontSize: \".9rem\" }}\n                          onClick={(e) => {\n                            resetState();\n                            getList(1, perPage, \"\");\n                          }}\n                        >\n                          <i className=\"fas fa-sync-alt text-white\"></i> Làm mới\n                        </button>\n                      ) : null}\n                    </div>\n\n                    <div className=\"col-8\">\n                      <button\n                        className=\"btn text-white bg-blue2 mr-3\"\n                        style={{ fontSize: \".9rem\" }}\n                        onClick={(e) => {\n                          showUpdate ? updateChuyenMon(e) : addChuyenMon(e);\n                        }}\n                      >\n                        {showUpdate ? (\n                          <i className=\"fa fa-pencil-alt text-white\"></i>\n                        ) : (\n                          <i className=\"fas fa-save text-white\"></i>\n                        )}{\" \"}\n                        {showUpdate ? \"Cập nhật\" : \"Lưu chuyên môn\"}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <PopupDelete\n              title=\"Bạn có đồng ý xóa hoạt động chuyên môn này không?\"\n              show={isvisibleDelete}\n              onHide={closeModalDelete}\n              onDetele={() => {\n                delele();\n              }}\n            />\n          </BlockUi>\n        </div>\n      </div>\n    </KTCard>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-muc\\van-bang-chuyen-mon\\VanBangChuyenMon.js",["1827","1828","1829","1830","1831","1832","1833","1834","1835","1836","1837","1838"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport BlockUi from \"react-block-ui\";\nimport { Form } from \"react-bootstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Oval } from \"react-loader-spinner\";\n// import { useDispatch } from \"react-redux\";\nimport clsx from \"clsx\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { KTCard, KTSVG, useDebounce } from \"../../../../../_metronic/helpers\";\nimport Status from \"../../../../components/Status\";\nimport api from \"../../../../configs/api\";\nimport { PopupDelete } from \"../../popup/PopupDelete\";\n\nexport function VanBangChuyenMon() {\n  const navigate = useNavigate();\n  //   const dispatch = useDispatch();\n\n  const [listVanBangChuyenMon, setListVanBangChuyenMon] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [totalRows, setTotalRows] = useState(0);\n  const [selectedData, setSelectedData] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [perPage, setPerPage] = useState(10);\n  const [page, setPage] = useState(1);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [id, setId] = useState(\"\");\n  const [stt, setStt] = useState(0);\n\n  //open modal delete\n  const [isvisibleDelete, setIsvisibleDelete] = useState(false);\n  const [idDelete, setIdDelete] = useState(\"\");\n  const closeModalDelete = () => setIsvisibleDelete(false);\n  const showModalDelete = () => setIsvisibleDelete(true);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const debouncedSearchTerm = useDebounce(searchTerm, 1000);\n\n  useEffect(\n    () => {\n      if (debouncedSearchTerm !== undefined && searchTerm !== undefined) {\n        getList(1, perPage, debouncedSearchTerm);\n      }\n    },\n    [debouncedSearchTerm] // Only call effect if debounced search term changes\n  );\n\n  const getList = ({\n    page_number = page,\n    size = perPage,\n    search_key = searchTerm,\n  }) => {\n    setIsLoading(true);\n    axios\n      .post(\n        api.API_LIST_VAN_BANG_CHUYEN_MON +\n          `?page=${page_number}&per_page=${size}`,\n        { search_ten: search_key }\n      )\n      .then(async ({ data }) => {\n        setListVanBangChuyenMon(data?.results);\n        setTotalRows(data?.total);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  //validate thêm văn bằng chuyên môn\n  const [form, setForm] = useState({});\n  const [errors, setErrors] = useState({});\n  const setField = (field, value) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n    if (!!errors[field])\n      setErrors({\n        ...errors,\n        [field]: null,\n      });\n  };\n  const findFormErrors = () => {\n    const { ten } = form;\n    const newErrors = {};\n    // name errors\n    if (!ten || ten === \"\") newErrors.ten = \"Tên không được bỏ trống!\";\n\n    return newErrors;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // get our new errors\n    const newErrors = findFormErrors();\n    // Conditional logic:\n    if (Object.keys(newErrors).length > 0) {\n      console.log(newErrors);\n      // We got errors!\n      setErrors(newErrors);\n    } else {\n      // No errors! Put any logic here for the form submission!\n      showUpdate ? updateVanBangChuyenMon() : addVanBangChuyenMon();\n    }\n  };\n\n  // handle api\n  const addVanBangChuyenMon = async () => {\n    setIsLoading(true);\n    const { ten } = form;\n    const json = {\n      ten,\n    };\n    await axios\n      .post(api.API_VAN_BANG_CHUYEN_MON + \"_add\", json)\n      .then(async ({ data }) => {\n        console.log(\"data\", data);\n        resetState();\n        toast.success(\"Tạo văn bằng chuyên môn thành công\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        getList(1, perPage, \"\");\n        setIsLoading(false);\n        // navigate(0);\n      })\n      .catch((error) => {\n        console.log(\"error\", error?.response);\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const updateVanBangChuyenMon = async () => {\n    setIsLoading(true);\n    const { ten, id } = form;\n    const json = {\n      ten,\n    };\n    await axios\n      .put(api.API_VAN_BANG_CHUYEN_MON + \"/\" + id, json)\n      .then(async ({ data }) => {\n        resetState();\n        toast.success(\"Cập nhật văn bằng chuyên môn thành công\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        getList({});\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        console.log(\"error\", error?.response);\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const resetState = () => {\n    setForm({\n      ten: \"\",\n    });\n    setErrors({});\n    setShowUpdate(false);\n    const updatedData = listVanBangChuyenMon?.map((item) => {\n      return {\n        ...item,\n        toggleSelected: false,\n      };\n    });\n    setData(updatedData);\n  };\n\n  // DETAIL\n  const detail = async (data) => {\n    setForm({\n      ...data,\n    });\n    setId(data.id);\n    setShowUpdate(true);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    await setIsLoading(true);\n    axios\n      .post(\n        api.API_LIST_VAN_BANG_CHUYEN_MON +\n          `?page=${page}&per_page=${newPerPage}`,\n        {}\n      )\n      .then(({ data }) => {\n        if (data?.results) {\n          setListVanBangChuyenMon(data?.results);\n          setPerPage(newPerPage);\n        }\n      })\n      .catch(() => {})\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const deleteVBCM = () => {\n    axios\n      .delete(api.API_VAN_BANG_CHUYEN_MON + \"/\" + idDelete)\n      .then(async ({ data }) => {\n        await toast.success(data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        closeModalDelete();\n        resetState();\n        if (page == 1) {\n          getList({ page_number: 1 });\n        } else if (listVanBangChuyenMon?.length == 1) {\n          getList({ page_number: page - 1 });\n        } else {\n          getList({ page_number: page });\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\", error);\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n  const handlePageChange = (page) => {\n    setPage(page);\n    getList({ page_number: page });\n  };\n\n  //đổi màu khi selected\n  const [data, setData] = useState(listVanBangChuyenMon);\n  useEffect(() => {\n    setData(listVanBangChuyenMon);\n  }, [listVanBangChuyenMon]);\n\n  const handleRowClicked = (row) => {\n    setErrors({});\n    const updatedData = listVanBangChuyenMon?.map((item) => {\n      if (row.id !== item.id) {\n        return item;\n      }\n      return {\n        ...item,\n        toggleSelected: !item.toggleSelected,\n      };\n    });\n    setData(updatedData);\n  };\n\n  const paginationOptions = {\n    rowsPerPageText: \"Dòng hiển thị\",\n    rangeSeparatorText: \"trên\",\n  };\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: \"solid\",\n        borderTopWidth: \"1px\",\n        borderTopColor: \"#e0e0e0\",\n        borderBottomColor: \"#e0e0e0\",\n      },\n    },\n    headCells: {\n      style: {\n        color: \"#202124\",\n        fontSize: \"16px\",\n      },\n    },\n    rows: {\n      highlightOnHoverStyle: {\n        backgroundColor: \"rgb(230, 244, 244)\",\n        borderBottomColor: \"#FFFFFF\",\n        outline: \"1px solid #FFFFFF\",\n      },\n    },\n    pagination: {\n      style: {\n        border: \"none\",\n      },\n    },\n  };\n  const columns = [\n    {\n      name: \"Mã văn bằng chuyên môn\",\n      grow: 3,\n      selector: (row) => (\n        <div\n          onClick={() => {\n            detail(row);\n            handleRowClicked(row);\n          }}\n        >\n          <span>{row.ma_chuyen_mon}</span>\n        </div>\n      ),\n      style: {\n        color: \"#1251ff\",\n        fontSize: \"14px\",\n        fontWeight: 500,\n        width: 300,\n        cursor: \"pointer\",\n      },\n    },\n    {\n      name: \"Tên văn bằng chuyên môn\",\n      selector: (row) => <span>{row.ten}</span>,\n      grow: 8,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Trang thái\",\n      selector: (row) => <span>{row.trang_thai}</span>,\n      grow: 3,\n      cell: (row) => (\n        <td>\n          <Status status={row.trang_thai} />\n        </td>\n      ),\n    },\n    {\n      name: \"Thao tác\",\n      grow: 2,\n\n      cell: (row) => (\n        <div className=\"container my-3\">\n          <button\n            onClick={async () => {\n              await setIdDelete(row?.id);\n              showModalDelete();\n            }}\n            className=\"btn btn-icon btn-bg-light btn-color-danger btn-sm\"\n          >\n            <KTSVG\n              path=\"/media/icons/duotune/general/gen027.svg\"\n              className=\"svg-icon-3\"\n            />\n          </button>\n        </div>\n      ),\n    },\n  ];\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.toggleSelected,\n      style: {\n        backgroundColor: \"#f5f5f5\",\n        userSelect: \"none\",\n      },\n    },\n  ];\n  const cardBox = {\n    backgroundColor: \"#fff\",\n    backgroundClip: \"border-box\",\n    border: \"1px solid #e7eaed\",\n    padding: \"1.5rem\",\n    marginBottom: \"24px\",\n    borderRadius: \"0.5rem\",\n  };\n  return (\n    <KTCard>\n      <div className=\"page\">\n        <div className=\"container-fluid\">\n          <div className=\"fv-row mb-7 mt-6\">\n            {/* begin::Label */}\n            <label className=\"required fw-bold fs-6 mb-2\">\n              Tên văn bằng chuyên môn\n            </label>\n            {/* end::Label */}\n\n            {/* begin::Input */}\n            <div className=\"col-md-6\">\n              <input\n                placeholder=\"Nhập tên tìm kiếm...\"\n                type=\"text\"\n                name=\"name\"\n                className={clsx(\"form-control form-control-solid mb-3 mb-lg-0\")}\n                autoComplete=\"off\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n            </div>\n\n            {/* end::Input */}\n          </div>\n          <BlockUi tag=\"div\" blocking={isLoading} centerY={true} centerX={true}>\n            <div className=\"row\">\n              <div className=\"col-md-7\">\n                <div className=\"\" style={cardBox}>\n                  <DataTable\n                    noDataComponent={\n                      <img\n                        style={{ width: \"30%\", height: \"auto\" }}\n                        src=\"/media/nodata-found.svg\"\n                      />\n                    }\n                    sortServer\n                    progressPending={isLoading}\n                    columns={columns}\n                    data={data}\n                    customStyles={customStyles}\n                    pagination\n                    highlightOnHover\n                    pointerOnHover\n                    paginationServer\n                    paginationTotalRows={totalRows}\n                    onChangeRowsPerPage={handlePerRowsChange}\n                    onChangePage={handlePageChange}\n                    paginationComponentOptions={paginationOptions}\n                    conditionalRowStyles={conditionalRowStyles}\n                    // onRowClicked={(data) => {\n                    //   detail(data);\n                    //   handleRowClicked(data);\n                    // }}\n                    progressComponent={\n                      <div\n                        style={{\n                          padding: \"24px\",\n                        }}\n                      >\n                        <Oval\n                          arialLabel=\"loading-indicator\"\n                          color=\"#007bff\"\n                          height={40}\n                        />\n                      </div>\n                    }\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-5\">\n                <div className=\"\" style={cardBox}>\n                  <div className=\"\">\n                    <p className=\"font-weight-bold\">\n                      {showUpdate\n                        ? \"Cập nhật văn bằng chuyên môn\"\n                        : \"Tạo mới văn bằng chuyên môn\"}\n                    </p>\n                  </div>\n                  {showUpdate && (\n                    <div className=\"row mt-3\">\n                      <div className=\"col-4\">\n                        <p className=\"font-weight-bold\">\n                          Mã văn bằng chuyên môn\n                          <span className=\"text-danger\">*</span>\n                        </p>\n                      </div>\n                      <div className=\"col-8\">\n                        <Form.Control\n                          disabled={true}\n                          type=\"text\"\n                          placeholder=\"Nhập tên mã đối tượng\"\n                          style={{ fontSize: 14, fontWeight: 500 }}\n                          value={\n                            form.ma_chuyen_mon === null\n                              ? \"\"\n                              : form.ma_chuyen_mon\n                          }\n                        />\n                      </div>\n                    </div>\n                  )}\n\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      <p className=\"font-weight-bold\">\n                        Tên văn bằng chuyên môn\n                        <span className=\"text-danger\">*</span>\n                      </p>\n                    </div>\n                    <div className=\"col-8\">\n                      <Form.Control\n                        as=\"textarea\"\n                        rows={3}\n                        style={{ fontSize: 14, fontWeight: 500 }}\n                        value={form.ten === null ? \"\" : form.ten}\n                        placeholder=\"Nhập tên văn bằng chuyên môn\"\n                        className=\"form-control\"\n                        onChange={(e) => {\n                          setField(\"ten\", e.target.value);\n                        }}\n                        isInvalid={!!errors.ten}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.ten}\n                      </Form.Control.Feedback>\n                    </div>\n                  </div>\n\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      {showUpdate ? (\n                        <button\n                          className=\"btn text-white bg-blue2\"\n                          style={{ fontSize: \".9rem\" }}\n                          onClick={() => resetState()}\n                        >\n                          <i className=\"fas fa-sync-alt text-white\"></i> Làm mới\n                        </button>\n                      ) : null}\n                    </div>\n\n                    <div className=\"col-8\">\n                      <button\n                        className=\"btn text-white bg-blue2 mr-3\"\n                        style={{ fontSize: \".9rem\" }}\n                        onClick={(e) => {\n                          handleSubmit(e);\n                        }}\n                      >\n                        {showUpdate ? (\n                          <i className=\"fa fa-pencil-alt text-white\"></i>\n                        ) : (\n                          <i className=\"fas fa-save text-white\"></i>\n                        )}{\" \"}\n                        {showUpdate ? \"Cập nhật\" : \"Lưu văn bằng chuyên môn\"}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <PopupDelete\n              title=\"Bạn có đồng ý xóa văn bằng chuyên môn này không?\"\n              show={isvisibleDelete}\n              onHide={closeModalDelete}\n              onDetele={() => {\n                deleteVBCM();\n              }}\n            />\n          </BlockUi>\n        </div>\n      </div>\n    </KTCard>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-muc\\pham_vi_hoat_dong_kinh_doanh\\PhamViHoatDongKinhDoanh.js",["1839","1840","1841","1842","1843","1844"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport BlockUi from \"react-block-ui\";\nimport { Form } from \"react-bootstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Oval } from \"react-loader-spinner\";\n// import { useDispatch } from \"react-redux\";\nimport clsx from \"clsx\";\nimport { toast } from \"react-toastify\";\nimport ReactTooltip from \"react-tooltip\";\nimport { KTCard, KTSVG, useDebounce } from \"../../../../../_metronic/helpers\";\nimport Status from \"../../../../components/Status\";\nimport api from \"../../../../configs/api\";\nimport { PopupDelete } from \"../../popup/PopupDelete\";\n\nexport function PhamViHoatDongKinhDoanh() {\n  const [listPhamViHoatDongKinhDoanh, setListPhamViHoatDongKinhDoanh] =\n    useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n  const [page, setPage] = useState(1);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [stt, setStt] = useState(0);\n  const [trang_thai, setTrang_thai] = useState(true);\n\n  //open modal delete\n  const [isvisibleDelete, setIsvisibleDelete] = useState(false);\n  const [idDelete, setIdDelete] = useState(\"\");\n  const closeModalDelete = () => setIsvisibleDelete(false);\n  const showModalDelete = () => setIsvisibleDelete(true);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const debouncedSearchTerm = useDebounce(searchTerm, 1000);\n\n  useEffect(\n    () => {\n      if (debouncedSearchTerm !== undefined && searchTerm !== undefined) {\n        getList({ page_number: 1, search_key: debouncedSearchTerm });\n      }\n    },\n    [debouncedSearchTerm] // Only call effect if debounced search term changes\n  );\n\n  const getList = ({\n    page_number = page,\n    size = perPage,\n    search_key = searchTerm,\n  }) => {\n    setIsLoading(true);\n    axios\n      .post(\n        api.API_LIST_PHAM_VI_HOAT_DONG_KINH_DOANH +\n          `?page=${page_number}&per_page=${size}`,\n        { search_ten: search_key }\n      )\n      .then(async ({ data }) => {\n        setListPhamViHoatDongKinhDoanh(data?.results);\n        setTotalRows(data?.total);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  //validate thêm phạm vi hoạt động kinh doanh\n  const [form, setForm] = useState({});\n  const [errors, setErrors] = useState({});\n  const setField = (field, value) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n    if (!!errors[field])\n      setErrors({\n        ...errors,\n        [field]: null,\n      });\n  };\n  const findFormErrors = () => {\n    const { ten, chi_tiet, loai, stt, ten_in } = form;\n    const newErrors = {};\n    // name errors\n    if (!ten || ten === \"\") newErrors.ten = \"Tên không được bỏ trống!\";\n    if (!chi_tiet || chi_tiet === \"\")\n      newErrors.chi_tiet = \"Chi tiết không được bỏ trống!\";\n    if (!loai || loai === \"\") newErrors.loai = \"Loại không được bỏ trống!\";\n    if (!stt || stt === \"\") newErrors.stt = \"Số thứ tự không được bỏ trống!\";\n    if (!ten_in || ten_in === \"\")\n      newErrors.ten_in = \"Tên in không được bỏ trống!\";\n    return newErrors;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // get our new errors\n    const newErrors = findFormErrors();\n    // Conditional logic:\n    if (Object.keys(newErrors).length > 0) {\n      console.log(newErrors);\n      // We got errors!\n      setErrors(newErrors);\n    } else {\n      // No errors! Put any logic here for the form submission!\n      showUpdate\n        ? updatePhamViHoatDongKinhDoanh()\n        : addPhamViHoatDongKinhDoanh();\n    }\n  };\n\n  // handle api\n  const addPhamViHoatDongKinhDoanh = async () => {\n    setIsLoading(true);\n    const { ten, chi_tiet, loai, stt, ten_in } = form;\n    const json = {\n      ten,\n      chi_tiet,\n      loai,\n      stt,\n      ten_in,\n      trang_thai: trang_thai,\n    };\n    await axios\n      .post(api.API_PHAM_VI_HOAT_DONG_KINH_DOANH + \"_add\", json)\n      .then(async ({ data }) => {\n        resetState();\n        toast.success(\"Tạo phạm vi hoạt động kinh doanh thành công\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        getList({});\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        console.log(\"error\", error?.response);\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const updatePhamViHoatDongKinhDoanh = async () => {\n    setIsLoading(true);\n    const { ten, chi_tiet, loai, stt, ten_in, id } = form;\n    const json = {\n      ten,\n      chi_tiet,\n      loai,\n      stt,\n      ten_in,\n      trang_thai: trang_thai,\n    };\n    await axios\n      .put(api.API_PHAM_VI_HOAT_DONG_KINH_DOANH + \"/\" + id, json)\n      .then(async ({ data }) => {\n        resetState();\n        toast.success(\"Cập nhật phạm vi hoạt động kinh doanh thành công\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        getList({});\n      })\n      .catch((error) => {\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const resetState = () => {\n    setForm({\n      ten: \"\",\n      chi_tiet: \"\",\n      ten_in: \"\",\n      loai: \"\",\n      stt: \"\",\n    });\n    setErrors({});\n    setShowUpdate(false);\n    const updatedData = listPhamViHoatDongKinhDoanh?.map((item) => {\n      return {\n        ...item,\n        toggleSelected: false,\n      };\n    });\n    setData(updatedData);\n  };\n\n  // DETAIL\n  const detail = async (data) => {\n    setForm({\n      ...data,\n    });\n    setTrang_thai(data?.trang_thai);\n    setShowUpdate(true);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    await setIsLoading(true);\n    axios\n      .post(\n        api.API_LIST_PHAM_VI_HOAT_DONG_KINH_DOANH +\n          `?page=${page}&per_page=${newPerPage}`,\n        {}\n      )\n      .then(({ data }) => {\n        if (data?.results) {\n          setListPhamViHoatDongKinhDoanh(data?.results);\n          setPerPage(newPerPage);\n        }\n      })\n      .catch(() => {})\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const deleteVBCM = () => {\n    axios\n      .delete(api.API_PHAM_VI_HOAT_DONG_KINH_DOANH + \"/\" + idDelete)\n      .then(async ({ data }) => {\n        await toast.success(data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        closeModalDelete();\n        resetState();\n        if (page == 1) {\n          getList({ page_number: 1 });\n        } else if (listPhamViHoatDongKinhDoanh?.length == 1) {\n          getList({ page_number: page - 1 });\n        } else {\n          getList({ page_number: page });\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\", error);\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n  const handlePageChange = (page) => {\n    setPage(page);\n    getList({ page_number: page });\n  };\n\n  //đổi màu khi selected\n  const [data, setData] = useState(listPhamViHoatDongKinhDoanh);\n  useEffect(() => {\n    setData(listPhamViHoatDongKinhDoanh);\n  }, [listPhamViHoatDongKinhDoanh]);\n\n  const handleRowClicked = (row) => {\n    setErrors({});\n    const updatedData = listPhamViHoatDongKinhDoanh?.map((item) => {\n      if (row.id !== item.id) {\n        return item;\n      }\n      return {\n        ...item,\n        toggleSelected: !item.toggleSelected,\n      };\n    });\n    setData(updatedData);\n  };\n\n  const paginationOptions = {\n    rowsPerPageText: \"Dòng hiển thị\",\n    rangeSeparatorText: \"trên\",\n  };\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: \"solid\",\n        borderTopWidth: \"1px\",\n        borderTopColor: \"#e0e0e0\",\n        borderBottomColor: \"#e0e0e0\",\n      },\n    },\n    headCells: {\n      style: {\n        color: \"#202124\",\n        fontSize: \"16px\",\n      },\n    },\n    rows: {\n      highlightOnHoverStyle: {\n        backgroundColor: \"rgb(230, 244, 244)\",\n        borderBottomColor: \"#FFFFFF\",\n        outline: \"1px solid #FFFFFF\",\n      },\n    },\n    pagination: {\n      style: {\n        border: \"none\",\n      },\n    },\n  };\n  const columns = [\n    {\n      name: \"Mã\",\n      grow: 3,\n      selector: (row) => (\n        <div\n          onClick={() => {\n            detail(row);\n            handleRowClicked(row);\n          }}\n        >\n          <span>{row.ma_hoat_dong_kinh_doanh}</span>\n        </div>\n      ),\n      style: {\n        color: \"#1251ff\",\n        fontSize: \"14px\",\n        fontWeight: 500,\n        width: 300,\n        cursor: \"pointer\",\n      },\n    },\n    {\n      name: \"Tên\",\n      selector: (row) => (\n        <span data-tip={row?.ten}>\n          {row.ten}\n          <ReactTooltip place=\"top\" type=\"dark\" effect=\"float\" />\n        </span>\n      ),\n      grow: 8,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Trang thái\",\n      selector: (row) => <span>{row.trang_thai}</span>,\n      grow: 3,\n      cell: (row) => (\n        <td>\n          <Status status={row.trang_thai} />\n        </td>\n      ),\n    },\n    {\n      name: \"Thao tác\",\n      grow: 2,\n      cell: (row) => (\n        <div className=\"container my-3\">\n          <button\n            onClick={async () => {\n              await setIdDelete(row?.id);\n              showModalDelete();\n            }}\n            className=\"btn btn-icon btn-bg-light btn-color-danger btn-sm\"\n          >\n            <KTSVG\n              path=\"/media/icons/duotune/general/gen027.svg\"\n              className=\"svg-icon-3\"\n            />\n          </button>\n        </div>\n      ),\n    },\n  ];\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.toggleSelected,\n      style: {\n        backgroundColor: \"#f5f5f5\",\n        userSelect: \"none\",\n      },\n    },\n  ];\n  const cardBox = {\n    backgroundColor: \"#fff\",\n    backgroundClip: \"border-box\",\n    border: \"1px solid #e7eaed\",\n    padding: \"1.5rem\",\n    marginBottom: \"24px\",\n    borderRadius: \"0.5rem\",\n  };\n  return (\n    <KTCard>\n      <div className=\"page\">\n        <div className=\"container-fluid\">\n          <div className=\"fv-row mb-7 mt-6\">\n            {/* begin::Label */}\n            <label className=\"required fw-bold fs-6 mb-2\">\n              Tên phạm vi hoạt động kinh doanh\n            </label>\n            {/* end::Label */}\n\n            {/* begin::Input */}\n            <div className=\"col-md-6\">\n              <input\n                placeholder=\"Nhập tên tìm kiếm...\"\n                type=\"text\"\n                name=\"name\"\n                className={clsx(\"form-control form-control-solid mb-3 mb-lg-0\")}\n                autoComplete=\"off\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n            </div>\n\n            {/* end::Input */}\n          </div>\n          <BlockUi tag=\"div\" blocking={isLoading} centerY={true} centerX={true}>\n            <div className=\"row\">\n              <div className=\"col-md-8\">\n                <div className=\"\" style={cardBox}>\n                  <DataTable\n                    noDataComponent={\n                      <img\n                        style={{ width: \"30%\", height: \"auto\" }}\n                        src=\"/media/nodata-found.svg\"\n                      />\n                    }\n                    sortServer\n                    progressPending={isLoading}\n                    columns={columns}\n                    data={data}\n                    customStyles={customStyles}\n                    pagination\n                    highlightOnHover\n                    pointerOnHover\n                    paginationServer\n                    paginationTotalRows={totalRows}\n                    onChangeRowsPerPage={handlePerRowsChange}\n                    onChangePage={handlePageChange}\n                    paginationComponentOptions={paginationOptions}\n                    conditionalRowStyles={conditionalRowStyles}\n                    // onRowClicked={(data) => {\n                    //   detail(data);\n                    //   handleRowClicked(data);\n                    // }}\n                    progressComponent={\n                      <div\n                        style={{\n                          padding: \"24px\",\n                        }}\n                      >\n                        <Oval\n                          arialLabel=\"loading-indicator\"\n                          color=\"#007bff\"\n                          height={40}\n                        />\n                      </div>\n                    }\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-4\">\n                <div className=\"\" style={cardBox}>\n                  <div className=\"\">\n                    <p className=\"font-weight-bold\">\n                      {showUpdate\n                        ? \"Cập nhật phạm vi hoạt động kinh doanh\"\n                        : \"Tạo mới phạm vi hoạt động kinh doanh\"}\n                    </p>\n                  </div>\n                  {showUpdate && (\n                    <div className=\"row mt-3\">\n                      <div className=\"col-4\">\n                        <p className=\"font-weight-bold\">Mã</p>\n                      </div>\n                      <div className=\"col-8\">\n                        <Form.Control\n                          disabled={true}\n                          type=\"text\"\n                          placeholder=\"Nhập tên mã hoạt động kinh doanh\"\n                          style={{ fontSize: 14, fontWeight: 500 }}\n                          value={\n                            form.ma_hoat_dong_kinh_doanh === null\n                              ? \"\"\n                              : form.ma_hoat_dong_kinh_doanh\n                          }\n                        />\n                      </div>\n                    </div>\n                  )}\n\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      <p className=\"font-weight-bold\">\n                        Tên<span className=\"text-danger\">*</span>\n                      </p>\n                    </div>\n                    <div className=\"col-8\">\n                      <Form.Control\n                        as=\"textarea\"\n                        rows={3}\n                        placeholder=\"Nhập tên mã hoạt động kinh doanh\"\n                        style={{ fontSize: 14, fontWeight: 500 }}\n                        value={form.ten === null ? \"\" : form.ten}\n                        onChange={(e) => {\n                          setField(\"ten\", e.target.value);\n                        }}\n                        isInvalid={!!errors.ten}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.ten}\n                      </Form.Control.Feedback>\n                    </div>\n                  </div>\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      <p className=\"font-weight-bold\">\n                        Chi tiết<span className=\"text-danger\">*</span>\n                      </p>\n                    </div>\n                    <div className=\"col-8\">\n                      <Form.Control\n                        as=\"textarea\"\n                        rows={3}\n                        placeholder=\"Nhập chi tiết phạm vi hoạt động kinh doanh\"\n                        style={{ fontSize: 14, fontWeight: 500 }}\n                        value={form.chi_tiet === null ? \"\" : form.chi_tiet}\n                        onChange={async (e) => {\n                          await setField(\"chi_tiet\", e.target.value);\n                        }}\n                        isInvalid={!!errors.chi_tiet}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.chi_tiet}\n                      </Form.Control.Feedback>\n                    </div>\n                  </div>\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      <p className=\"font-weight-bold\">\n                        Loại<span className=\"text-danger\">*</span>\n                      </p>\n                    </div>\n                    <div className=\"col-8\">\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Nhập tên mã hoạt động kinh doanh\"\n                        style={{ fontSize: 14, fontWeight: 500 }}\n                        value={form.loai === null ? \"\" : form.loai}\n                        onChange={async (e) => {\n                          await setField(\"loai\", e.target.value);\n                        }}\n                        isInvalid={!!errors.loai}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.loai}\n                      </Form.Control.Feedback>\n                    </div>\n                  </div>\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      <p className=\"font-weight-bold\">\n                        STT <span className=\"text-danger\">*</span>\n                      </p>\n                    </div>\n                    <div className=\"col-8\">\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Nhập số thứ tự\"\n                        style={{ fontSize: 14, fontWeight: 500 }}\n                        value={form.stt === null ? \"\" : form.stt}\n                        onChange={async (e) => {\n                          await setField(\"stt\", e.target.value);\n                        }}\n                        isInvalid={!!errors.stt}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.stt}\n                      </Form.Control.Feedback>\n                    </div>\n                  </div>\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      <p className=\"font-weight-bold\">\n                        Tên in <span className=\"text-danger\">*</span>\n                      </p>\n                    </div>\n                    <div className=\"col-8\">\n                      <Form.Control\n                        as=\"textarea\"\n                        rows={3}\n                        placeholder=\"Nhập tên in\"\n                        style={{ fontSize: 14, fontWeight: 500 }}\n                        value={form.ten_in === null ? \"\" : form.ten_in}\n                        onChange={async (e) => {\n                          await setField(\"ten_in\", e.target.value);\n                        }}\n                        isInvalid={!!errors.ten_in}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.ten_in}\n                      </Form.Control.Feedback>\n                    </div>\n                  </div>\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      <label className=\"fw-bold fs-6 mb-2\">Trạng thái</label>\n                    </div>\n                    <div className=\"col-8\">\n                      <div className=\"form-check form-check-solid form-switch fv-row\">\n                        <input\n                          className=\"form-check-input w-45px h-30px\"\n                          type=\"checkbox\"\n                          id=\"trang_thai\"\n                          checked={trang_thai}\n                          onChange={(e) => {\n                            setTrang_thai(!trang_thai);\n                          }}\n                        />\n                        <label className=\"form-check-label\"></label>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      {showUpdate ? (\n                        <button\n                          className=\"btn text-white bg-blue2\"\n                          style={{ fontSize: \".9rem\" }}\n                          onClick={() => resetState()}\n                        >\n                          <i className=\"fas fa-sync-alt text-white\"></i> Làm mới\n                        </button>\n                      ) : null}\n                    </div>\n\n                    <div className=\"col-8\">\n                      <button\n                        className=\"btn text-white bg-blue2 mr-3\"\n                        style={{ fontSize: \".9rem\" }}\n                        onClick={(e) => {\n                          handleSubmit(e);\n                        }}\n                      >\n                        {showUpdate ? (\n                          <i className=\"fa fa-pencil-alt text-white\"></i>\n                        ) : (\n                          <i className=\"fas fa-save text-white\"></i>\n                        )}{\" \"}\n                        {showUpdate\n                          ? \"Cập nhật\"\n                          : \"Tạo phạm vi hoạt động kinh doanh\"}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <PopupDelete\n              title=\"Bạn có đồng ý xóa phạm vi hoạt động kinh doanh này không?\"\n              show={isvisibleDelete}\n              onHide={closeModalDelete}\n              onDetele={() => {\n                deleteVBCM();\n              }}\n            />\n          </BlockUi>\n        </div>\n      </div>\n    </KTCard>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-muc\\thanh-phan-ho-so\\ThanhPhanHoSo.js",["1845","1846","1847","1848"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport BlockUi from \"react-block-ui\";\nimport { Form } from \"react-bootstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Oval, TailSpin } from \"react-loader-spinner\";\nimport Select from \"react-select\";\nimport { toast } from \"react-toastify\";\nimport { KTCard, KTSVG, useDebounce } from \"../../../../../_metronic/helpers\";\nimport api from \"../../../../configs/api\";\nimport { PopupDelete } from \"../../popup/PopupDelete\";\nimport clsx from \"clsx\";\nimport ReactTooltip from \"react-tooltip\";\n\nexport function ThanhPhanHoSo() {\n  const [listTPHS, setListTPHS] = useState([]);\n  const [perPage, setPerPage] = useState(10);\n  const [isLoading, setIsLoading] = useState(true);\n  const [totalRows, setTotalRows] = useState(0);\n  const [selectedData, setSelectedData] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [id, setId] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [trang_thai, setTrang_thai] = useState(true);\n  const [idThuTuc, setIdThuTuc] = useState(null);\n\n  //open modal delete\n  const [isvisibleDelete, setIsvisibleDelete] = useState(false);\n  const [idDelete, setIdDelete] = useState(\"\");\n  const closeModalDelete = () => setIsvisibleDelete(false);\n  const showModalDelete = () => setIsvisibleDelete(true);\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const debouncedSearchTerm = useDebounce(searchTerm, 1000);\n\n  useEffect(\n    () => {\n      getListThuTuc();\n\n      if (debouncedSearchTerm !== undefined && searchTerm !== undefined) {\n        getList(1, perPage, debouncedSearchTerm);\n      }\n    },\n    [debouncedSearchTerm] // Only call effect if debounced search term changes\n  );\n\n  const getList = (page_number = page, size = perPage, search_key = \"\") => {\n    setIsLoading(true);\n    axios\n      .post(\n        api.API_GET_THANH_PHAN_HO_SO +\n          \"_get_list\" +\n          `?page=${page}&per_page=${size}`,\n        {\n          search_ten: search_key,\n        }\n      )\n      .then(async ({ data }) => {\n        setListTPHS(data?.results);\n        setTotalRows(data?.total);\n\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n  const getListThuTuc = (\n    page_number = page,\n    size = perPage,\n    search_key = \"\"\n  ) => {\n    axios\n      .post(api.API_GET_THU_TUC + `?page=${page}&per_page=${1000}`, {})\n      .then(async ({ data }) => {\n        console.log(\"thutuc\", data);\n        if (data) {\n          data?.results?.forEach((e) => {\n            e.label = e.ten;\n            e.value = e.id;\n            // delete e.ten;\n          });\n\n          let newArray = [];\n          newArray.unshift({\n            ma_thu_tuc: null,\n            ten: \"Chọn thủ tục\",\n            value: null,\n            label: \"Chọn thủ tục\",\n          });\n          newArray.push(...data?.results);\n\n          console.log(\"option\", newArray);\n\n          setOptions(newArray);\n          setSelectedData(newArray[0]);\n        }\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  //validate thêm chỉ định chuyên khoa\n  const [form, setForm] = useState({});\n  const [errors, setErrors] = useState({});\n  const setField = (field, value) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n    if (!!errors[field])\n      setErrors({\n        ...errors,\n        [field]: null,\n      });\n  };\n  const findFormErrors = () => {\n    const { ten } = form;\n    const newErrors = {};\n    // name errors\n    if (!ten || ten === \"\") newErrors.ten = \"Tên không được bỏ trống!\";\n    if (!idThuTuc || idThuTuc === \"\")\n      newErrors.idThuTuc = \"Vui lòng chọn thủ tục!\";\n\n    return newErrors;\n  };\n\n  // handle api\n  const addTPHS = async (e) => {\n    e.preventDefault();\n    // get our new errors\n    const newErrors = findFormErrors();\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n    } else {\n      setIsLoading(true);\n      const { ten } = form;\n      const json = {\n        ten,\n        trang_thai,\n        thu_tuc_id: idThuTuc,\n      };\n      await axios\n        .post(api.API_GET_THANH_PHAN_HO_SO + \"_add\", json)\n        .then(async ({ data }) => {\n          console.log(\"data\", data);\n          resetState();\n          toast.success(data?.msg, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            toastId: \"success\",\n          });\n          getList(1, perPage, \"\");\n          setIsLoading(false);\n          // navigate(0);\n        })\n        .catch((error) => {\n          console.log(\"error\", error?.response);\n          toast.error(error?.data?.errors, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            toastId: \"error\",\n          });\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  };\n\n  const updateTPHS = async (e) => {\n    e.preventDefault();\n    // get our new errors\n    const newErrors = findFormErrors();\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n    } else {\n      setIsLoading(true);\n      const { ten, id } = form;\n      const json = {\n        ten,\n        trang_thai,\n        thu_tuc_id: idThuTuc,\n      };\n      await axios\n        .put(api.API_GET_THANH_PHAN_HO_SO + \"/\" + id, json)\n        .then(async ({ data }) => {\n          console.log(\"data\", data);\n          resetState();\n          toast.success(data?.msg, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            toastId: \"success\",\n          });\n          getList(1, perPage, \"\");\n          setIsLoading(false);\n          // navigate(0);\n        })\n        .catch((error) => {\n          console.log(\"error\", error?.response);\n          toast.error(error?.data?.errors, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            toastId: \"error\",\n          });\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  };\n\n  const resetState = async () => {\n    await setPerPage(10);\n    await setTotalRows(0);\n    await setForm({\n      ten: \"\",\n    });\n    await setTrang_thai(true);\n    await setErrors({});\n    await setId(\"\");\n    await setShowUpdate(false);\n    await setOptions([]);\n    await setIdThuTuc(null);\n\n    getListThuTuc();\n  };\n  console.log(\"trang_thai\", trang_thai);\n  // DETAIL\n  const detail = async (data) => {\n    setForm({\n      ...data,\n    });\n    setId(data.id);\n    setTrang_thai(data.trang_thai);\n    let thutuc = options.find((e) => e.value === data.thu_tuc.id);\n    console.log(\"thutuc\", thutuc);\n    setSelectedData(thutuc);\n    setShowUpdate(true);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    await setIsLoading(true);\n    axios\n      .post(\n        api.API_GET_THANH_PHAN_HO_SO +\n          \"_get_list\" +\n          `?page=${page}&per_page=${newPerPage}`,\n        {\n          ten: searchTerm,\n        }\n      )\n      .then(({ data }) => {\n        if (data?.results) {\n          setListTPHS(data?.results);\n          setPerPage(newPerPage);\n        }\n      })\n      .catch(() => {})\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const deleteTPHS = () => {\n    const json = {\n      id: idDelete,\n    };\n    console.log(\"123213\", json);\n    axios\n      .delete(api.API_GET_THANH_PHAN_HO_SO + \"/\" + idDelete, {})\n      .then(async ({ data }) => {\n        console.log(\"data delete success\", data);\n        await toast.success(data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        closeModalDelete();\n        resetState();\n        if (page === 1) {\n          getList({ page_number: 1 });\n        } else if (listTPHS?.length === 1) {\n          getList({ page_number: page - 1 });\n        } else {\n          getList({ page_number: page });\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\", error);\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n  const handlePageChange = (page) => {\n    setPage(page);\n    getList(page);\n  };\n  //đổi màu khi selected\n  const [data, setData] = useState(listTPHS);\n  useEffect(() => {\n    setData(listTPHS);\n  }, [listTPHS]);\n  const handleRowClicked = (row) => {\n    const updatedData = listTPHS?.map((item) => {\n      if (row.id !== item.id) {\n        return item;\n      }\n      return {\n        ...item,\n        toggleSelected: !item.toggleSelected,\n      };\n    });\n    setData(updatedData);\n  };\n  const formatGroupLabel = (listTemp) => (\n    <div style={groupStyles}>\n      <span>{listTemp.ten}</span>\n    </div>\n  );\n  const groupStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  };\n  const paginationOptions = {\n    rowsPerPageText: \"Dòng hiển thị\",\n    rangeSeparatorText: \"trên\",\n  };\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: \"solid\",\n        borderTopWidth: \"1px\",\n        borderTopColor: \"#e0e0e0\",\n        borderBottomColor: \"#e0e0e0\",\n      },\n    },\n    headCells: {\n      style: {\n        color: \"#202124\",\n        fontSize: \"16px\",\n      },\n    },\n    rows: {\n      highlightOnHoverStyle: {\n        backgroundColor: \"rgb(230, 244, 244)\",\n        borderBottomColor: \"#FFFFFF\",\n        outline: \"1px solid #FFFFFF\",\n      },\n    },\n    pagination: {\n      style: {\n        border: \"none\",\n      },\n    },\n  };\n  const columns = [\n    {\n      name: \"Mã thành phần\",\n      grow: 1,\n      selector: (row) => (\n        <div\n          onClick={() => {\n            detail(row);\n            handleRowClicked(row);\n          }}\n        >\n          <span>{row.ma_tp_ho_so}</span>\n        </div>\n      ),\n      style: {\n        color: \"#1251ff\",\n        fontSize: \"14px\",\n        fontWeight: 500,\n        width: 300,\n        cursor: \"pointer\",\n      },\n    },\n    {\n      name: \"Mã thủ tục\",\n      selector: (row) => <span>{row.thu_tuc.ma_thu_tuc}</span>,\n      grow: 1,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n\n    {\n      name: \"Tên thành phần\",\n      selector: (row) => (\n        <span data-tip={row?.ten}>\n          {row.ten}\n          <ReactTooltip place=\"top\" type=\"dark\" effect=\"float\" />\n        </span>\n      ),\n      grow: 6,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n\n    {\n      name: \"Trang thái\",\n      selector: (row) => <span>{row.trang_thai}</span>,\n      grow: 1,\n      cell: (row) => (\n        <td>\n          {row.trang_thai ? (\n            <span className=\"badge badge-light-success fs-7 fw-bold\">\n              Hoạt động\n            </span>\n          ) : (\n            <span className=\"badge badge-light-dark fs-7 fw-bold\">\n              Không hoạt động\n            </span>\n          )}\n        </td>\n      ),\n    },\n\n    {\n      name: \"Thao tác\",\n      grow: 1,\n\n      cell: (row) => (\n        <div className=\"container my-3\">\n          <a\n            onClick={async () => {\n              await setIdDelete(row?.id);\n              showModalDelete();\n            }}\n            className=\"btn btn-icon btn-bg-light btn-color-danger btn-sm\"\n          >\n            <KTSVG\n              path=\"/media/icons/duotune/general/gen027.svg\"\n              className=\"svg-icon-3\"\n            />\n          </a>\n        </div>\n      ),\n    },\n  ];\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.toggleSelected,\n      style: {\n        backgroundColor: \"#f5f5f5\",\n        userSelect: \"none\",\n      },\n    },\n  ];\n  const cardBox = {\n    backgroundColor: \"#fff\",\n    backgroundClip: \"border-box\",\n    border: \"1px solid #e7eaed\",\n    padding: \"1.5rem\",\n    marginBottom: \"24px\",\n    borderRadius: \"0.5rem\",\n  };\n  return (\n    <KTCard>\n      <div className=\"page\">\n        <div className=\"container-fluid\">\n          <div className=\"fv-row mb-7 mt-6\">\n            {/* begin::Label */}\n            <label className=\"fw-bold fs-6 mb-2\">Tên thành phần hồ sơ</label>\n            {/* end::Label */}\n\n            {/* begin::Input */}\n            <div className=\"col-md-6\">\n              <input\n                placeholder=\"Nhập tên tìm kiếm...\"\n                type=\"text\"\n                name=\"name\"\n                className={clsx(\"form-control form-control-solid mb-3 mb-lg-0\")}\n                autoComplete=\"off\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n            </div>\n\n            {/* end::Input */}\n          </div>\n          <BlockUi\n            tag=\"div\"\n            // blocking={!isLoading}\n            loader={\n              <TailSpin\n                arialLabel=\"loading-indicator\"\n                height={60}\n                width={60}\n                strokeWidth={2}\n                strokeWidthSecondary={1}\n                color=\"blue\"\n                secondaryColor=\"blue\"\n                wrapperclassName={\"d-inline-flex\"}\n              />\n            }\n          >\n            <div className=\"row\">\n              <div className=\"col-md-8\">\n                <div className=\"\" style={cardBox}>\n                  <DataTable\n                    noDataComponent={\n                      <img\n                        style={{ width: \"30%\", height: \"auto\" }}\n                        src=\"/media/nodata-found.svg\"\n                      />\n                    }\n                    sortServer\n                    progressPending={isLoading}\n                    columns={columns}\n                    data={data}\n                    customStyles={customStyles}\n                    pagination\n                    highlightOnHover\n                    pointerOnHover\n                    paginationServer\n                    paginationTotalRows={totalRows}\n                    onChangeRowsPerPage={handlePerRowsChange}\n                    onChangePage={handlePageChange}\n                    paginationComponentOptions={paginationOptions}\n                    conditionalRowStyles={conditionalRowStyles}\n                    // onRowClicked={(data) => {\n                    //   detail(data);\n                    //   handleRowClicked(data);\n                    // }}\n                    progressComponent={\n                      <div\n                        style={{\n                          padding: \"24px\",\n                        }}\n                      >\n                        <Oval\n                          arialLabel=\"loading-indicator\"\n                          color=\"#007bff\"\n                          height={40}\n                        />\n                      </div>\n                    }\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-4\">\n                <div className=\"\" style={cardBox}>\n                  <div className=\"\">\n                    <label className=\"fw-bold fs-6 mb-2\">\n                      Tạo mới/ cập nhật thành phần hồ sơ.\n                    </label>\n                  </div>\n                  {showUpdate && (\n                    <div className=\"row mt-3\">\n                      <div className=\"col-4\">\n                        <label className=\"required fw-bold fs-6 mb-2\">\n                          Mã thành phần\n                        </label>\n                      </div>\n                      <div className=\"col-8\">\n                        <Form.Control\n                          disabled={true}\n                          type=\"text\"\n                          placeholder=\"Nhập mã hồ sơ\"\n                          style={{ fontSize: 14, fontWeight: 500 }}\n                          value={\n                            form.ma_tp_ho_so === null ? \"\" : form.ma_tp_ho_so\n                          }\n                        />\n                      </div>\n                    </div>\n                  )}\n\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      <label className=\"required fw-bold fs-6 mb-2\">\n                        Tên thành phần\n                      </label>\n                    </div>\n                    <div className=\"col-8\">\n                      <Form.Control\n                        as=\"textarea\"\n                        rows={3}\n                        placeholder=\"Nhập tên hồ sơ\"\n                        style={{ fontSize: 14, fontWeight: 500 }}\n                        value={form.ten === null ? \"\" : form.ten}\n                        onChange={(e) => {\n                          setField(\"ten\", e.target.value);\n                        }}\n                        isInvalid={!!errors.ten}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.ten}\n                      </Form.Control.Feedback>\n                    </div>\n                  </div>\n\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      <label className=\"required fw-bold fs-6 mb-2\">\n                        Chọn thủ tục\n                      </label>\n                    </div>\n                    <div className=\"col-8\">\n                      <Select\n                        value={selectedData}\n                        key={\"id\"}\n                        options={options}\n                        formatGroupLabel={formatGroupLabel}\n                        onChange={async (data) => {\n                          await setIdThuTuc(data?.id);\n                          setSelectedData(data);\n                          console.log(\"onchange\", data);\n                        }}\n                      />\n                      {idThuTuc == null ? (\n                        <span className=\"text-danger\" style={{ fontSize: 12 }}>\n                          {errors?.idThuTuc}\n                        </span>\n                      ) : null}\n                    </div>\n                  </div>\n\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      <label className=\"fw-bold fs-6 mb-2\">Trạng thái</label>\n                    </div>\n                    <div className=\"col-8\">\n                      <div className=\"form-check form-check-solid form-switch fv-row\">\n                        <input\n                          className=\"form-check-input w-45px h-30px\"\n                          type=\"checkbox\"\n                          id=\"trang_thai\"\n                          // value={trang_thai}\n                          checked={trang_thai}\n                          onChange={(e) => {\n                            setTrang_thai(!trang_thai);\n                          }}\n                        />\n                        <label className=\"form-check-label\"></label>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row mt-5\">\n                    <div className=\"col-4\">\n                      {showUpdate ? (\n                        <button\n                          className=\"btn text-white bg-blue2\"\n                          style={{ fontSize: \".9rem\" }}\n                          onClick={(e) => {\n                            resetState();\n                            getList(1, perPage, \"\");\n                          }}\n                        >\n                          <i className=\"fas fa-sync-alt text-white\"></i> Làm mới\n                        </button>\n                      ) : null}\n                    </div>\n\n                    <div className=\"col-8\">\n                      <button\n                        className=\"btn text-white bg-blue2 mr-3\"\n                        style={{ fontSize: \".9rem\" }}\n                        onClick={(e) => {\n                          showUpdate ? updateTPHS(e) : addTPHS(e);\n                        }}\n                      >\n                        {showUpdate ? (\n                          <i className=\"fa fa-pencil-alt text-white\"></i>\n                        ) : (\n                          <i className=\"fas fa-save text-white\"></i>\n                        )}{\" \"}\n                        {showUpdate ? \"Cập nhật\" : \"Lưu thành phần hồ sơ\"}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <PopupDelete\n              title=\"Bạn có đồng ý xóa thành phần hồ sơ này không?\"\n              show={isvisibleDelete}\n              onHide={closeModalDelete}\n              onDetele={() => {\n                deleteTPHS();\n              }}\n            />\n          </BlockUi>\n        </div>\n      </div>\n    </KTCard>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-muc\\vi-tri-hanh-nghe\\ViTriHanhNghe.js",["1849","1850","1851","1852"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport BlockUi from \"react-block-ui\";\nimport { Form } from \"react-bootstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Oval } from \"react-loader-spinner\";\n// import { useDispatch } from \"react-redux\";\nimport clsx from \"clsx\";\nimport { toast } from \"react-toastify\";\nimport { KTCard, KTSVG, useDebounce } from \"../../../../../_metronic/helpers\";\nimport Status from \"../../../../components/Status\";\nimport api from \"../../../../configs/api\";\nimport { PopupDelete } from \"../../popup/PopupDelete\";\n\nexport function ViTriHanhNghe() {\n  const [listViTriHanhNghe, setListViTriHanhNghe] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n  const [page, setPage] = useState(1);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [trang_thai, setTrang_thai] = useState(true);\n\n  //open modal delete\n  const [isvisibleDelete, setIsvisibleDelete] = useState(false);\n  const [idDelete, setIdDelete] = useState(\"\");\n  const closeModalDelete = () => setIsvisibleDelete(false);\n  const showModalDelete = () => setIsvisibleDelete(true);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const debouncedSearchTerm = useDebounce(searchTerm, 1000);\n\n  useEffect(\n    () => {\n      if (debouncedSearchTerm !== undefined && searchTerm !== undefined) {\n        getList(1, perPage, debouncedSearchTerm);\n      }\n    },\n    [debouncedSearchTerm] // Only call effect if debounced search term changes\n  );\n\n  const getList = ({\n    page_number = page,\n    size = perPage,\n    search_key = searchTerm,\n  }) => {\n    setIsLoading(true);\n    axios\n      .post(\n        api.API_LIST_VI_TRI_HANH_NGHE + `?page=${page_number}&per_page=${size}`,\n        { search_ten: search_key }\n      )\n      .then(async ({ data }) => {\n        setListViTriHanhNghe(data?.results);\n        setTotalRows(data?.total);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  //validate thêm vị trí hành nghề\n  const [form, setForm] = useState({});\n  const [errors, setErrors] = useState({});\n  const setField = (field, value) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n    if (!!errors[field])\n      setErrors({\n        ...errors,\n        [field]: null,\n      });\n  };\n  const findFormErrors = () => {\n    const { ten } = form;\n    const newErrors = {};\n    // name errors\n    if (!ten || ten === \"\") newErrors.ten = \"Tên không được bỏ trống!\";\n    return newErrors;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // get our new errors\n    const newErrors = findFormErrors();\n    // Conditional logic:\n    if (Object.keys(newErrors).length > 0) {\n      console.log(newErrors);\n      // We got errors!\n      setErrors(newErrors);\n    } else {\n      // No errors! Put any logic here for the form submission!\n      showUpdate ? updateViTriHanhNghe() : addViTriHanhNghe();\n    }\n  };\n\n  // handle api\n  const addViTriHanhNghe = async () => {\n    setIsLoading(true);\n    const { ten, loai, rut_gon } = form;\n    const json = {\n      ten,\n      loai,\n      rut_gon,\n      trang_thai: trang_thai,\n    };\n    await axios\n      .post(api.API_VI_TRI_HANH_NGHE + \"_add\", json)\n      .then(async ({ data }) => {\n        resetState();\n        toast.success(\"Tạo vị trí hành nghề thành công\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        getList({ page_number: 1 });\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        console.log(\"error\", error?.response);\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const updateViTriHanhNghe = async () => {\n    setIsLoading(true);\n    const { ten, loai, rut_gon, id } = form;\n    const json = {\n      ten,\n      loai,\n      rut_gon,\n      trang_thai: trang_thai,\n    };\n    await axios\n      .put(api.API_VI_TRI_HANH_NGHE + \"/\" + id, json)\n      .then(async ({ data }) => {\n        resetState();\n        toast.success(\"Cập nhật vị trí hành nghề thành công\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        getList({});\n      })\n      .catch((error) => {\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const resetState = () => {\n    setForm({\n      ten: \"\",\n      rut_gon: \"\",\n      loai: \"\",\n    });\n    setErrors({});\n    setShowUpdate(false);\n    const updatedData = listViTriHanhNghe?.map((item) => {\n      return {\n        ...item,\n        toggleSelected: false,\n      };\n    });\n    setData(updatedData);\n  };\n\n  // DETAIL\n  const detail = async (data) => {\n    setForm({\n      ...data,\n    });\n    setTrang_thai(data?.trang_thai);\n    setShowUpdate(true);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    await setIsLoading(true);\n    axios\n      .post(\n        api.API_LIST_NOI_TOT_NGHIEP + `?page=${page}&per_page=${newPerPage}`,\n        {}\n      )\n      .then(({ data }) => {\n        if (data?.results) {\n          setListViTriHanhNghe(data?.results);\n          setPerPage(newPerPage);\n        }\n      })\n      .catch(() => {})\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const deleteNTN = () => {\n    axios\n      .delete(api.API_VI_TRI_HANH_NGHE + \"/\" + idDelete)\n      .then(async ({ data }) => {\n        await toast.success(data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        closeModalDelete();\n        resetState();\n        if (page == 1) {\n          getList({ page_number: 1 });\n        } else if (listViTriHanhNghe?.length == 1) {\n          getList({ page_number: page - 1 });\n        } else {\n          getList({ page_number: page });\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\", error);\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n  const handlePageChange = (page) => {\n    setPage(page);\n    getList({ page_number: page });\n  };\n\n  //đổi màu khi selected\n  const [data, setData] = useState(listViTriHanhNghe);\n  useEffect(() => {\n    setData(listViTriHanhNghe);\n  }, [listViTriHanhNghe]);\n\n  const handleRowClicked = (row) => {\n    setErrors({});\n    const updatedData = listViTriHanhNghe?.map((item) => {\n      if (row.id !== item.id) {\n        return item;\n      }\n      return {\n        ...item,\n        toggleSelected: !item.toggleSelected,\n      };\n    });\n    setData(updatedData);\n  };\n\n  const paginationOptions = {\n    rowsPerPageText: \"Dòng hiển thị\",\n    rangeSeparatorText: \"trên\",\n  };\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: \"solid\",\n        borderTopWidth: \"1px\",\n        borderTopColor: \"#e0e0e0\",\n        borderBottomColor: \"#e0e0e0\",\n      },\n    },\n    headCells: {\n      style: {\n        color: \"#202124\",\n        fontSize: \"16px\",\n      },\n    },\n    rows: {\n      highlightOnHoverStyle: {\n        backgroundColor: \"rgb(230, 244, 244)\",\n        borderBottomColor: \"#FFFFFF\",\n        outline: \"1px solid #FFFFFF\",\n      },\n    },\n    pagination: {\n      style: {\n        border: \"none\",\n      },\n    },\n  };\n  const columns = [\n    {\n      name: \"Mã\",\n      grow: 3,\n      selector: (row) => (\n        <div\n          onClick={() => {\n            detail(row);\n            handleRowClicked(row);\n          }}\n        >\n          <span>{row.ma_hanh_nghe}</span>\n        </div>\n      ),\n      style: {\n        color: \"#1251ff\",\n        fontSize: \"14px\",\n        fontWeight: 500,\n        width: 300,\n        cursor: \"pointer\",\n      },\n    },\n    {\n      name: \"Tên\",\n      selector: (row) => <span>{row.ten}</span>,\n      grow: 8,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Trang thái\",\n      selector: (row) => <span>{row.trang_thai}</span>,\n      grow: 3,\n      cell: (row) => (\n        <td>\n          <Status status={row.trang_thai} />\n        </td>\n      ),\n    },\n    {\n      name: \"Thao tác\",\n      grow: 2,\n      cell: (row) => (\n        <div className=\"container my-3\">\n          <button\n            onClick={async () => {\n              await setIdDelete(row?.id);\n              showModalDelete();\n            }}\n            className=\"btn btn-icon btn-bg-light btn-color-danger btn-sm\"\n          >\n            <KTSVG\n              path=\"/media/icons/duotune/general/gen027.svg\"\n              className=\"svg-icon-3\"\n            />\n          </button>\n        </div>\n      ),\n    },\n  ];\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.toggleSelected,\n      style: {\n        backgroundColor: \"#f5f5f5\",\n        userSelect: \"none\",\n      },\n    },\n  ];\n  const cardBox = {\n    backgroundColor: \"#fff\",\n    backgroundClip: \"border-box\",\n    border: \"1px solid #e7eaed\",\n    padding: \"1.5rem\",\n    marginBottom: \"24px\",\n    borderRadius: \"0.5rem\",\n  };\n  return (\n    <KTCard>\n      <div className=\"page\">\n        <div className=\"container-fluid\">\n          <div className=\"fv-row mb-7 mt-6\">\n            {/* begin::Label */}\n            <label className=\"required fw-bold fs-6 mb-2\">\n              Tên vị trí hành nghề\n            </label>\n            {/* end::Label */}\n\n            {/* begin::Input */}\n            <div className=\"col-md-6\">\n              <input\n                placeholder=\"Nhập tên tìm kiếm...\"\n                type=\"text\"\n                name=\"name\"\n                className={clsx(\"form-control form-control-solid mb-3 mb-lg-0\")}\n                autoComplete=\"off\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n            </div>\n\n            {/* end::Input */}\n          </div>\n          <BlockUi tag=\"div\" blocking={isLoading} centerY={true} centerX={true}>\n            <div className=\"row\">\n              <div className=\"col-md-8\">\n                <div className=\"\" style={cardBox}>\n                  <DataTable\n                    noDataComponent={\n                      <img\n                        style={{ width: \"30%\", height: \"auto\" }}\n                        src=\"/media/nodata-found.svg\"\n                      />\n                    }\n                    sortServer\n                    progressPending={isLoading}\n                    columns={columns}\n                    data={data}\n                    customStyles={customStyles}\n                    pagination\n                    highlightOnHover\n                    pointerOnHover\n                    paginationServer\n                    paginationTotalRows={totalRows}\n                    onChangeRowsPerPage={handlePerRowsChange}\n                    onChangePage={handlePageChange}\n                    paginationComponentOptions={paginationOptions}\n                    conditionalRowStyles={conditionalRowStyles}\n                    // onRowClicked={(data) => {\n                    //   detail(data);\n                    //   handleRowClicked(data);\n                    // }}\n                    progressComponent={\n                      <div\n                        style={{\n                          padding: \"24px\",\n                        }}\n                      >\n                        <Oval\n                          arialLabel=\"loading-indicator\"\n                          color=\"#007bff\"\n                          height={40}\n                        />\n                      </div>\n                    }\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-4\">\n                <div className=\"\" style={cardBox}>\n                  <div className=\"\">\n                    <p className=\"font-weight-bold\">\n                      {showUpdate\n                        ? \"Cập nhật vị trí hành nghề\"\n                        : \"Tạo mới vị trí hành nghề\"}\n                    </p>\n                  </div>\n\n                  {showUpdate && (\n                    <div className=\"row mt-3\">\n                      <div className=\"col-4\">\n                        <p className=\"font-weight-bold\">\n                          Mã<span className=\"text-danger\">*</span>\n                        </p>\n                      </div>\n                      <div className=\"col-8\">\n                        <Form.Control\n                          disabled={true}\n                          type=\"text\"\n                          placeholder=\"Nhập tên mã vị trí hành nghề\"\n                          style={{ fontSize: 14, fontWeight: 500 }}\n                          value={\n                            form.ma_hanh_nghe === null ? \"\" : form.ma_hanh_nghe\n                          }\n                        />\n                      </div>\n                    </div>\n                  )}\n\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      <p className=\"font-weight-bold\">\n                        Tên<span className=\"text-danger\">*</span>\n                      </p>\n                    </div>\n                    <div className=\"col-8\">\n                      <Form.Control\n                        as=\"textarea\"\n                        rows={3}\n                        placeholder=\"Nhập tên mã vị trí hành nghề\"\n                        style={{ fontSize: 14, fontWeight: 500 }}\n                        value={form.ten === null ? \"\" : form.ten}\n                        onChange={(e) => {\n                          setField(\"ten\", e.target.value);\n                        }}\n                        isInvalid={!!errors.ten}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.ten}\n                      </Form.Control.Feedback>\n                    </div>\n                  </div>\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      <p className=\"font-weight-bold\">Rút gọn</p>\n                    </div>\n                    <div className=\"col-8\">\n                      <Form.Control\n                        as=\"textarea\"\n                        rows={3}\n                        placeholder=\"Nhập rút gọn\"\n                        style={{ fontSize: 14, fontWeight: 500 }}\n                        value={form.rut_gon === null ? \"\" : form.rut_gon}\n                        onChange={(e) => {\n                          setField(\"rut_gon\", e.target.value);\n                        }}\n                        isInvalid={!!errors.rut_gon}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.rut_gon}\n                      </Form.Control.Feedback>\n                    </div>\n                  </div>\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      <p className=\"font-weight-bold\">Loại</p>\n                    </div>\n                    <div className=\"col-8\">\n                      <Form.Control\n                        placeholder=\"Nhập loại\"\n                        style={{ fontSize: 14, fontWeight: 500 }}\n                        value={form.loai === null ? \"\" : form.loai}\n                        onChange={(e) => {\n                          setField(\"loai\", e.target.value);\n                        }}\n                        isInvalid={!!errors.loai}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.loai}\n                      </Form.Control.Feedback>\n                    </div>\n                  </div>\n\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      <label className=\"fw-bold fs-6 mb-2\">Trạng thái</label>\n                    </div>\n                    <div className=\"col-8\">\n                      <div className=\"form-check form-check-solid form-switch fv-row\">\n                        <input\n                          className=\"form-check-input w-45px h-30px\"\n                          type=\"checkbox\"\n                          id=\"trang_thai\"\n                          checked={trang_thai}\n                          onChange={(e) => {\n                            setTrang_thai(!trang_thai);\n                          }}\n                        />\n                        <label className=\"form-check-label\"></label>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row mt-3\">\n                    <div className=\"col-4\">\n                      {showUpdate ? (\n                        <button\n                          className=\"btn text-white bg-blue2\"\n                          style={{ fontSize: \".9rem\" }}\n                          onClick={() => resetState()}\n                        >\n                          <i className=\"fas fa-sync-alt text-white\"></i> Làm mới\n                        </button>\n                      ) : null}\n                    </div>\n\n                    <div className=\"col-8\">\n                      <button\n                        className=\"btn text-white bg-blue2 mr-3\"\n                        style={{ fontSize: \".9rem\" }}\n                        onClick={(e) => {\n                          handleSubmit(e);\n                        }}\n                      >\n                        {showUpdate ? (\n                          <i className=\"fa fa-pencil-alt text-white\"></i>\n                        ) : (\n                          <i className=\"fas fa-save text-white\"></i>\n                        )}{\" \"}\n                        {showUpdate ? \"Cập nhật\" : \"Tạo vị trí hành nghề\"}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <PopupDelete\n              title=\"Bạn có đồng ý xóa vị trí hành nghề này không?\"\n              show={isvisibleDelete}\n              onHide={closeModalDelete}\n              onDetele={() => {\n                deleteNTN();\n              }}\n            />\n          </BlockUi>\n        </div>\n      </div>\n    </KTCard>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\nop-ho-so\\danh-sach-ho-so\\DanhSachHoSo.js",["1853","1854","1855","1856","1857","1858","1859","1860","1861","1862","1863","1864","1865","1866","1867","1868","1869","1870","1871","1872","1873","1874","1875","1876"],[],"import axios from \"axios\";\nimport moment from \"moment\";\nimport { useEffect, useState } from \"react\";\nimport DataTable from \"react-data-table-component\";\nimport { Oval } from \"react-loader-spinner\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { KTCard, KTSVG, useDebounce } from \"../../../../../_metronic/helpers\";\nimport api from \"../../../../configs/api\";\nimport { TrangThaiHoSo } from \"../../../../data\";\nimport { useAuth } from \"../../auth\";\n\nexport function DanhSachHoSo() {\n  const { roleUser, currentUser } = useAuth();\n  const navigate = useNavigate();\n  const [listThuTuc, setListThuTuc] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n  const [page, setPage] = useState(1);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [stt, setStt] = useState(0);\n  const [trang_thai, setTrang_thai] = useState(true);\n  //open modal delete\n  const [isvisibleDelete, setIsvisibleDelete] = useState(false);\n  const [idDelete, setIdDelete] = useState(\"\");\n  const closeModalDelete = () => setIsvisibleDelete(false);\n  const showModalDelete = () => setIsvisibleDelete(true);\n  //modal\n  const [showAdd, setShowAdd] = useState(false);\n  const [edit, setEdit] = useState(false);\n  //modal thêm danh mục\n  const closeModal = () => setShowAdd(false);\n  const showModal = () => setShowAdd(true);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const debouncedSearchTerm = useDebounce(searchTerm, 1000);\n\n  useEffect(\n    () => {\n      if (debouncedSearchTerm !== undefined && searchTerm !== undefined) {\n        getList(1, perPage, debouncedSearchTerm);\n      }\n    },\n    [debouncedSearchTerm] // Only call effect if debounced search term changes\n  );\n\n  const getList = ({\n    page_number = page,\n    size = perPage,\n    search_key = searchTerm,\n  }) => {\n    setIsLoading(true);\n    axios\n      .post(\n        api.API_LIST_YEU_CAU_CHUNG_CHI_HANH_NGHE +\n          `?page=${page_number}&per_page=${size}`,\n        { nhan_vien_id: currentUser?.id }\n      )\n      .then(async ({ data }) => {\n        setListThuTuc(data?.results);\n        setTotalRows(data?.total);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  //validate thêm thủ tục\n  const [form, setForm] = useState({});\n  const [errors, setErrors] = useState({});\n\n  const resetState = () => {\n    setForm({});\n    setErrors({});\n    setShowUpdate(false);\n    const updatedData = listThuTuc?.map((item) => {\n      return {\n        ...item,\n        toggleSelected: false,\n      };\n    });\n    setData(updatedData);\n  };\n\n  // DETAIL\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    await setIsLoading(true);\n    axios\n      .post(\n        api.API_LIST_YEU_CAU_CHUNG_CHI_HANH_NGHE +\n          `?page=${page}&per_page=${newPerPage}`,\n        {}\n      )\n      .then(({ data }) => {\n        if (data?.results) {\n          setListThuTuc(data?.results);\n          setPerPage(newPerPage);\n        }\n      })\n      .catch(() => {})\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const handlePageChange = (page) => {\n    setPage(page);\n    getList({ page_number: page });\n  };\n\n  //đổi màu khi selected\n  const [data, setData] = useState(listThuTuc);\n  useEffect(() => {\n    setData(listThuTuc);\n  }, [listThuTuc]);\n\n  const handleRowClicked = (row) => {\n    navigate(`/admin/nop-ho-so/dieuchinh/${row?.id}`);\n  };\n\n  const paginationOptions = {\n    rowsPerPageText: \"Dòng hiển thị\",\n    rangeSeparatorText: \"trên\",\n  };\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: \"solid\",\n        borderTopWidth: \"1px\",\n        borderTopColor: \"#e0e0e0\",\n        borderBottomColor: \"#e0e0e0\",\n      },\n    },\n    headCells: {\n      style: {\n        color: \"#202124\",\n        fontSize: \"16px\",\n      },\n    },\n    rows: {\n      highlightOnHoverStyle: {\n        backgroundColor: \"rgb(230, 244, 244)\",\n        borderBottomColor: \"#FFFFFF\",\n        outline: \"1px solid #FFFFFF\",\n      },\n    },\n    pagination: {\n      style: {\n        border: \"none\",\n      },\n    },\n  };\n  const columns = [\n    {\n      name: \"Mã hồ sơ\",\n      selector: (row) => (\n        <span\n          onClick={() => {\n            handleRowClicked(row);\n          }}\n        >\n          {row.ma_ho_so}\n        </span>\n      ),\n      grow: 1,\n      style: {\n        color: \"#1251ff\",\n        fontSize: \"14px\",\n        fontWeight: 500,\n        width: 300,\n        cursor: \"pointer\",\n      },\n    },\n    {\n      name: \"Tên thủ tục\",\n      selector: (row) => <span>{row.ten_thu_tuc}</span>,\n      grow: 3,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Tên người yêu cầu\",\n      selector: (row) => <span>{row.ten_nguoi_yeu_cau}</span>,\n      grow: 2,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Ngày nộp\",\n      selector: (row) => (\n        <span>{moment(row.created_at).format(\"DD/MM/YYYY\")}</span>\n      ),\n      grow: 2,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Trạng thái\",\n      selector: (row) => <span>{checkStatus(row.trang_thai_ho_so)}</span>,\n      grow: 1,\n    },\n  ];\n\n  const checkStatus = (value) => {\n    return TrangThaiHoSo.find((e) => e.id == value).name;\n  };\n\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.toggleSelected,\n      style: {\n        backgroundColor: \"#f5f5f5\",\n        userSelect: \"none\",\n      },\n    },\n  ];\n\n  return (\n    <KTCard>\n      <div id=\"danh_sach_ho_so\">\n        <div className=\"container-fluid \">\n          <div className=\"row\">\n            <div className=\"col\">\n              <h2 className=\"title_ho_so text-blue2\">\n                LỊCH SỬ CÁC HỒ SƠ ĐÃ NỘP\n              </h2>\n              <button\n                type=\"button\"\n                className=\"btn btn-sm btn-success mb-5\"\n                onClick={() => {\n                  navigate(\"/admin/nop-ho-so/create\");\n                }}\n              >\n                <i className=\"fas fa-plus me-1\"></i>\n                Nộp hồ sơ mới\n              </button>\n              <DataTable\n                noDataComponent={\n                  <img\n                    style={{ width: \"30%\", height: \"auto\" }}\n                    src=\"/media/nodata-found.svg\"\n                  />\n                }\n                sortServer\n                progressPending={isLoading}\n                columns={columns}\n                data={data}\n                customStyles={customStyles}\n                pagination\n                highlightOnHover\n                pointerOnHover\n                paginationServer\n                paginationTotalRows={totalRows}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                paginationComponentOptions={paginationOptions}\n                conditionalRowStyles={conditionalRowStyles}\n                // onRowClicked={(data) => {\n                //   handleRowClicked(data);\n                // }}\n                progressComponent={\n                  <div\n                    style={{\n                      padding: \"24px\",\n                    }}\n                  >\n                    <Oval\n                      arialLabel=\"loading-indicator\"\n                      color=\"#007bff\"\n                      height={40}\n                    />\n                  </div>\n                }\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </KTCard>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\yeu-cau-lien-ket\\yeu-cau-lien-ket-duoc-si\\YeuCauLienKetDuocSi.js",["1877","1878","1879","1880","1881","1882","1883","1884"],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\yeu-cau-lien-ket\\yeu-cau-lien-ket-to-chuc\\YeuCauLienKetToChuc.js",["1885","1886","1887","1888","1889","1890","1891","1892","1893","1894","1895","1896","1897","1898","1899"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Oval } from \"react-loader-spinner\";\n// import { useDispatch } from \"react-redux\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider, DesktopDatePicker } from \"@mui/x-date-pickers\";\nimport { TextField } from \"@mui/material\";\nimport { vi } from \"date-fns/locale\";\nimport Select from \"react-select\";\nimport { toast } from \"react-toastify\";\nimport { KTCard, useDebounce } from \"../../../../../_metronic/helpers\";\nimport api from \"../../../../configs/api\";\nimport { TrangThaiHoSo, TrangThaiYeuCauLienKet } from \"../../../../data\";\n\nexport function YeuCauLienKetToChuc() {\n  const [listHoSoThuLy, setListHoSoThuLy] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n  const [page, setPage] = useState(1);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [trang_thai, setTrang_thai] = useState(true);\n\n  //open modal delete\n  const [isvisibleDelete, setIsvisibleDelete] = useState(false);\n  const [idDelete, setIdDelete] = useState(\"\");\n  const closeModalDelete = () => setIsvisibleDelete(false);\n  const showModalDelete = () => setIsvisibleDelete(true);\n  const [searchMaHoSo, setSearchMaHoSo] = useState(\"\");\n  const [searchHoTen, setSearchHoTen] = useState(\"\");\n  const [dateHanDen, setDateHanDen] = useState(new Date());\n  const [dateHanTu, setDateHanTu] = useState(new Date());\n  const [dateNopDen, setDateNopDen] = useState(new Date());\n  const [dateNopTu, setDateNopTu] = useState(new Date());\n  const [ListDMHetHan, setListDMHetHan] = useState([]);\n  const [ListDMThuTuc, setListDMThuTuc] = useState([]);\n  const [valueThuTuc, setValueThuTuc] = useState({\n    label: \"Tất cả\",\n    value: \"\",\n  });\n  const [valueTrangThai, setValueTrangThai] = useState({\n    label: \"Tất cả\",\n    value: \"\",\n  });\n  const [valueTrangThaiHetHan, setValueTrangThaiHetHan] = useState({\n    label: \"Tất cả\",\n    value: \"\",\n  });\n  const [ListDMTrangThaiHoSo, setListDMTrangThaiHoSo] = useState([]);\n\n  const debouncedSearchMaHoSo = useDebounce(searchMaHoSo, 1000);\n  const debouncedSearchHoTen = useDebounce(searchHoTen, 1000);\n\n  useEffect(\n    () => {\n      getListDM();\n    },\n    [] // Only call effect if debounced search term changes\n  );\n\n  useEffect(\n    () => {\n      if (\n        (debouncedSearchMaHoSo !== undefined && searchMaHoSo !== undefined) ||\n        (debouncedSearchHoTen !== undefined && searchMaHoSo !== undefined)\n      ) {\n        getList({\n          page_number: 1,\n          ma_ho_so: debouncedSearchMaHoSo,\n          ho_ten: debouncedSearchHoTen,\n        });\n      }\n    },\n    [debouncedSearchMaHoSo, debouncedSearchHoTen] // Only call effect if debounced search term changes\n  );\n\n  // useEffect(\n  //   () => {\n  //     if (debouncedSearchHoTen !== undefined && searchMaHoSo !== undefined) {\n  //       getList({ page_number: 1, ho_ten: debouncedSearchHoTen });\n  //     }\n  //   },\n  //   [debouncedSearchHoTen] // Only call effect if debounced search term changes\n  // );\n\n  const getListDM = () => {\n    axios\n      .get(api.API_DANH_MUC_HO_SO_THU_LY_DUOC_SI)\n      .then(async ({ data }) => {\n        let { het_hans } = data?.results;\n        let { thu_tuc } = data?.results;\n        let { trang_thai_ho_so } = data?.results;\n        het_hans.unshift({\n          label: \"Tất cả\",\n          value: \"\",\n        });\n        thu_tuc.unshift({\n          label: \"Tất cả\",\n          value: \"\",\n        });\n        trang_thai_ho_so.unshift({\n          label: \"Tất cả\",\n          value: \"\",\n        });\n        setListDMHetHan(het_hans);\n        setListDMThuTuc(thu_tuc);\n        setListDMTrangThaiHoSo(trang_thai_ho_so);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {});\n  };\n\n  const getList = ({\n    page_number = page,\n    size = perPage,\n    ma_ho_so = searchMaHoSo,\n    ho_ten = searchHoTen,\n    // nop_tu = String(new Date(dateNopTu).getTime()),\n    // nop_den = String(new Date(dateNopDen).getTime()),\n    // han_tu = String(new Date(dateHanTu).getTime()),\n    // han_den = String(new Date(dateHanDen).getTime()),\n    nop_tu = \"\",\n    nop_den = \"\",\n    han_tu = \"\",\n    han_den = \"\",\n    thu_tuc_id = valueThuTuc?.value || \"\",\n    trang_thai = valueTrangThai?.value || \"\",\n    trang_thai_het_han = valueTrangThaiHetHan?.value || \"\",\n  }) => {\n    setIsLoading(true);\n    axios\n      .post(\n        api.API_LIST_HO_SO_THU_LY_DUOC_SI +\n          `?page=${page_number}&per_page=${size}`,\n        {\n          ma_ho_so,\n          ho_ten,\n          nop_tu,\n          nop_den,\n          han_tu,\n          han_den,\n          thu_tuc_id,\n          trang_thai,\n          trang_thai_het_han,\n        }\n      )\n      .then(async ({ data }) => {\n        setListHoSoThuLy(data?.results);\n        setTotalRows(data?.total);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  // handle api\n\n  const resetState = async () => {\n    await setSearchHoTen(\"\");\n    await setSearchMaHoSo(\"\");\n    await setDateHanDen(null);\n    await setDateHanTu(null);\n    await setDateNopDen(null);\n    await setDateNopTu(null);\n    await setValueThuTuc({\n      label: \"Tất cả\",\n      value: \"\",\n    });\n    await setValueTrangThai({\n      label: \"Tất cả\",\n      value: \"\",\n    });\n    await setValueTrangThaiHetHan({\n      label: \"Tất cả\",\n      value: \"\",\n    });\n  };\n\n  // DETAIL\n  const detail = async (data) => {\n    setTrang_thai(data?.trang_thai);\n    setShowUpdate(true);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    await setIsLoading(true);\n    axios\n      .post(\n        api.API_LIST_NOI_TOT_NGHIEP + `?page=${page}&per_page=${newPerPage}`,\n        {}\n      )\n      .then(({ data }) => {\n        if (data?.results) {\n          setListHoSoThuLy(data?.results);\n          setPerPage(newPerPage);\n        }\n      })\n      .catch(() => {})\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const handlePageChange = (page) => {\n    setPage(page);\n    getList({ page_number: page });\n  };\n\n  const handleRowClicked = (row) => {};\n\n  const formatGroupLabel = (listTemp) => (\n    <div style={groupStyles}>\n      <span>{listTemp.ten}</span>\n    </div>\n  );\n\n  const checkStatus = (id) => {\n    let status = TrangThaiHoSo.find((e) => e.id === id);\n    return status.name;\n  };\n\n  const groupStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  };\n  const paginationOptions = {\n    rowsPerPageText: \"Dòng hiển thị\",\n    rangeSeparatorText: \"trên\",\n  };\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: \"solid\",\n        borderTopWidth: \"1px\",\n        borderTopColor: \"#e0e0e0\",\n        borderBottomColor: \"#e0e0e0\",\n      },\n    },\n    headCells: {\n      style: {\n        color: \"#202124\",\n        fontSize: \"16px\",\n      },\n    },\n    rows: {\n      highlightOnHoverStyle: {\n        backgroundColor: \"rgb(230, 244, 244)\",\n        borderBottomColor: \"#FFFFFF\",\n        outline: \"1px solid #FFFFFF\",\n      },\n    },\n    pagination: {\n      style: {\n        border: \"none\",\n      },\n    },\n  };\n  const columns = [\n    {\n      name: \"Họ và tên\",\n      selector: (row) => <span>{row.ma_ho_so}</span>,\n      grow: 1,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Ngày sinh\",\n      selector: (row) => <span>{row.ten_thu_tuc}</span>,\n      grow: 3,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Giới tính\",\n      selector: (row) => <span>{row.ten_nguoi_yeu_cau}</span>,\n      grow: 2,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Thời gian liên kết\",\n      selector: (row) => <span>{row.thoi_gian_nop_ho_so}</span>,\n      grow: 1,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Trạng thái\",\n      selector: (row) => <span>{checkStatus(row?.trang_thai_ho_so)}</span>,\n      grow: 1,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n  ];\n\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.toggleSelected,\n      style: {\n        backgroundColor: \"#f5f5f5\",\n        userSelect: \"none\",\n      },\n    },\n  ];\n\n  return (\n    <KTCard>\n      {/* <div className=\"page\"> */}\n      <div className=\"container-fluid\" style={{ marginTop: \" 30px\" }}>\n        <LocalizationProvider dateAdapter={AdapterDateFns} locale={vi}>\n          <div className=\"card-box\">\n            <div className=\"row mb-7\">\n              <div className=\"row col-12 mb-2\">\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Tên</label>\n                  <Form.Control\n                    style={{ height: 38 }}\n                    type=\"text\"\n                    placeholder=\"Nhập tên...\"\n                    onChange={(e) => {\n                      setSearchMaHoSo(e.target.value);\n                    }}\n                    value={searchMaHoSo}\n                  />\n                </div>\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Trạng thái</label>\n                  <Select\n                    value={valueTrangThai}\n                    key={\"id\"}\n                    options={TrangThaiYeuCauLienKet}\n                    formatGroupLabel={formatGroupLabel}\n                    onChange={(data) => {\n                      setValueTrangThai(data);\n                      getList({ trang_thai: data?.value });\n                    }}\n                  />\n                </div>\n\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Nộp từ</label>\n                  <DesktopDatePicker\n                    inputFormat=\"dd/MM/yyyy\"\n                    value={dateNopTu}\n                    label=\" \"\n                    onChange={(value) => {\n                      setDateNopTu(value);\n                      getList({\n                        nop_tu: String(new Date(value).getTime()),\n                      });\n                      console.log(\"log value\", value);\n                    }}\n                    maxDate={new Date()}\n                    renderInput={(params) => (\n                      <TextField size=\"small\" {...params} />\n                    )}\n                  />\n                </div>\n                <div className=\"col-3\">\n                  <label className=\"fw-bold fs-6 mb-2\">Nộp đến</label>\n                  <DesktopDatePicker\n                    label=\" \"\n                    inputFormat=\"dd/MM/yyyy\"\n                    value={dateNopDen}\n                    onChange={(value) => {\n                      setDateNopDen(value);\n                      getList({\n                        nop_den: String(new Date(value).getTime()),\n                      });\n                      console.log(\"log value\", value);\n                    }}\n                    maxDate={new Date()}\n                    renderInput={(params) => (\n                      <TextField size=\"small\" {...params} />\n                    )}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <DataTable\n                  noDataComponent={\n                    <img\n                      style={{ width: \"30%\", height: \"auto\" }}\n                      src=\"/media/nodata-found.svg\"\n                    />\n                  }\n                  sortServer\n                  progressPending={isLoading}\n                  columns={columns}\n                  data={listHoSoThuLy}\n                  customStyles={customStyles}\n                  pagination\n                  highlightOnHover\n                  pointerOnHover\n                  paginationServer\n                  paginationTotalRows={totalRows}\n                  onChangeRowsPerPage={handlePerRowsChange}\n                  onChangePage={handlePageChange}\n                  paginationComponentOptions={paginationOptions}\n                  conditionalRowStyles={conditionalRowStyles}\n                  onRowClicked={(data) => {\n                    detail(data);\n                    handleRowClicked(data);\n                  }}\n                  progressComponent={\n                    <div\n                      style={{\n                        padding: \"24px\",\n                      }}\n                    >\n                      <Oval\n                        arialLabel=\"loading-indicator\"\n                        color=\"#007bff\"\n                        height={40}\n                      />\n                    </div>\n                  }\n                />\n              </div>\n            </div>\n          </div>\n        </LocalizationProvider>\n      </div>\n      {/* </div> */}\n    </KTCard>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\danh-muc\\thu-tuc\\ThuTuc.js",["1900","1901","1902","1903","1904","1905","1906","1907","1908"],[],"import axios from \"axios\";\nimport clsx from \"clsx\";\nimport { useEffect, useState } from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { Oval } from \"react-loader-spinner\";\nimport Select from \"react-select\";\nimport { toast } from \"react-toastify\";\nimport { KTCard, KTSVG, useDebounce } from \"../../../../../_metronic/helpers\";\nimport Status from \"../../../../components/Status\";\nimport api from \"../../../../configs/api\";\nimport { PopupDelete } from \"../../popup/PopupDelete\";\n\nexport function ThuTuc() {\n  const [listThuTuc, setListThuTuc] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n  const [page, setPage] = useState(1);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [trang_thai, setTrang_thai] = useState(true);\n  //open modal delete\n  const [isvisibleDelete, setIsvisibleDelete] = useState(false);\n  const [idDelete, setIdDelete] = useState(\"\");\n  const closeModalDelete = () => setIsvisibleDelete(false);\n  const showModalDelete = () => setIsvisibleDelete(true);\n  //modal\n  const [showAdd, setShowAdd] = useState(false);\n  const [edit, setEdit] = useState(false);\n  //modal thêm danh mục\n  const closeModal = () => setShowAdd(false);\n  const showModal = () => setShowAdd(true);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedDoiTuong, setSelectedDoiTuong] = useState({\n    label: \"Dược sĩ\",\n    value: 1,\n    id: 1,\n  });\n  const optionsDoiTuong = [\n    {\n      label: \"Dược sĩ\",\n      value: 1,\n      id: 1,\n    },\n    {\n      label: \"Tổ chức\",\n      value: 2,\n      id: 2,\n    },\n  ];\n\n  const debouncedSearchTerm = useDebounce(searchTerm, 1000);\n\n  useEffect(\n    () => {\n      if (debouncedSearchTerm !== undefined && searchTerm !== undefined) {\n        getList(1, perPage, debouncedSearchTerm);\n      }\n    },\n    [debouncedSearchTerm] // Only call effect if debounced search term changes\n  );\n\n  const getList = ({\n    page_number = page,\n    size = perPage,\n    search_key = searchTerm,\n  }) => {\n    setIsLoading(true);\n    axios\n      .post(api.API_LIST_THU_TUC + `?page=${page_number}&per_page=${size}`, {\n        search_ten: search_key,\n      })\n      .then(async ({ data }) => {\n        setListThuTuc(data?.results);\n        setTotalRows(data?.total);\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  //validate thêm thủ tục\n  const [form, setForm] = useState({});\n  const [errors, setErrors] = useState({});\n  const setField = (field, value) => {\n    setForm({\n      ...form,\n      [field]: value,\n    });\n    if (!!errors[field])\n      setErrors({\n        ...errors,\n        [field]: null,\n      });\n  };\n  const findFormErrors = () => {\n    const {\n      ten,\n      linh_vuc,\n      muc_do,\n      doi_tuong,\n      co_quan_thuc_hien,\n      thoi_gian_giai_quyet,\n      ket_qua_thuc_hien,\n      le_phi_text,\n    } = form;\n    const newErrors = {};\n    // name errors\n    if (!ten || ten === \"\") newErrors.ten = \"Tên không được bỏ trống!\";\n    if (!linh_vuc || linh_vuc === \"\")\n      newErrors.linh_vuc = \"Lĩnh vực không được bỏ trống!\";\n    if (!muc_do || muc_do === \"\")\n      newErrors.muc_do = \"Mức độ không được bỏ trống!\";\n    if (!co_quan_thuc_hien || co_quan_thuc_hien === \"\")\n      newErrors.co_quan_thuc_hien = \"Cơ quan thực hiện không được bỏ trống!\";\n    if (!thoi_gian_giai_quyet || thoi_gian_giai_quyet === \"\")\n      newErrors.thoi_gian_giai_quyet =\n        \"Thời gian giải quyết không được bỏ trống!\";\n    if (!ket_qua_thuc_hien || ket_qua_thuc_hien === \"\")\n      newErrors.ket_qua_thuc_hien = \"Kết quả thực hiện không được bỏ trống!\";\n    if (!le_phi_text || le_phi_text === \"\")\n      newErrors.le_phi_text = \"Lệ phí text không được bỏ trống!\";\n    return newErrors;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // get our new errors\n    const newErrors = findFormErrors();\n    // Conditional logic:\n    if (Object.keys(newErrors).length > 0) {\n      console.log(newErrors);\n      // We got errors!\n      setErrors(newErrors);\n    } else {\n      // No errors! Put any logic here for the form submission!\n      edit ? updateThuTuc(e) : addThuTuc(e);\n    }\n  };\n\n  // handle api\n  const addThuTuc = async () => {\n    setIsLoading(true);\n    const {\n      ten,\n      linh_vuc,\n      muc_do,\n      doi_tuong,\n      co_quan_thuc_hien,\n      thoi_gian_giai_quyet,\n      le_phi_text,\n      ket_qua_thuc_hien,\n    } = form;\n    const json = {\n      ten,\n      trang_thai: trang_thai,\n      linh_vuc,\n      muc_do,\n      doi_tuong: String(selectedDoiTuong.value),\n      co_quan_thuc_hien: \"Sở Y tế\",\n      thoi_gian_giai_quyet,\n      le_phi_text,\n      ket_qua_thuc_hien,\n    };\n    await axios\n      .post(api.API_THU_TUC + \"_add\", json)\n      .then(async ({ data }) => {\n        closeModal();\n        resetState();\n        toast.success(\"Tạo thủ tục thành công\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        getList({});\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        console.log(\"error\", error?.response);\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const updateThuTuc = async () => {\n    setIsLoading(true);\n    const {\n      ten,\n      linh_vuc,\n      muc_do,\n      doi_tuong,\n      co_quan_thuc_hien,\n      thoi_gian_giai_quyet,\n      le_phi_text,\n      id,\n      ket_qua_thuc_hien,\n    } = form;\n    const json = {\n      ten,\n      trang_thai: trang_thai,\n      linh_vuc,\n      muc_do,\n      doi_tuong: String(selectedDoiTuong.value),\n      co_quan_thuc_hien: \"Sở Y tế\",\n      thoi_gian_giai_quyet,\n      le_phi_text,\n      ket_qua_thuc_hien,\n    };\n    await axios\n      .put(api.API_THU_TUC + \"_by_id/\" + id, json)\n      .then(async ({ data }) => {\n        closeModal();\n        resetState();\n        toast.success(\"Cập nhật thủ tục thành công\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        getList({ page_number: 1 });\n      })\n      .catch((error) => {\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const resetState = () => {\n    setForm({});\n    setErrors({});\n    setShowUpdate(false);\n    const updatedData = listThuTuc?.map((item) => {\n      return {\n        ...item,\n        toggleSelected: false,\n      };\n    });\n    setData(updatedData);\n  };\n\n  // DETAIL\n  const detail = async (data) => {\n    setForm({\n      ...data,\n    });\n    setTrang_thai(data?.trang_thai);\n    setShowUpdate(true);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    await setIsLoading(true);\n    axios\n      .post(api.API_LIST_THU_TUC + `?page=${page}&per_page=${newPerPage}`, {})\n      .then(({ data }) => {\n        if (data?.results) {\n          setListThuTuc(data?.results);\n          setPerPage(newPerPage);\n        }\n      })\n      .catch(() => {})\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const deleteTT = () => {\n    axios\n      .delete(api.API_THU_TUC + \"_by_id/\" + idDelete, {})\n      .then(async ({ data }) => {\n        await toast.success(data?.msg, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"success\",\n        });\n        closeModal();\n        closeModalDelete();\n        resetState();\n        if (page == 1) {\n          getList({ page_number: 1 });\n        } else if (listThuTuc?.length == 1) {\n          getList({ page_number: page - 1 });\n        } else {\n          getList({ page_number: page });\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\", error);\n        toast.error(error?.data?.errors, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          toastId: \"error\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n  const handlePageChange = (page) => {\n    setPage(page);\n    getList({ page_number: page });\n  };\n\n  //đổi màu khi selected\n  const [data, setData] = useState(listThuTuc);\n  useEffect(() => {\n    setData(listThuTuc);\n  }, [listThuTuc]);\n\n  const handleRowClicked = (row) => {\n    setErrors({});\n    const updatedData = listThuTuc?.map((item) => {\n      if (row.id !== item.id) {\n        return item;\n      }\n      return {\n        ...item,\n        toggleSelected: !item.toggleSelected,\n      };\n    });\n    setData(updatedData);\n    showModal();\n    setEdit(true);\n  };\n  const formatGroupLabel = (listTemp) => (\n    <div style={groupStyles}>\n      <span>{listTemp.ten}</span>\n    </div>\n  );\n\n  const groupStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  };\n  const paginationOptions = {\n    rowsPerPageText: \"Dòng hiển thị\",\n    rangeSeparatorText: \"trên\",\n  };\n  const customStyles = {\n    headRow: {\n      style: {\n        borderTopStyle: \"solid\",\n        borderTopWidth: \"1px\",\n        borderTopColor: \"#e0e0e0\",\n        borderBottomColor: \"#e0e0e0\",\n      },\n    },\n    headCells: {\n      style: {\n        color: \"#202124\",\n        fontSize: \"16px\",\n      },\n    },\n    rows: {\n      highlightOnHoverStyle: {\n        backgroundColor: \"rgb(230, 244, 244)\",\n        borderBottomColor: \"#FFFFFF\",\n        outline: \"1px solid #FFFFFF\",\n      },\n    },\n    pagination: {\n      style: {\n        border: \"none\",\n      },\n    },\n  };\n  const columns = [\n    {\n      name: \"Mã\",\n      grow: 3,\n      selector: (row) => (\n        <div\n          onClick={() => {\n            detail(row);\n            handleRowClicked(row);\n            setShowAdd(true);\n          }}\n        >\n          <span>{row.ma_thu_tuc}</span>\n        </div>\n      ),\n      style: {\n        color: \"#1251ff\",\n        fontSize: \"14px\",\n        fontWeight: 500,\n        width: 300,\n        cursor: \"pointer\",\n      },\n    },\n    {\n      name: \"Tên\",\n      selector: (row) => <span>{row.ten}</span>,\n      grow: 3,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Đối tượng\",\n      selector: (row) => <span>{row.doi_tuong}</span>,\n      grow: 3,\n      style: {\n        cursor: \"pointer\",\n        color: \"#202124\",\n      },\n    },\n    {\n      name: \"Trạng thái\",\n      selector: (row) => <span>{row.trang_thai}</span>,\n      grow: 3,\n      center: true,\n      cell: (row) => <Status status={row.trang_thai} />,\n    },\n    {\n      name: \"Thao tác\",\n      grow: 1,\n      cell: (row) => (\n        <div className=\"container my-3\">\n          <button\n            onClick={async () => {\n              await setIdDelete(row?.id);\n              showModalDelete();\n            }}\n            className=\"btn btn-icon btn-bg-light btn-color-danger btn-sm\"\n          >\n            <KTSVG\n              path=\"/media/icons/duotune/general/gen027.svg\"\n              className=\"svg-icon-3\"\n            />\n          </button>\n        </div>\n      ),\n    },\n  ];\n  const conditionalRowStyles = [\n    {\n      when: (row) => row.toggleSelected,\n      style: {\n        backgroundColor: \"#f5f5f5\",\n        userSelect: \"none\",\n      },\n    },\n  ];\n  const cardBox = {\n    backgroundColor: \"#fff\",\n    backgroundClip: \"border-box\",\n    border: \"1px solid #e7eaed\",\n    padding: \"1.5rem\",\n    marginBottom: \"24px\",\n    borderRadius: \"0.5rem\",\n  };\n  return (\n    <KTCard>\n      <div className=\"page\">\n        <div className=\"container-fluid\">\n          <div className=\"fv-row mb-7 mt-6\">\n            {/* begin::Label */}\n            <label className=\"fw-bold fs-6 mb-2\">Tên thủ tục</label>\n            {/* end::Label */}\n\n            {/* begin::Input */}\n\n            <div className=\"row\">\n              <div className=\"col-md-6 col-sm-6\">\n                <input\n                  placeholder=\"Nhập tên thủ tục tìm kiếm...\"\n                  type=\"text\"\n                  name=\"name\"\n                  className={clsx(\n                    \"form-control form-control-solid mb-3 mb-lg-0\"\n                  )}\n                  autoComplete=\"off\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                />\n              </div>\n\n              <div\n                className=\"col-md-6 col-sm-6 d-flex justify-content-end\"\n                data-kt-user-table-toolbar=\"base\"\n              >\n                <button type=\"button\" className=\"btn btn-light-primary me-3\">\n                  <KTSVG\n                    path=\"/media/icons/duotune/arrows/arr078.svg\"\n                    className=\"svg-icon-2\"\n                  />\n                  Export\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  onClick={() => {\n                    showModal();\n                    resetState();\n                    setEdit(false);\n                  }}\n                >\n                  <KTSVG\n                    path=\"/media/icons/duotune/arrows/arr075.svg\"\n                    className=\"svg-icon-2\"\n                  />\n                  Thêm\n                </button>\n              </div>\n            </div>\n\n            {/* end::Input */}\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col\">\n              <div className=\"\" style={cardBox}>\n                <DataTable\n                  noDataComponent={\n                    <img\n                      style={{ width: \"30%\", height: \"auto\" }}\n                      src=\"/media/nodata-found.svg\"\n                    />\n                  }\n                  sortServer\n                  progressPending={isLoading}\n                  columns={columns}\n                  data={data}\n                  customStyles={customStyles}\n                  pagination\n                  highlightOnHover\n                  pointerOnHover\n                  paginationServer\n                  paginationTotalRows={totalRows}\n                  onChangeRowsPerPage={handlePerRowsChange}\n                  onChangePage={handlePageChange}\n                  paginationComponentOptions={paginationOptions}\n                  conditionalRowStyles={conditionalRowStyles}\n                  // onRowClicked={(data) => {\n                  //   detail(data);\n                  //   handleRowClicked(data);\n                  //   setShowAdd(true);\n                  // }}\n                  progressComponent={\n                    <div\n                      style={{\n                        padding: \"24px\",\n                      }}\n                    >\n                      <Oval\n                        arialLabel=\"loading-indicator\"\n                        color=\"#007bff\"\n                        height={40}\n                      />\n                    </div>\n                  }\n                />\n              </div>\n            </div>\n          </div>\n          <Modal\n            backdrop=\"static\"\n            keyboard={false}\n            show={showAdd}\n            onHide={() => {\n              closeModal();\n            }}\n            centered\n            size=\"lg\"\n          >\n            <Modal.Header className=\"bg-blue2\" closeButton>\n              <Modal.Title className=\"text-white\">\n                {!edit ? \"Thêm\" : \"Cập nhật\"} thủ tục\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"row\">\n                {showUpdate && (\n                  <div className=\"col-6 form-group mb-5\">\n                    <label className=\"required fw-bold fs-6 mb-2\">\n                      Mã thủ tục\n                    </label>\n                    <Form.Control\n                      disabled={true}\n                      type=\"text\"\n                      placeholder=\"Nhập mã thủ tục\"\n                      style={{ fontSize: 14, fontWeight: 500 }}\n                      value={form.ma_thu_tuc === null ? \"\" : form.ma_thu_tuc}\n                    />\n                  </div>\n                )}\n\n                <div className=\"col-6 form-group mb-5\">\n                  <label className=\"required fw-bold fs-6 mb-2\">\n                    Tên thủ tục\n                  </label>\n                  <Form.Control\n                    placeholder=\"Nhập địa chỉ\"\n                    style={{ fontSize: 14, fontWeight: 500 }}\n                    value={form.ten === null ? \"\" : form.ten}\n                    onChange={(e) => {\n                      setField(\"ten\", e.target.value);\n                    }}\n                    isInvalid={!!errors.ten}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.ten}\n                  </Form.Control.Feedback>\n                </div>\n                <div className=\"col-6 form-group mb-5\">\n                  <label className=\"required fw-bold fs-6 mb-2\">\n                    Tên lĩnh vực\n                  </label>\n                  <Form.Control\n                    placeholder=\"Nhập lĩnh vực\"\n                    style={{ fontSize: 14, fontWeight: 500 }}\n                    value={form.linh_vuc === null ? \"\" : form.linh_vuc}\n                    onChange={(e) => {\n                      setField(\"linh_vuc\", e.target.value);\n                    }}\n                    isInvalid={!!errors.linh_vuc}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.linh_vuc}\n                  </Form.Control.Feedback>\n                </div>\n                <div className=\"col-6 form-group mb-5\">\n                  <label className=\"required fw-bold fs-6 mb-2\">Mức độ</label>\n                  <Form.Control\n                    placeholder=\"Nhập mức độ\"\n                    style={{ fontSize: 14, fontWeight: 500 }}\n                    value={form.muc_do === null ? \"\" : form.muc_do}\n                    onChange={(e) => {\n                      setField(\"muc_do\", e.target.value);\n                    }}\n                    isInvalid={!!errors.muc_do}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.muc_do}\n                  </Form.Control.Feedback>\n                </div>\n                <div className=\"col-6 form-group mb-5\">\n                  <label className=\"required fw-bold fs-6 mb-2\">\n                    Đối tượng\n                  </label>\n                  <Select\n                    value={selectedDoiTuong}\n                    key={\"id\"}\n                    options={optionsDoiTuong}\n                    formatGroupLabel={formatGroupLabel}\n                    onChange={async (data) => {\n                      setField(\"doi_tuong\", data?.value);\n                      setSelectedDoiTuong(data);\n                    }}\n                  />\n                </div>\n                <div className=\"col-6 form-group mb-5\">\n                  <label className=\"required fw-bold fs-6 mb-2\">\n                    Cơ quan thực hiện\n                  </label>\n                  <Form.Control\n                    placeholder=\"Nhập cơ quan thực hiện\"\n                    style={{ fontSize: 14, fontWeight: 500 }}\n                    value={\n                      form.co_quan_thuc_hien === null\n                        ? \"\"\n                        : form.co_quan_thuc_hien\n                    }\n                    onChange={(e) => {\n                      setField(\"co_quan_thuc_hien\", e.target.value);\n                    }}\n                    isInvalid={!!errors.co_quan_thuc_hien}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.co_quan_thuc_hien}\n                  </Form.Control.Feedback>\n                </div>\n                <div className=\"col-6 form-group mb-5\">\n                  <label className=\"required fw-bold fs-6 mb-2\">\n                    Thời gian giải quyết\n                  </label>\n                  <Form.Control\n                    as=\"textarea\"\n                    rows={2}\n                    placeholder=\"Nhập đối tượng\"\n                    style={{ fontSize: 14, fontWeight: 500 }}\n                    value={\n                      form.thoi_gian_giai_quyet === null\n                        ? \"\"\n                        : form.thoi_gian_giai_quyet\n                    }\n                    onChange={(e) => {\n                      setField(\"thoi_gian_giai_quyet\", e.target.value);\n                    }}\n                    isInvalid={!!errors.thoi_gian_giai_quyet}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.thoi_gian_giai_quyet}\n                  </Form.Control.Feedback>\n                </div>\n                <div className=\"col-6 form-group mb-5\">\n                  <label className=\"required fw-bold fs-6 mb-2\">\n                    Kết quả thực hiện\n                  </label>\n                  <Form.Control\n                    as=\"textarea\"\n                    rows={2}\n                    placeholder=\"Nhập kết quả thực hiện\"\n                    style={{ fontSize: 14, fontWeight: 500 }}\n                    value={\n                      form.ket_qua_thuc_hien === null\n                        ? \"\"\n                        : form.ket_qua_thuc_hien\n                    }\n                    onChange={(e) => {\n                      setField(\"ket_qua_thuc_hien\", e.target.value);\n                    }}\n                    isInvalid={!!errors.ket_qua_thuc_hien}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.ket_qua_thuc_hien}\n                  </Form.Control.Feedback>\n                </div>\n                <div className=\"col-6 form-group mb-5\">\n                  <label className=\"required fw-bold fs-6 mb-2\">\n                    Lệ phí text\n                  </label>\n                  <Form.Control\n                    as=\"textarea\"\n                    rows={2}\n                    placeholder=\"Nhập lệ phí text\"\n                    style={{ fontSize: 14, fontWeight: 500 }}\n                    value={form.le_phi_text === null ? \"\" : form.le_phi_text}\n                    onChange={(e) => {\n                      setField(\"le_phi_text\", e.target.value);\n                    }}\n                    isInvalid={!!errors.le_phi_text}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.le_phi_text}\n                  </Form.Control.Feedback>\n                </div>\n                <div className=\"col-6 form-group mb-2\">\n                  <label className=\"fw-bold fs-6 mb-2\">Trạng thái</label>\n                  <div className=\"form-check form-check-solid form-switch fv-row\">\n                    <input\n                      className=\"form-check-input w-45px h-30px\"\n                      type=\"checkbox\"\n                      value={trang_thai}\n                      checked={trang_thai}\n                      onChange={(e) => {\n                        setTrang_thai(!trang_thai);\n                      }}\n                    />\n                    <label className=\"form-check-label\"></label>\n                  </div>\n                </div>\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button\n                variant=\"secondary\"\n                onClick={() => {\n                  closeModal();\n                }}\n              >\n                <i className=\"fas fa-times\"></i> Huỷ\n              </Button>\n              <Button\n                variant=\"btn text-white bg-blue2\"\n                onClick={async (e) => {\n                  handleSubmit(e);\n                }}\n              >\n                {edit ? (\n                  <i className=\"fa fa-pencil-alt text-white\"></i>\n                ) : (\n                  <i className=\"fas fa-save text-white\"></i>\n                )}{\" \"}\n                {edit ? \"Cập nhật\" : \"Thêm\"}\n              </Button>\n            </Modal.Footer>\n          </Modal>\n\n          <PopupDelete\n            title=\"Bạn có đồng ý xóa thủ tục này không?\"\n            show={isvisibleDelete}\n            onHide={closeModalDelete}\n            onDetele={() => {\n              deleteTT();\n            }}\n          />\n        </div>\n      </div>\n    </KTCard>\n  );\n}\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\nop-ho-so\\danh-sach-ho-so\\CapNhatHoSo.js",[],["1909","1910","1911","1912","1913","1914","1915","1916","1917","1918","1919"],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\core\\LayoutProvider.tsx",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\core\\LayoutSetup.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\core\\MetronicSplashScreen.tsx",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\core\\LayoutModels.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\core\\DefaultLayoutConfig.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\core\\PageData.tsx",[],["1920","1921","1922","1923"],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\helpers\\AssetHelpers.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\helpers\\dataExamples.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\helpers\\RouterHelpers.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\helpers\\crud-helper\\models.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\helpers\\crud-helper\\consts.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\helpers\\components\\KTSVG.tsx",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\helpers\\components\\KTCard.tsx",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\_utils\\_DataUtil.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\_utils\\DomHelpers.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\_utils\\_TypesHelpers.ts",[],["1924"],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\helpers\\components\\KTCardBody.tsx",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\_utils\\ElementAnimateUtil.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\_utils\\_ElementStyleUtil.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\_utils\\_DOMEventHandlerUtil.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\helpers\\crud-helper\\helpers.tsx",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\_utils\\EventHandlerUtil.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\_utils\\models\\OffsetModel.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\_utils\\models\\ViewPortModel.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\app\\modules\\apps\\auth\\core\\_requests.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\components\\toolbar\\Toolbar1.tsx",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\_CookieComponent.ts",[],["1925","1926","1927","1928","1929","1930"],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\components\\header\\Topbar.tsx",["1931","1932"],[],"import clsx from \"clsx\";\r\nimport { FC } from \"react\";\r\nimport { KTSVG, toAbsoluteUrl } from \"../../../helpers\";\r\nimport { HeaderNotificationsMenu, HeaderUserMenu } from \"../../../partials\";\r\nimport { useLayout } from \"../../core\";\r\n\r\nconst toolbarButtonMarginClass = \"ms-1 ms-lg-3\",\r\n  toolbarButtonHeightClass = \"w-30px h-30px w-md-40px h-md-40px\",\r\n  toolbarUserAvatarHeightClass = \"symbol-30px symbol-md-40px\";\r\n\r\nconst Topbar: FC = () => {\r\n  const { config } = useLayout();\r\n\r\n  return (\r\n    <div id=\"topbar\" className=\"d-flex align-items-stretch flex-shrink-0\">\r\n      {/* Search */}\r\n      <div\r\n        className={clsx(\"d-flex align-items-stretch\", toolbarButtonMarginClass)}\r\n      ></div>\r\n      {/* Activities */}\r\n      <div\r\n        className={clsx(\"d-flex align-items-center\", toolbarButtonMarginClass)}\r\n      ></div>\r\n      {/* NOTIFICATIONS */}\r\n      {/* <div\r\n        className={clsx(\"d-flex align-items-center\", toolbarButtonMarginClass)}\r\n      >\r\n       \r\n        <div\r\n          className={clsx(\"btn btn-icon btn-custom\", toolbarButtonHeightClass)}\r\n          data-kt-menu-trigger=\"click\"\r\n          data-kt-menu-attach=\"parent\"\r\n          data-kt-menu-placement=\"bottom-end\"\r\n          data-kt-menu-flip=\"bottom\"\r\n        >\r\n          <span className=\"menu-icon\">\r\n            <i className={clsx(\"fa fs-3\", \"fa-bell\")}></i>\r\n          </span>\r\n        </div>\r\n        <HeaderNotificationsMenu />\r\n      </div> */}\r\n      {/* CHAT */}\r\n      <div\r\n        className={clsx(\"d-flex align-items-center\", toolbarButtonMarginClass)}\r\n      ></div>\r\n      {/* begin::User */}\r\n      <div\r\n        className={clsx(\"d-flex align-items-center\", toolbarButtonMarginClass)}\r\n        id=\"kt_header_user_menu_toggle\"\r\n      >\r\n        {/* begin::Toggle */}\r\n        <div\r\n          className={clsx(\r\n            \"cursor-pointer symbol\",\r\n            toolbarUserAvatarHeightClass\r\n          )}\r\n          data-kt-menu-trigger=\"click\"\r\n          data-kt-menu-attach=\"parent\"\r\n          data-kt-menu-placement=\"bottom-end\"\r\n          data-kt-menu-flip=\"bottom\"\r\n        >\r\n          <img\r\n            src={toAbsoluteUrl(\"/media/avatars/blank.png\")}\r\n            alt=\"metronic\"\r\n            style={{ borderRadius: \"1.475rem !important\" }}\r\n          />\r\n        </div>\r\n        <HeaderUserMenu />\r\n        {/* end::Toggle */}\r\n      </div>\r\n      {/* end::User */}\r\n      {/* begin::Aside Toggler */}\r\n      {config.header.left === \"menu\" && (\r\n        <div\r\n          className=\"d-flex align-items-center d-lg-none ms-2 me-n3\"\r\n          title=\"Show header menu\"\r\n        >\r\n          <div\r\n            className=\"btn btn-icon btn-active-light-primary w-30px h-30px w-md-40px h-md-40px\"\r\n            id=\"kt_header_menu_mobile_toggle\"\r\n          >\r\n            <KTSVG\r\n              path=\"/media/icons/duotune/text/txt001.svg\"\r\n              className=\"svg-icon-1\"\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Topbar };\r\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\components\\header\\Header.tsx",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\_DrawerComponent.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\_FeedbackComponent.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\_StepperComponent.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\_ImageInputComponent.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\_ScrollComponent.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\_StickyComponent.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\_ToggleComponent.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\_ScrollTopComponent.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\MenuComponent.ts",[],["1933"],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\_SwapperComponent.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\_PasswordMeterComponent.ts",[],["1934","1935","1936","1937"],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\assets\\ts\\components\\SearchComponent.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\components\\header\\page-title\\DefaultTitle.tsx",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\components\\header\\MenuInner.tsx",["1938","1939","1940"],[],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport api from \"../../../../app/configs/api\";\r\nimport { selectRoleUser } from \"../../../../app/redux-module/auth/authSlice\";\r\nimport { selectCountUnreadNoti } from \"../../../../app/redux-module/noti/notiSlice\";\r\nimport { MenuInnerWithSub } from \"./MenuInnerWithSub\";\r\nimport { MenuItem } from \"./MenuItem\";\r\n\r\nexport function MenuInner() {\r\n  const [roles, setRoles] = useState<any | undefined>();\r\n  const CountUnreadNoti = useSelector(selectCountUnreadNoti);\r\n  const roleUser = useSelector(selectRoleUser);\r\n\r\n  useEffect(() => {\r\n    if (roleUser) {\r\n      setRoles(roleUser[0]?.ten_en);\r\n    }\r\n  }, [roleUser]);\r\n\r\n  return (\r\n    <>\r\n      {/* Nộp hồ sơ */}\r\n      {roles &&\r\n      (roles === \"duocsi\" || roles === \"tochuc\" || roles === \"admin\") ? (\r\n        <MenuItem\r\n          to=\"/admin/nop-ho-so/danh-sach-ho-so\"\r\n          title=\"Nộp hồ sơ\"\r\n          fontIcon=\"fa fa-copy\"\r\n        />\r\n      ) : null}\r\n      {/* Chứng chỉ HN-D */}\r\n      {roles && (roles === \"duocsi\" || roles === \"admin\") ? (\r\n        <MenuItem\r\n          title=\"Chứng chỉ HN-D\"\r\n          fontIcon=\"fa fa-scroll\"\r\n          to=\"/admin/chung-chi-hanh-nghe\"\r\n        />\r\n      ) : null}\r\n      {/* Giấy phép ĐKKDD */}\r\n      {roles && (roles === \"tochuc\" || roles === \"admin\") ? (\r\n        <MenuItem\r\n          to=\"/admin/giay-phep-kinh-doanh\"\r\n          title=\"Giấy phép ĐKKDD\"\r\n          fontIcon=\"fa fa-file-alt\"\r\n        />\r\n      ) : null}\r\n      {/* Quản lý CCHN-D  */}\r\n      {roles &&\r\n      (roles === \"admin\" ||\r\n        roles === \"lanhdao\" ||\r\n        roles === \"chuyenvien\" ||\r\n        roles === \"chuyenvienhoidong\" ||\r\n        roles === \"vanthu\") ? (\r\n        <MenuInnerWithSub\r\n          to=\"/apps\"\r\n          fontIcon=\"fa fa-scroll\"\r\n          title=\"Quản lý CCHN-D\"\r\n          menuPlacement=\"bottom-start\"\r\n          menuTrigger=\"click\"\r\n        >\r\n          {/* PAGES */}\r\n          {roles === \"chuyenvien\" || roles === \"lanhdao\" ? (\r\n            <MenuItem\r\n              icon=\"/media/icons/duotune/general/gen051.svg\"\r\n              to=\"/admin/yeu-cau-lien-ket-duoc-si\"\r\n              title=\"Danh sách liên kết\"\r\n            />\r\n          ) : null}\r\n          <MenuItem\r\n            icon=\"/media/icons/duotune/general/gen051.svg\"\r\n            to=\"/admin/danhsach-hoso-thuly-duocsi\"\r\n            title=\"Danh sách hồ sơ\"\r\n          />\r\n          {roles === \"lanhdao\" ? (\r\n            <MenuItem\r\n              icon=\"/media/icons/duotune/general/gen051.svg\"\r\n              to=\"/admin/danhsach-hoso-pheduyet-duocsi\"\r\n              title=\"Danh sách chờ phê duyệt\"\r\n            />\r\n          ) : null}\r\n          {roles === \"vanthu\" ? (\r\n            <MenuItem\r\n              icon=\"/media/icons/duotune/general/gen051.svg\"\r\n              to=\"/admin/danhsach-hoso-pheduyet-duocsi\"\r\n              title=\"Danh sách cấp số\"\r\n            />\r\n          ) : null}\r\n          {roles !== \"vanthu\" ? (\r\n            <MenuItem\r\n              icon=\"/media/icons/duotune/general/gen051.svg\"\r\n              to=\"/admin/danhsach-hoso-choin-duocsi\"\r\n              title=\"Danh sách chờ in\"\r\n            />\r\n          ) : null}\r\n          <MenuItem\r\n            icon=\"/media/icons/duotune/general/gen051.svg\"\r\n            to=\"/admin/danh-sach-chung-chi\"\r\n            title=\"Danh sách chứng chỉ\"\r\n          />\r\n          <MenuItem\r\n            icon=\"/media/icons/duotune/general/gen051.svg\"\r\n            to=\"/admin/danhsach-hoidong\"\r\n            title=\"Danh sách hội dồng\"\r\n          />\r\n          <MenuItem\r\n            icon=\"/media/icons/duotune/general/gen051.svg\"\r\n            to=\"/admin/loai-ma-chung-chi\"\r\n            title=\"Loại mã chứng chỉ\"\r\n          />\r\n          <MenuItem\r\n            icon=\"/media/icons/duotune/general/gen051.svg\"\r\n            to=\"/admin/thong-tin-dao-tao\"\r\n            title=\"Thông tin đào tạo\"\r\n          />\r\n        </MenuInnerWithSub>\r\n      ) : null}\r\n      {/* Quản lí giấy phép ĐKKDD */}\r\n      {roles &&\r\n      (roles === \"admin\" ||\r\n        roles === \"lanhdao\" ||\r\n        roles === \"chuyenvien\" ||\r\n        roles === \"chuyenvienhoidong\" ||\r\n        roles === \"vanthu\") ? (\r\n        <MenuInnerWithSub\r\n          to=\"/apps\"\r\n          fontIcon=\"fa fa-scroll\"\r\n          title=\"Giấy phép ĐKKDD\"\r\n          menuPlacement=\"bottom-start\"\r\n          menuTrigger=\"click\"\r\n        >\r\n          {/* PAGES */}\r\n          <MenuItem\r\n            icon=\"/media/icons/duotune/general/gen051.svg\"\r\n            to=\"/admin/yeu-cau-lien-ket-to-chuc\"\r\n            title=\"Danh sách liên kết\"\r\n          />\r\n          <MenuItem\r\n            icon=\"/media/icons/duotune/general/gen051.svg\"\r\n            to=\"/admin/danhsach-hoso-thuly-tochuc\"\r\n            title=\"Danh sách hồ sơ\"\r\n          />\r\n          <MenuItem\r\n            icon=\"/media/icons/duotune/general/gen051.svg\"\r\n            to=\"/admin/danhsach-hoso-pheduyet-tochuc\"\r\n            title=\"Danh sách chờ phê duyệt\"\r\n          />\r\n          <MenuItem\r\n            icon=\"/media/icons/duotune/general/gen051.svg\"\r\n            to=\"/admin/danhsach-hoso-choin-tochuc\"\r\n            title=\"Danh sách hồ sơ chờ in\"\r\n          />\r\n          <MenuItem\r\n            icon=\"/media/icons/duotune/general/gen051.svg\"\r\n            to=\"/apps/user-management/users\"\r\n            title=\"Danh sách giấy phép\"\r\n          />\r\n          <MenuItem\r\n            icon=\"/media/icons/duotune/general/gen051.svg\"\r\n            to=\"/admin/loai-ma-gps\"\r\n            title=\"Loại mã GPs\"\r\n          />\r\n        </MenuInnerWithSub>\r\n      ) : null}\r\n      {/* Danh mục */}\r\n      {roles && (roles === \"admin\" || roles === \"lanhdao\") ? (\r\n        <MenuInnerWithSub\r\n          title=\"Danh mục\"\r\n          to=\"/apps\"\r\n          menuPlacement=\"bottom-start\"\r\n          menuTrigger=\"click\"\r\n          fontIcon=\"fa fa-list-alt\"\r\n        >\r\n          {/* PAGES */}\r\n          <MenuItem\r\n            icon=\"/media/icons/duotune/general/gen051.svg\"\r\n            to=\"/admin/danh-muc/loai-hinh-kinh-doanh\"\r\n            title=\"Loại hình kinh doanh\"\r\n          />\r\n          <MenuItem\r\n            icon=\"/media/icons/duotune/general/gen051.svg\"\r\n            to=\"/admin/danh-muc/noi-tot-nghiep\"\r\n            title=\"Nơi tốt nghiệp\"\r\n          />\r\n          <MenuItem\r\n            icon=\"/media/icons/duotune/general/gen051.svg\"\r\n            to=\"/admin/danh-muc/vi-tri-hanh-nghe\"\r\n            title=\"Vị trí hành nghề\"\r\n          />\r\n          <MenuItem\r\n            icon=\"/media/icons/duotune/general/gen051.svg\"\r\n            to=\"/admin/danh-muc/hoi-dong\"\r\n            title=\"Hội đồng\"\r\n          />\r\n          <MenuItem\r\n            icon=\"/media/icons/duotune/general/gen051.svg\"\r\n            to=\"/admin/danh-muc/van-bang-chuyen-mon\"\r\n            title=\"Văn bằng chuyên môn\"\r\n          />\r\n          <MenuItem\r\n            icon=\"/media/icons/duotune/general/gen051.svg\"\r\n            to=\"/admin/danh-muc/pham-vi-hoat-dong-kinh-doanh\"\r\n            title=\"Phạm vi hoạt động kinh doanh\"\r\n          />\r\n\r\n          <MenuItem\r\n            icon=\"/media/icons/duotune/general/gen051.svg\"\r\n            to=\"/admin/danh-muc/hoat-dong-chuyen-mon\"\r\n            title=\"Hoạt động chuyên môn\"\r\n          />\r\n          <MenuItem\r\n            icon=\"/media/icons/duotune/general/gen051.svg\"\r\n            to=\"/admin/danh-muc/thanh-phan-ho-so\"\r\n            title=\"Thành phần hồ sơ\"\r\n          />\r\n          <MenuItem\r\n            icon=\"/media/icons/duotune/general/gen051.svg\"\r\n            to=\"/admin/danh-muc/chung-nhan-thuc-hanh-co-so\"\r\n            title=\"Chứng nhận thực hành cơ sở\"\r\n          />\r\n          <MenuItem\r\n            icon=\"/media/icons/duotune/general/gen051.svg\"\r\n            to=\"/admin/danh-muc/thu-tuc\"\r\n            title=\"Thủ tục\"\r\n          />\r\n        </MenuInnerWithSub>\r\n      ) : null}\r\n      {/* Thông báo */}\r\n      <MenuItem\r\n        to=\"/thong-bao\"\r\n        title=\"Thông báo\"\r\n        fontIcon=\"fa fa-bell\"\r\n        amountNoti={CountUnreadNoti}\r\n        // hasBullet\r\n      />\r\n    </>\r\n  );\r\n}\r\n","V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\index.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\components\\header\\MenuItem.tsx",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\layout\\components\\header\\MenuInnerWithSub.tsx",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\layout\\MenuModal.tsx",[],["1941","1942","1943","1944","1945","1946","1947","1948"],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\layout\\InboxCompose.tsx",[],["1949","1950"],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\layout\\header-menus\\HeaderNotificationsMenu.tsx",[],["1951","1952","1953"],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\layout\\header-menus\\HeaderUserMenu.tsx",[],["1954","1955"],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\layout\\sidebar-partials\\SidebarUser.tsx",[],["1956","1957","1958","1959","1960","1961","1962","1963","1964"],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\layout\\user-menu\\UserMenu.tsx",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\content\\editor\\EditorToolbar.ts",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\layout\\sidebar-partials\\SidebarGeneral.tsx",[],["1965","1966","1967","1968","1969","1970","1971","1972","1973","1974","1975","1976","1977","1978","1979","1980","1981","1982","1983","1984","1985","1986","1987","1988","1989","1990","1991","1992","1993","1994","1995","1996"],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\content\\dropdown\\Dropdown2.tsx",[],["1997","1998","1999","2000","2001","2002","2003","2004"],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\content\\portal\\Portal.tsx",[],["2005"],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\content\\dropdown\\Dropdown1.tsx",[],[],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\content\\code-highlight\\CodeBlock.tsx",[],["2006"],"V:\\Projects\\FDHC TSD\\CCHND - React\\Frontend\\src\\_metronic\\partials\\content\\fallback-view\\FallbackView.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\index.tsx",[],[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\redux-module\\store.js",[],[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\configs\\SetupAxios.js",["2007"],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\routing\\AppRoutes.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\i18n\\Metronici18n.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\redux-module\\rootReducer.js",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\redux-module\\rootSaga.js",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\App.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\redux-module\\auth\\authSlice.js",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\routing\\PrivateRoutes.tsx",["2008"],[],"import { FC, Suspense } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Navigate, Route, Routes } from \"react-router-dom\";\r\nimport TopBarProgress from \"react-topbar-progress-indicator\";\r\nimport { getCSSVariableValue } from \"../../_metronic/assets/ts/_utils\";\r\nimport { MasterLayout } from \"../../_metronic/layout/MasterLayout\";\r\n\r\nimport { selectRoleUser } from \"../../app/redux-module/auth/authSlice\";\r\n\r\n\r\n\r\nimport { QuanLyNguoiDung } from \"../modules/apps/admin/quan-ly-nguoi-dung/QuanLyNguoiDung\";\r\nimport { QuanLyLichSu } from \"../modules/apps/admin/quan-ly-lich-su/QuanLyLichSu\";\r\nimport { QuanLyTinTuc } from \"../modules/apps/admin/quan-ly-tin-tuc/QuanLyTinTuc\";\r\nimport { Homepage } from \"../modules/apps/user/Homepage\";\r\n\r\nconst PrivateRoutes = () => {\r\n    const roleUser = useSelector(selectRoleUser);\r\n\r\n    return (\r\n        <Routes>\r\n            <Route element={<MasterLayout />}>\r\n                {/* Redirect to Dashboard after success login/registartion */}\r\n                \r\n                <Route path=\"dang-nhap/*\" element={<Navigate to=\"/dashboard\" />}/>\r\n                <Route path=\"/dang-nhap\" element={<Navigate to=\"/dashboard\" />}/>\r\n\r\n                {roleUser === \"user\" ? \r\n                <Route path=\"/\" element={<Navigate to=\"\" />}\r\n                    />\r\n                : null}\r\n\r\n                <Route path=\"\" element={<Homepage />} />\r\n                <Route path=\"admin/quan-ly-nguoi-dung\" element={<QuanLyNguoiDung />} />\r\n                <Route path=\"admin/quan-ly-lich-su\" element={<QuanLyLichSu />} />\r\n                <Route path=\"admin/quan-ly-tin-tuc\" element={<QuanLyTinTuc />} />\r\n\r\n                {/* Page Not Found */}\r\n                <Route path=\"*\" element={<Navigate to=\"/error/404\" />} />\r\n\r\n            </Route>\r\n        </Routes>\r\n    );\r\n};\r\n\r\nconst SuspensedView: FC = ({ children }) => {\r\n    const baseColor = getCSSVariableValue(\"--bs-primary\");\r\n    TopBarProgress.config({\r\n        barColors: {\r\n            \"0\": baseColor,\r\n        },\r\n        barThickness: 1,\r\n        shadowBlur: 5,\r\n    });\r\n    return <Suspense fallback={<TopBarProgress />}>{children}</Suspense>;\r\n};\r\n\r\nexport { PrivateRoutes };\r\n\r\n","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\errors\\ErrorsPage.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\auth\\Login.js",["2009"],[],"import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport api from \"../../../configs/api\";\r\nimport { authActions } from \"../../../redux-module/auth/authSlice\";\r\n\r\nexport function Login() {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const [form, setForm] = useState({});\r\n    const [errors, setErrors] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [type, setType] = useState(\"password\");\r\n    const [icon, setIcon] = useState(\"fas fa-eye text-primary mx-auto\");\r\n\r\n    const spanStyle = { fontSize: \"15px\", fontWeight: 600 }\r\n\r\n    function showOrHide(e) {\r\n        e.preventDefault();\r\n        type === \"password\" ? setType(\"text\") : setType(\"password\");\r\n\r\n        if (type === \"password\") {\r\n            setType(\"text\");\r\n            setIcon(\"fas fa-eye-slash text-primary mx-auto\");\r\n        } else if (type === \"text\") {\r\n            setType(\"password\");\r\n            setIcon(\"fas fa-eye text-primary mx-auto\");\r\n        }\r\n    }\r\n\r\n    const setField = (field, value) => {\r\n        setForm({\r\n            ...form,\r\n            [field]: value,\r\n        });\r\n        if (!!errors[field])\r\n            setErrors({\r\n                ...errors,\r\n                [field]: null,\r\n            });\r\n    };\r\n\r\n    const formValidation = () => {\r\n        const newErrors = {};\r\n\r\n        const { username, password } = form\r\n\r\n        if (!username || username === \"\") {\r\n            newErrors.username = \"Tên đăng nhập không được bỏ trống!\"\r\n        }\r\n        if (!password || password === \"\") {\r\n            newErrors.password = \"Mật khẩu không được bỏ trống!\"\r\n        }\r\n\r\n        return newErrors;\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newErrors = formValidation();\r\n\r\n        if (Object.keys(newErrors).length > 0) {\r\n            setErrors(newErrors);\r\n        } else {\r\n            onSubmit()\r\n        }\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        axios\r\n            .post(api.API_LOGIN, form)\r\n            .then(({ data }) => {\r\n                if (data) {\r\n                    dispatch(authActions.loginSuccess(data));\r\n                    navigate(\"/admin/quan-ly-nguoi-dung\")\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                toast.error(\"Có lỗi xảy ra khi đăng nhập vào hệ thống\", {\r\n                    position: \"top-right\",\r\n                    autoClose: 1000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    toastId: \"error\",\r\n                });\r\n            })\r\n            .finally(() => {\r\n            });\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div id=\"loginPage\">\r\n            <div className=\"row\" style={{ height: \"100vh\" }}>\r\n                <div className=\"col-5\" style={{ backgroundColor: \"black\" }}> </div>\r\n\r\n                <div className=\"col-7\">\r\n                    <div className=\"px-5 mx-auto\" style={{ width: \"72%\", marginTop: \"24vh\" }}>\r\n                        <div className=\"\">\r\n                            <Form>\r\n                                <Form.Group>\r\n                                    <div className=\"row mb-3\">\r\n                                        <span className=\"required mb-2\" style={spanStyle}>\r\n                                            Tên đăng nhập\r\n                                        </span>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"Tên đăng nhập\"\r\n                                            style={{ fontSize: 14, fontWeight: 400 }}\r\n                                            value={form?.username ? form?.username : \"\"}\r\n                                            onChange={(e) => setField(\"username\", e.target.value)}\r\n                                        />\r\n                                        {errors?.username ? (<span className=\"text-danger\">{errors?.username}</span>) : (\"\")}\r\n\r\n                                    </div>\r\n                                    <div className=\"row mb-3\">\r\n                                        <span className=\"required mb-2\" style={spanStyle}>\r\n                                            Mật khẩu\r\n                                        </span>\r\n                                        <div className=\"input-group px-0\" id=\"show_hide_password\">\r\n                                            <Form.Control\r\n                                                type={type}\r\n                                                placeholder=\"Mật khẩu\"\r\n                                                style={{ fontSize: 14, fontWeight: 400 }}\r\n                                                value={form?.password ? form?.password : \"\"}\r\n                                                onChange={(e) => setField(\"password\", e.target.value)}\r\n                                            />\r\n                                            <div className=\"input-group-addon\">\r\n                                                <button type=\"button\" className=\"btn ps-3 pe-3\" style={{ backgroundColor: \"#fff\", border: \"1px solid #ced4da\", borderTopLeftRadius: 0, borderBottomLeftRadius: 0 }} onClick={showOrHide}>\r\n                                                    <i className={icon}></i>\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                        {errors?.password ? (<span className=\"text-danger\">{errors?.password}</span>) : (\"\")}\r\n\r\n                                    </div>\r\n                                </Form.Group>\r\n\r\n                                <div className=\"form-group mb-1 text-center\">\r\n                                    <button\r\n                                        className=\"btn btn-primary btn-block btn-login\"\r\n                                        style={{ width: \"100%\", height: \"46px\" }}\r\n                                        onClick={(e) => handleSubmit(e)}\r\n                                    >\r\n                                        {loading ? (\r\n                                            <span\r\n                                                className=\"indicator-progress\"\r\n                                                style={{ display: \"block\" }}\r\n                                            >\r\n                                                Vui lòng chờ...\r\n                                                <span className=\"spinner-border spinner-border-sm align-middle ms-2\"></span>\r\n                                            </span>\r\n                                        ) : (\r\n                                            <span>\r\n                                                <i className=\"fas fa-chevron-circle-right\"></i>\r\n                                                &nbsp;&nbsp; Đăng nhập\r\n                                            </span>\r\n                                        )}\r\n                                    </button>\r\n                                </div>\r\n                            </Form>\r\n                            <div className=\"form-group text-center mt-2 mb-3\">\r\n                                <NavLink to=\"/dang-ky\">Bạn chưa có tài khoản ?</NavLink>\r\n                            </div>\r\n\r\n                            <div className=\"form-group float-start\">\r\n                                <div className=\"form-check\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        id=\"flexCheckDefault\"\r\n                                        className=\"form-check-input\"\r\n                                    />\r\n                                    <label\r\n                                        htmlFor=\"flexCheckDefault\"\r\n                                        className=\"form-check-label\"\r\n                                    >\r\n                                        Lưu mật khẩu\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group float-end\">\r\n                                <NavLink to=\"/forgot-password\" className=\"forgot-password\">\r\n                                    Quên mật khẩu\r\n                                </NavLink>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\auth\\components\\ForgotPassword.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\auth\\index.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\redux-module\\auth\\authSaga.js",["2010","2011"],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\redux-module\\common\\commonSlice.js",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\redux-module\\locations\\locationSaga.js",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\redux-module\\locations\\locationSlice.js",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\i18n\\i18nProvider.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\errors\\PageNotFound.js",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\errors\\Accessdenied.js",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\MasterInit.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\configs\\api.js",[],["2012"],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\MasterLayout.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\components\\LoadingIndicator.js",["2013"],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\errors\\components\\Error404.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\core\\index.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\_utils\\index.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\auth\\core\\AuthHelpers.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\auth\\core\\_models.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\auth\\core\\Auth.tsx",[],["2014"],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\helpers\\index.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\components\\Status.js",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\redux-module\\locations\\service.js",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\data\\index.js",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\components\\ScrollTop.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\components\\Content.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\components\\header\\HeaderWrapper.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\components\\toolbar\\Toolbar.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\helpers\\AssetHelpers.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\helpers\\RouterHelpers.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\helpers\\dataExamples.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\core\\DefaultLayoutConfig.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\core\\LayoutSetup.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\core\\LayoutModels.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\core\\LayoutProvider.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\core\\MetronicSplashScreen.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\core\\PageData.tsx",[],["2015","2016","2017","2018"],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\helpers\\crud-helper\\consts.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\helpers\\crud-helper\\models.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\helpers\\crud-helper\\helpers.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\_utils\\_TypesHelpers.ts",[],["2019"],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\index.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\_utils\\_DataUtil.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\_utils\\_DOMEventHandlerUtil.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\_utils\\_ElementStyleUtil.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\_utils\\ElementAnimateUtil.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\_utils\\DomHelpers.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\_utils\\EventHandlerUtil.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\helpers\\components\\KTSVG.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\helpers\\components\\KTCardBody.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\helpers\\components\\KTCard.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\_utils\\models\\ViewPortModel.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\_utils\\models\\OffsetModel.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\auth\\core\\_requests.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\components\\header\\Topbar.tsx",["2020","2021"],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\components\\header\\Header.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\components\\toolbar\\Toolbar1.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\components\\header\\page-title\\DefaultTitle.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\_CookieComponent.ts",[],["2022","2023","2024","2025","2026","2027"],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\_DrawerComponent.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\_ScrollTopComponent.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\_FeedbackComponent.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\_ImageInputComponent.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\_ScrollComponent.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\_StickyComponent.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\_StepperComponent.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\_SwapperComponent.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\_ToggleComponent.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\_PasswordMeterComponent.ts",[],["2028","2029","2030","2031"],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\MenuComponent.ts",[],["2032"],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\ts\\components\\SearchComponent.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\index.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\components\\header\\MenuInner.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\layout\\MenuModal.tsx",[],["2033","2034","2035","2036","2037","2038","2039","2040"],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\layout\\InboxCompose.tsx",[],["2041","2042"],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\layout\\header-menus\\HeaderUserMenu.tsx",[],["2043","2044"],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\layout\\header-menus\\HeaderNotificationsMenu.tsx",[],["2045","2046","2047"],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\components\\header\\MenuInnerWithSub.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\layout\\sidebar-partials\\SidebarUser.tsx",[],["2048","2049","2050","2051","2052","2053","2054","2055","2056"],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\layout\\components\\header\\MenuItem.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\layout\\sidebar-partials\\SidebarGeneral.tsx",[],["2057","2058","2059","2060","2061","2062","2063","2064","2065","2066","2067","2068","2069","2070","2071","2072","2073","2074","2075","2076","2077","2078","2079","2080","2081","2082","2083","2084","2085","2086","2087","2088"],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\layout\\user-menu\\UserMenu.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\content\\dropdown\\Dropdown1.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\content\\editor\\EditorToolbar.ts",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\content\\dropdown\\Dropdown2.tsx",[],["2089","2090","2091","2092","2093","2094","2095","2096"],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\content\\fallback-view\\FallbackView.tsx",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\content\\portal\\Portal.tsx",[],["2097"],"V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\partials\\content\\code-highlight\\CodeBlock.tsx",[],["2098"],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\auth\\Logout.js",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\auth\\Register.js",["2099"],[],"import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport api from \"../../../configs/api\";\r\n\r\nexport function Register() {\r\n    const navigate = useNavigate();\r\n\r\n    const [form, setForm] = useState({});\r\n    const [errors, setErrors] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [type, setType] = useState(\"password\");\r\n    const [icon, setIcon] = useState(\"fas fa-eye text-primary mx-auto\");\r\n\r\n    const spanStyle = { fontSize: \"15px\", fontWeight: 600 }\r\n\r\n    function showOrHide(e) {\r\n        e.preventDefault();\r\n        type === \"password\" ? setType(\"text\") : setType(\"password\");\r\n\r\n        if (type === \"password\") {\r\n            setType(\"text\");\r\n            setIcon(\"fas fa-eye-slash text-primary mx-auto\");\r\n        } else if (type === \"text\") {\r\n            setType(\"password\");\r\n            setIcon(\"fas fa-eye text-primary mx-auto\");\r\n        }\r\n    }\r\n\r\n    const setField = (field, value) => {\r\n        setForm({\r\n            ...form,\r\n            [field]: value,\r\n        });\r\n        if (!!errors[field])\r\n            setErrors({\r\n                ...errors,\r\n                [field]: null,\r\n            });\r\n    };\r\n\r\n    const formValidation = () => {\r\n        const newErrors = {};\r\n\r\n        const { ho, ten, email, tai_khoan, mat_khau, retype_mat_khau, dien_thoai } = form\r\n\r\n        if (!ho || ho === \"\") {\r\n            newErrors.ho = \"Họ không được bỏ trống!\"\r\n        }\r\n        if (!ten || ten === \"\") {\r\n            newErrors.ten = \"Tên không được bỏ trống!\"\r\n        }\r\n        if (!email || email === \"\") {\r\n            newErrors.email = \"Email không được bỏ trống!\"\r\n        } else if (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email) === false) {\r\n            newErrors.email = \"Email không hợp lệ!\"\r\n        }\r\n        if (!tai_khoan || tai_khoan === \"\") {\r\n            newErrors.tai_khoan = \"Tài khoản không được bỏ trống!\"\r\n        }\r\n        if (!dien_thoai || dien_thoai === \"\") {\r\n            newErrors.dien_thoai = \"Điện thoại không được bỏ trống!\"\r\n        } else if (dien_thoai.split(\"\").length !== 10) {\r\n            newErrors.dien_thoai = \"Điện thoại không hợp lệ!\"\r\n        }\r\n        if (!mat_khau || mat_khau === \"\") {\r\n            newErrors.mat_khau = \"Mật khẩu không được bỏ trống!\"\r\n        }\r\n        if (!retype_mat_khau || retype_mat_khau === \"\") {\r\n            newErrors.retype_mat_khau = \"Mật khẩu xác nhận không được bỏ trống!\"\r\n        }\r\n        if (mat_khau !== retype_mat_khau) {\r\n            newErrors.retype_mat_khau = \"Xác nhận mật khẩu không trùng khớp!\"\r\n        }\r\n        return newErrors;\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newErrors = formValidation();\r\n\r\n        if (Object.keys(newErrors).length > 0) {\r\n            setErrors(newErrors);\r\n        } else {\r\n            onSubmit()\r\n        }\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        delete form.retype_mat_khau\r\n        axios\r\n            .post(api.API_REGISTER, form)\r\n            .then((data) => {\r\n                if (data.status === \"SUCCESS\") {\r\n                    setTimeout(() => {\r\n                        navigate(\"/dang-nhap\")\r\n                    }, 2000);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                toast.error(error?.response?.data?.msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 1000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    toastId: \"error\",\r\n                });\r\n            })\r\n            .finally(() => {\r\n            });\r\n    }\r\n\r\n\r\n    return (\r\n        <div id=\"registerPage\">\r\n            <div className=\"row\" style={{ height: \"100vh\" }}>\r\n\r\n                {/* LEFT SIDE */}\r\n                <div className=\"col-5\" style={{ backgroundColor: \"black\" }}> </div>\r\n\r\n                {/* RIGHT SIDE */}\r\n                <div className=\"col-7\">\r\n                    <div className=\"px-5 mx-auto\" style={{ width: \"72%\", marginTop: \"16vh\" }}>\r\n                        <div>\r\n                            <Form>\r\n                                <Form.Group>\r\n\r\n                                    <div className=\"row mb-3\">\r\n                                        <div className=\"col-7 px-0\">\r\n                                            <span className=\"mx-2 mb-2\" style={spanStyle}>\r\n                                                Họ <span className=\"text-danger\">*</span>\r\n                                            </span>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"Nhập họ và tên\"\r\n                                                value={form?.ho ? form?.ho : \"\"}\r\n                                                style={{ fontSize: 14, fontWeight: 400 }}\r\n                                                onChange={(e) => setField(\"ho\", e.target.value)}\r\n                                            />\r\n                                            {errors?.ho ? (<span className=\"text-danger\">{errors?.ho}</span>) : (\"\")}\r\n                                        </div>\r\n\r\n                                        <div className=\"col-5 pl-1 pr-0\">\r\n                                            <span className=\"mx-2 mb-2\" style={spanStyle}>\r\n                                                Tên <span className=\"text-danger\">*</span>\r\n                                            </span>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"Nhập tên\"\r\n                                                value={form?.ten ? form?.ten : \"\"}\r\n                                                style={{ fontSize: 14, fontWeight: 400 }}\r\n                                                onChange={(e) => setField(\"ten\", e.target.value)}\r\n                                            />\r\n                                            {errors?.ten ? (<span className=\"text-danger\">{errors?.ten}</span>) : (\"\")}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row mb-3\">\r\n                                        <span className=\"mb-2\" style={spanStyle}>\r\n                                            Tên đăng nhập <span className=\"text-danger\">*</span>\r\n                                        </span>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"Tên đăng nhập\"\r\n                                            style={{ fontSize: 14, fontWeight: 400 }}\r\n                                            value={form?.tai_khoan ? form?.tai_khoan : \"\"}\r\n                                            onChange={(e) => setField(\"tai_khoan\", e.target.value)}\r\n                                        />\r\n                                        {errors?.tai_khoan ? (<span className=\"text-danger\">{errors?.tai_khoan}</span>) : (\"\")}\r\n                                    </div>\r\n\r\n                                    <div className=\"row mb-3\">\r\n                                        <span className=\"mb-2\" style={spanStyle}>\r\n                                            Số điện thoại <span className=\"text-danger\">*</span>\r\n                                        </span>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"Nhập số điện thoại\"\r\n                                            style={{ fontSize: 14, fontWeight: 400 }}\r\n                                            value={form?.dien_thoai ? form?.dien_thoai : \"\"}\r\n                                            onChange={(e) => setField(\"dien_thoai\", e.target.value)}\r\n                                        />\r\n                                        {errors?.dien_thoai ? (<span className=\"text-danger\">{errors?.dien_thoai}</span>) : (\"\")}\r\n                                    </div>\r\n\r\n                                    <div className=\"row mb-3\">\r\n                                        <span className=\"mb-2\" style={spanStyle}>\r\n                                            Email <span className=\"text-danger\">*</span>\r\n                                        </span>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"Nhập email\"\r\n                                            value={form?.email ? form?.email : \"\"}\r\n                                            style={{ fontSize: 14, fontWeight: 400 }}\r\n                                            onChange={(e) => setField(\"email\", e.target.value)}\r\n                                        />\r\n                                        {errors?.email ? (<span className=\"text-danger\">{errors?.email}</span>) : (\"\")}\r\n                                    </div>\r\n\r\n                                    <div className=\"row mb-3\">\r\n                                        <span className=\"mb-2\" style={spanStyle}>\r\n                                            Mật khẩu <span className=\"text-danger\">*</span>\r\n                                        </span>\r\n                                        <div className=\"input-group px-0\" id=\"show_hide_password\">\r\n                                            <Form.Control\r\n                                                type={type}\r\n                                                placeholder=\"Mật khẩu\"\r\n                                                className=\"inputPassword\"\r\n                                                value={form?.mat_khau ? form?.mat_khau : \"\"}\r\n                                                style={{ fontSize: 14, fontWeight: 400 }}\r\n                                                onChange={(e) => setField(\"mat_khau\", e.target.value)}\r\n                                                autoComplete=\"off\"\r\n                                            />\r\n                                            <div className=\"input-group-addon\">\r\n                                                <button type=\"button\" className=\"btn ps-3 pe-3\" style={{ backgroundColor: \"#fff\", border: \"1px solid #ced4da\", borderTopLeftRadius: 0, borderBottomLeftRadius: 0 }} onClick={showOrHide}>\r\n                                                    <i className={icon}></i>\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                        {errors?.mat_khau ? (<span className=\"text-danger\">{errors?.mat_khau}</span>) : (\"\")}\r\n                                    </div>\r\n\r\n                                    <div className=\"row mb-3\">\r\n                                        <span className=\"mb-2\" style={spanStyle}>\r\n                                            Nhập lại mật khẩu <span className=\"text-danger\">*</span>\r\n                                        </span>\r\n                                        <div className=\"input-group px-0\" id=\"show_hide_password\">\r\n                                            <Form.Control\r\n                                                type={type}\r\n                                                className=\"inputPassword\"\r\n                                                placeholder=\"Xác nhận mật khẩu\"\r\n                                                style={{ fontSize: 14, fontWeight: 400 }}\r\n                                                value={form?.retype_mat_khau ? form?.retype_mat_khau : \"\"}\r\n                                                onChange={(e) => setField(\"retype_mat_khau\", e.target.value)}\r\n                                                autoComplete=\"off\"\r\n                                            />\r\n                                            <div className=\"input-group-addon\">\r\n                                                <button type=\"button\" className=\"btn ps-3 pe-3\" style={{ backgroundColor: \"#fff\", border: \"1px solid #ced4da\", borderTopLeftRadius: 0, borderBottomLeftRadius: 0 }} onClick={showOrHide}>\r\n                                                    <i className={icon}></i>\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                        {errors?.retype_mat_khau ? (<span className=\"text-danger\">{errors?.retype_mat_khau}</span>) : (\"\")}\r\n                                    </div>\r\n\r\n                                </Form.Group>\r\n\r\n                                <div className=\"form-group mb-1 text-center\">\r\n                                    <button\r\n                                        className=\"btn btn-primary btn-block btn-login\"\r\n                                        style={{ width: \"100%\", height: \"46px\" }}\r\n                                        onClick={(e) => {\r\n                                            handleSubmit(e)\r\n                                        }}\r\n                                    >\r\n                                        {loading ? (\r\n                                            <span\r\n                                                className=\"indicator-progress\"\r\n                                                style={{ display: \"block\" }}\r\n                                            >\r\n                                                Vui lòng chờ...\r\n                                                <span className=\"spinner-border spinner-border-sm align-middle ms-2\"></span>\r\n                                            </span>\r\n                                        ) : (\r\n                                            <span>\r\n                                                <i className=\"fas fa-chevron-circle-right\"></i>\r\n                                                &nbsp; &nbsp; Đăng ký\r\n                                            </span>\r\n                                        )}\r\n                                    </button>\r\n                                </div>\r\n                            </Form>\r\n                            <div className=\"form-group text-center mt-2 mb-3\">\r\n                                <NavLink to=\"/dang-nhap\">Bạn đã có tài khoản ?</NavLink>\r\n                            </div>\r\n\r\n                            <div className=\"form-group float-start\">\r\n                                <div className=\"form-check\">\r\n                                    <input\r\n                                        className=\"form-check-input\"\r\n                                        type=\"checkbox\"\r\n                                        value=\"\"\r\n                                        id=\"flexCheckDefault\"\r\n                                    />\r\n                                    <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"flexCheckDefault\"\r\n                                    >\r\n                                        Lưu mật khẩu\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group float-end\">\r\n                                <NavLink to=\"/forgot-password\" className=\"forgot-password\">\r\n                                    Quên mật khẩu\r\n                                </NavLink>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\admin\\quan-ly-nguoi-dung\\QuanLyNguoiDung.js",["2100","2101"],[],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Oval } from \"react-loader-spinner\";\r\nimport { toast } from \"react-toastify\";\r\nimport { conditionalRowStyles, customStyles, paginationOptions } from \"../../../../../_metronic/assets/custom/table\";\r\nimport { useDebounce } from \"../../../../../_metronic/helpers\";\r\nimport api from \"../../../../configs/api\";\r\n\r\n\r\nexport function QuanLyNguoiDung() {\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [perPage, setPerPage] = useState(10);\r\n    const [totalRows, setTotalRows] = useState(0);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [form, setForm] = useState({});\r\n    const [errors, setErrors] = useState({});\r\n    const [searchKey, setSearchKey] = useState(\"\");\r\n\r\n    const [status, setStatus] = useState(\"Tạo mới\");\r\n    const [selectedId, setSelectedId] = useState(\"\");\r\n    const [nguoiDungList, setNguoiDungList] = useState({});\r\n\r\n    const debouncedSearchKey = useDebounce(searchKey, 1000);\r\n\r\n    const openModal = () => setShow(true)\r\n    const closeModal = () => setShow(false)\r\n\r\n\r\n    useEffect(() => {\r\n        if (debouncedSearchKey !== undefined && searchKey !== undefined) {\r\n            getList(1, perPage, debouncedSearchKey);\r\n        }\r\n    }, [debouncedSearchKey]);\r\n\r\n\r\n\r\n    const setField = (field, value) => {\r\n        setForm({\r\n            ...form,\r\n            [field]: value,\r\n        });\r\n        if (!!errors[field])\r\n            setErrors({\r\n                ...errors,\r\n                [field]: null,\r\n            });\r\n    };\r\n\r\n    const getList = ({page_number = page, size = perPage, search_key = searchKey}) => {\r\n        axios\r\n            .post(api.API_QUAN_LY_NGUOI_DUNG + `?page=${page_number}&per_page=${size}`, { search_key: search_key })\r\n            .then(({ data }) => {\r\n                if (data) {\r\n                    setNguoiDungList(data?.results);\r\n                    setTotalRows(data?.total);\r\n                }\r\n            })\r\n    }\r\n\r\n    const handlePageChange = (page) => {\r\n        setPage(page);\r\n        getList({page_number: page});\r\n    };\r\n\r\n    const handlePerRowsChange = async (newPerPage, page) => {\r\n        axios\r\n            .post(api.API_QUAN_LY_NGUOI_DUNG + `?page=${page}&per_page=${newPerPage}`, { search_key: searchKey })\r\n            .then(({ data }) => {\r\n                if (data) {\r\n                    setNguoiDungList(data?.results);\r\n                    setTotalRows(data?.total);\r\n                    setPerPage(newPerPage);\r\n                }\r\n            })\r\n            .catch(() => { })\r\n            .finally(() => { });\r\n    };\r\n\r\n    const handleReset = async () => {\r\n        await setForm({});\r\n        await setErrors({});\r\n    }\r\n\r\n\r\n\r\n    const formValidation = () => {\r\n        const newErrors = {};\r\n        const { ho, ten, tai_khoan, dien_thoai, email, mat_khau } = form;\r\n\r\n        if (!ho || ho === \"\") {\r\n            newErrors.ho = \"Họ không được bỏ trống!\"\r\n        }\r\n        if (!ten || ten === \"\") {\r\n            newErrors.ten = \"Tên không được bỏ trống!\"\r\n        }\r\n        if (!email || email === \"\") {\r\n            newErrors.email = \"Email không được bỏ trống!\"\r\n        } else if (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email) === false) {\r\n            newErrors.email = \"Email không hợp lệ!\"\r\n        }\r\n        if (!dien_thoai || dien_thoai === \"\") {\r\n            newErrors.dien_thoai = \"Điện thoại không được bỏ trống!\"\r\n        } else if (dien_thoai.split(\"\").length !== 10) {\r\n            newErrors.dien_thoai = \"Điện thoại không hợp lệ!\"\r\n        }\r\n        if (status !== \"Cập nhật\") {\r\n            if (!tai_khoan || tai_khoan === \"\") {\r\n                newErrors.tai_khoan = \"Tài khoản không được bỏ trống!\"\r\n            }\r\n            if (!mat_khau || mat_khau === \"\") {\r\n                newErrors.mat_khau = \"Mật khẩu không được bỏ trống!\"\r\n            }\r\n        }\r\n\r\n        return newErrors;\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newErrors = formValidation();\r\n\r\n        if (Object.keys(newErrors).length > 0) {\r\n            setErrors(newErrors);\r\n        } else {\r\n            onSubmit();\r\n        }\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        if (status === \"Thêm mới\") {\r\n            axios\r\n                .post(api.API_QUAN_LY_NGUOI_DUNG_CREATE, form)\r\n                .then(({ data }) => {\r\n                    if (data) {\r\n                        toast.success(\"Thêm mới thành công\", {\r\n                            position: \"top-right\",\r\n                            autoClose: 1000,\r\n                            hideProgressBar: false,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: true,\r\n                            draggable: true,\r\n                            progress: undefined,\r\n                            toastId: \"error\",\r\n                        });\r\n                        getList({page, perPage, searchKey});\r\n                        handleReset();\r\n                        closeModal();\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    toast.error(error?.response?.data?.msg, {\r\n                        position: \"top-right\",\r\n                        autoClose: 1000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        toastId: \"error\",\r\n                    });\r\n                })\r\n                .finally(() => {\r\n                });\r\n        } else if (status === \"Cập nhật\") {\r\n            axios\r\n                .put(api.API_QUAN_LY_NGUOI_DUNG_UPDATE + \"/\" + selectedId, form)\r\n                .then(({ data }) => {\r\n                    if (data) {\r\n                        toast.success(\"Cập nhật thành công\", {\r\n                            position: \"top-right\",\r\n                            autoClose: 1000,\r\n                            hideProgressBar: false,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: true,\r\n                            draggable: true,\r\n                            progress: undefined,\r\n                            toastId: \"error\",\r\n                        });\r\n                        getList({page, perPage, searchKey});\r\n                        handleReset();\r\n                        closeModal();\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    toast.error(error?.response?.data?.msg, {\r\n                        position: \"top-right\",\r\n                        autoClose: 1000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        toastId: \"error\",\r\n                    });\r\n                })\r\n                .finally(() => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        axios\r\n            .delete(api.API_QUAN_LY_NGUOI_DUNG_DELETE + \"/\" + selectedId)\r\n            .then(({ data }) => {\r\n                if (data) {\r\n                    toast.success(\"Xóa người dùng thành công\", {\r\n                        position: \"top-right\",\r\n                        autoClose: 1000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        toastId: \"error\",\r\n                    });\r\n                    getList({page, perPage, searchKey});\r\n                    handleReset();\r\n                    closeModal();\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                toast.error(error?.response?.data?.msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 1000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    toastId: \"error\",\r\n                });\r\n            })\r\n            .finally(() => {\r\n            });\r\n    }\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            name: \"Tên người dùng\",\r\n            selector: (row) => row.ho_ten ? <span>{row?.ho_ten}</span> : <span className=\"text-danger\"> N/A</span>,\r\n            grow: 8,\r\n            style: {\r\n                cursor: \"pointer\",\r\n                color: \"#202124\",\r\n            },\r\n        },\r\n        {\r\n            name: \"Giới tính\",\r\n            selector: (row) => row.gioi_tinh ? <span>{row?.gioi_tinh}</span> : <span className=\"text-danger\"> N/A</span>,\r\n            grow: 3,\r\n        },\r\n        {\r\n            name: \"Số điện thoại\",\r\n            selector: (row) => row.dien_thoai ? <span>{row?.dien_thoai}</span> : <span className=\"text-danger\"> N/A</span>,\r\n            grow: 2,\r\n        },\r\n        {\r\n            name: \"Email\",\r\n            selector: (row) => row.email ? <span>{row?.email}</span> : <span className=\"text-danger\"> N/A</span>,\r\n            grow: 2,\r\n        },\r\n        {\r\n            name: \"Trạng thái\",\r\n            selector: (row) => row.active ? <span>{row?.active}</span> : <span className=\"text-danger\"> N/A</span>,\r\n            grow: 2,\r\n        },\r\n        {\r\n            name: \"\",\r\n            selector: (row) =>\r\n                <div style={{ justifyContent: \"end\" }}>\r\n                    <button className=\"btn btn-link me-2\"\r\n                        onClick={() => {\r\n                            setForm({\r\n                                ho: row?.ho ? row?.ho : \"\",\r\n                                ten: row?.ten ? row?.ten : \"\",\r\n                                tai_khoan: row?.tai_khoan ? row?.tai_khoan : \"\",\r\n                                dien_thoai: row?.dien_thoai ? row?.dien_thoai : \"\",\r\n                                email: row?.email ? row?.email : \"\",\r\n                            })\r\n                            setStatus(\"Cập nhật\");\r\n                            setSelectedId(row?.id)\r\n                            openModal();\r\n                        }}>\r\n                        <i className=\"fas fa-edit text-primary\"></i>\r\n                    </button>\r\n                    <button className=\"btn btn-link ms-2\" onClick={() => handleDelete()}>\r\n                        <i className=\"fas fa-trash-alt text-danger\"></i>\r\n                    </button>\r\n                </div>\r\n            ,\r\n            grow: 2,\r\n        },\r\n    ];\r\n\r\n\r\n    return (\r\n        <div className=\"py-3\">\r\n            <div className=\"card-box\" style={{ padding: \"32px\" }}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 mb-4\">\r\n                        <h4 className=\"fw-bold\">QUẢN LÝ NGƯỜI DÙNG</h4>\r\n                    </div>\r\n\r\n                    <div className=\"col-8 mt-4 mb-6 \">\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Nhập tên người dùng\"\r\n                            style={{ fontSize: 14, fontWeight: 400, height: \"38px\", width: \"320px\" }}\r\n                            onChange={(e) => setSearchKey(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-4 mt-4 mb-6 text-end\">\r\n                        <button className=\"btn btn-primary py-0\" style={{ fontSize: \"13px\", height: \"38px\" }} onClick={() => { setStatus(\"Thêm mới\"); handleReset(); openModal(); }}>\r\n                            <i className=\"fas fa-plus me-1\" style={{ fontSize: \"12px\" }}></i>Tạo mới\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 mt-6 pe-10\">\r\n                        <DataTable\r\n                            noDataComponent={\"Không có dữ liệu ...\"}\r\n                            sortServer\r\n                            progressPending={isLoading}\r\n                            columns={columns}\r\n                            data={nguoiDungList}\r\n                            customStyles={customStyles}\r\n                            pagination\r\n                            highlightOnHover\r\n                            pointerOnHover\r\n                            paginationServer\r\n                            paginationTotalRows={totalRows}\r\n                            onChangeRowsPerPage={handlePerRowsChange}\r\n                            onChangePage={handlePageChange}\r\n                            paginationComponentOptions={paginationOptions}\r\n                            conditionalRowStyles={conditionalRowStyles}\r\n                            // onRowClicked={(data) => {\r\n                            //   detail(data);\r\n                            //   handleRowClicked(data);\r\n                            // }}\r\n                            progressComponent={\r\n                                <div style={{ padding: \"24px\" }}>\r\n                                    <Oval\r\n                                        arialLabel=\"loading-indicator\"\r\n                                        color=\"#007bff\"\r\n                                        height={40}\r\n                                    />\r\n                                </div>\r\n                            }\r\n                        />\r\n                    </div>\r\n\r\n                    <Modal className=\"modal-md-80\" show={show} size=\"lg\">\r\n                        <Modal.Header className=\"py-5\">\r\n                            <label style={{ fontSize: \"18px\", fontWeight: 600 }}> {status} người dùng</label>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <div className=\"row mb-4\">\r\n                                <div className=\"col-2\">\r\n                                    <label className=\"mt-1 mb-2 required\" style={{ fontWeight: 600 }}>Họ</label>\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Nhập họ\"\r\n                                        value={form?.ho ? form?.ho : \"\"}\r\n                                        style={{ fontSize: 13, fontWeight: 400, height: \"34px\" }}\r\n                                        onChange={(e) => setField(\"ho\", e.target.value)}\r\n                                    />\r\n                                    <span className=\"text-danger\">\r\n                                        {errors?.ho ? (<span style={{ fontSize: 13 }}>{errors?.ho}</span>) : (\"\")}\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div className=\"col-2\">\r\n                                    <label className=\"mt-1 mb-2 required\" style={{ fontWeight: 600 }}>Tên</label>\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Nhập tên\"\r\n                                        value={form?.ten ? form?.ten : \"\"}\r\n                                        style={{ fontSize: 13, fontWeight: 400, height: \"34px\" }}\r\n                                        onChange={(e) => setField(\"ten\", e.target.value)}\r\n                                    />\r\n                                    <span className=\"text-danger\">\r\n                                        {errors?.ten ? (<span style={{ fontSize: 13 }}>{errors?.ten}</span>) : (\"\")}\r\n                                    </span>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"row mb-4\">\r\n                                <div className=\"col-2\">\r\n                                    {status === \"Thêm mới\" ?\r\n                                        <label className=\"mt-1 mb-2 required\" style={{ fontWeight: 600 }}>Tên đăng nhập</label>\r\n                                        :\r\n                                        <label className=\"mt-1 mb-2\" style={{ fontWeight: 600 }}>Tên đăng nhập</label>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"col-10\">\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Nhập tên đăng nhập\"\r\n                                        value={form?.tai_khoan ? form?.tai_khoan : \"\"}\r\n                                        style={{ fontSize: 13, fontWeight: 400, height: \"34px\" }}\r\n                                        onChange={(e) => setField(\"tai_khoan\", e.target.value)}\r\n                                        disabled={status === \"Cập nhật\" ? true : false}\r\n                                    />\r\n                                    <span className=\"text-danger\">\r\n                                        {errors?.tai_khoan ? (<span style={{ fontSize: 13 }}>{errors?.tai_khoan}</span>) : (\"\")}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row mb-4\">\r\n                                <div className=\"col-2\">\r\n                                    <label className=\"mt-1 mb-2 required\" style={{ fontWeight: 600 }}>Số điện thoại</label>\r\n                                </div>\r\n                                <div className=\"col-10\">\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Nhập số điện thoại\"\r\n                                        value={form?.dien_thoai ? form?.dien_thoai : \"\"}\r\n                                        style={{ fontSize: 13, fontWeight: 400, height: \"34px\" }}\r\n                                        onChange={(e) => setField(\"dien_thoai\", e.target.value)}\r\n                                    />\r\n                                    <span className=\"text-danger\">\r\n                                        {errors?.dien_thoai ? (<span style={{ fontSize: 13 }}>{errors?.dien_thoai}</span>) : (\"\")}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row mb-4\">\r\n                                <div className=\"col-2\">\r\n                                    <label className=\"mt-1 mb-2 required\" style={{ fontWeight: 600 }}>Email</label>\r\n                                </div>\r\n                                <div className=\"col-10\">\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Nhập email\"\r\n                                        value={form?.email ? form?.email : \"\"}\r\n                                        style={{ fontSize: 13, fontWeight: 400, height: \"34px\" }}\r\n                                        onChange={(e) => setField(\"email\", e.target.value)}\r\n                                    />\r\n                                    <span className=\"text-danger\">\r\n                                        {errors?.email ? (<span style={{ fontSize: 13 }}>{errors?.email}</span>) : (\"\")}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row mb-4\">\r\n                                <div className=\"col-2\">\r\n                                    {status === \"Thêm mới\" ?\r\n                                        <label className=\"mt-1 mb-2 required\" style={{ fontWeight: 600 }}>Mật khẩu</label>\r\n                                        :\r\n                                        <label className=\"mt-1 mb-2\" style={{ fontWeight: 600 }}>Mật khẩu</label>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"col-10\">\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        placeholder=\"Nhập mật khẩu\"\r\n                                        value={form?.mat_khau ? form?.mat_khau : \"\"}\r\n                                        style={{ fontSize: 13, fontWeight: 400, height: \"34px\" }}\r\n                                        onChange={(e) => setField(\"mat_khau\", e.target.value)}\r\n                                        disabled={status === \"Cập nhật\" ? true : false}\r\n                                    />\r\n                                    <span className=\"text-danger\">\r\n                                        {errors?.mat_khau ? (<span style={{ fontSize: 13 }}>{errors?.mat_khau}</span>) : (\"\")}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"row pt-6\">\r\n                                <div className=\"col-12 text-center\">\r\n                                    <button className=\"btn btn-secondary btn-bottom-sm mx-3\" onClick={() => closeModal()}><i className=\"fas fa-arrow-circle-left\"></i> Quay lại</button>\r\n                                    <button className=\"btn btn-primary btn-bottom-sm mx-3\" onClick={() => handleReset()}><i className=\"fas fa-undo-alt\"></i> Reset</button>\r\n                                    <button className=\"btn btn-success btn-bottom-sm mx-3\" onClick={(e) => handleSubmit(e)}><i className=\"fas fa-save\"></i> Lưu</button>\r\n                                </div>\r\n                            </div>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","V:\\Projects\\Final_Project\\Frontend1\\src\\_metronic\\assets\\custom\\table.js",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\admin\\quan-ly-lich-su\\QuanLyLichSu.js",["2102","2103","2104","2105"],[],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Oval } from \"react-loader-spinner\";\r\nimport { conditionalRowStyles, customStyles, paginationOptions } from \"../../../../../_metronic/assets/custom/table\";\r\nimport { useDebounce } from \"../../../../../_metronic/helpers\";\r\nimport api from \"../../../../configs/api\";\r\n\r\n// http://localhost:5000/api/v1/record-get-list\r\nexport function QuanLyLichSu() {\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [perPage, setPerPage] = useState(1);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [totalRows, setTotalRows] = useState(0);\r\n\r\n    const [recordList, setRecordList] = useState({});\r\n\r\n    const [searchKey, setSearchKey] = useState(\"\");\r\n\r\n    const [render, setRender] = useState({});\r\n\r\n    const debouncedSearchKey = useDebounce(searchKey, 1000);\r\n\r\n    useEffect(() => {\r\n        aaaa()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (debouncedSearchKey !== undefined && searchKey !== undefined) {\r\n            getList(1, perPage, debouncedSearchKey);\r\n        }\r\n    },\r\n        [debouncedSearchKey]\r\n    );\r\n\r\n    const getList = (page_number = page, size = perPage, search_key = searchKey) => {\r\n        axios\r\n            .post(api.API_QUAN_LY_LICH_SU + `?page=${page_number}&per_page=${size}`, { search_key: search_key })\r\n            .then(({ data }) => {\r\n                if (data) {\r\n                    setRecordList(data?.results)\r\n                }\r\n            })\r\n    }\r\n\r\n    const handlePageChange = (page) => {\r\n        setPage(page);\r\n        getList({ page_number: page });\r\n    };\r\n\r\n    const handlePerRowsChange = async (newPerPage, page) => {\r\n        axios\r\n            .post(api.API_QUAN_LY_LICH_SU, {})\r\n            .then(({ data }) => {\r\n                if (data) {\r\n                    setRecordList(data?.results);\r\n                    setPerPage(newPerPage);\r\n                }\r\n            })\r\n            .catch(() => { })\r\n            .finally(() => {\r\n            });\r\n    };\r\n\r\n\r\n    const aaaa = () => {\r\n        axios\r\n            .post(\"http://localhost:5000/menu\", {})\r\n            .then(({data}) => {\r\n                if (data) {\r\n                    setRender(data)\r\n                }\r\n            })\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            name: \"Tên người dùng\",\r\n            selector: (row) => row.ho_ten ? <span>{row?.ho_ten}</span> : <span className=\"text-danger\"> N/A</span>,\r\n            grow: 8,\r\n            style: {\r\n                cursor: \"pointer\",\r\n                color: \"#202124\",\r\n            },\r\n        },\r\n        {\r\n            name: \"Giới tính\",\r\n            selector: (row) => row.gioi_tinh ? <span>{row?.gioi_tinh}</span> : <span className=\"text-danger\"> N/A</span>,\r\n            grow: 3,\r\n        },\r\n        {\r\n            name: \"Số điện thoại\",\r\n            selector: (row) => row.dien_thoai ? <span>{row?.dien_thoai}</span> : <span className=\"text-danger\"> N/A</span>,\r\n            grow: 2,\r\n        },\r\n        {\r\n            name: \"Email\",\r\n            selector: (row) => row.email ? <span>{row?.email}</span> : <span className=\"text-danger\"> N/A</span>,\r\n            grow: 2,\r\n        },\r\n        {\r\n            name: \"Trạng thái\",\r\n            selector: (row) => row.active ? <span>{row?.active}</span> : <span className=\"text-danger\"> N/A</span>,\r\n            grow: 2,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div className=\"py-3\">\r\n            <div className=\"card-box\" style={{ padding: \"32px\" }}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 mb-4\">\r\n                        <h4 className=\"fw-bold\">QUẢN LÝ LỊCH SỬ CHẨN ĐOÁN</h4>\r\n                    </div>\r\n\r\n                    <div className=\"col-3 mt-4 mb-10\">\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Nhập tên người dùng\"\r\n                            style={{ fontSize: 14, fontWeight: 400 }}\r\n                            onChange={(e) => setSearchKey(e.target.value)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12 mt-6\">\r\n                        <DataTable\r\n                            noDataComponent={\"Không có dữ liệu ...\"}\r\n                            sortServer\r\n                            progressPending={isLoading}\r\n                            columns={columns}\r\n                            data={recordList}\r\n                            customStyles={customStyles}\r\n                            pagination\r\n                            highlightOnHover\r\n                            pointerOnHover\r\n                            paginationServer\r\n                            paginationTotalRows={totalRows}\r\n                            onChangeRowsPerPage={handlePerRowsChange}\r\n                            onChangePage={handlePageChange}\r\n                            paginationComponentOptions={paginationOptions}\r\n                            conditionalRowStyles={conditionalRowStyles}\r\n                            // onRowClicked={(data) => {\r\n                            //   detail(data);\r\n                            //   handleRowClicked(data);\r\n                            // }}\r\n                            progressComponent={\r\n                                <div\r\n                                    style={{\r\n                                        padding: \"24px\",\r\n                                    }}\r\n                                >\r\n                                    <Oval\r\n                                        arialLabel=\"loading-indicator\"\r\n                                        color=\"#007bff\"\r\n                                        height={40}\r\n                                    />\r\n                                </div>\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\admin\\quan-ly-tin-tuc\\QuanLyTinTuc.js",["2106","2107","2108","2109","2110","2111"],[],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Oval } from \"react-loader-spinner\";\r\nimport { conditionalRowStyles, customStyles, paginationOptions } from \"../../../../../_metronic/assets/custom/table\";\r\nimport { useDebounce } from \"../../../../../_metronic/helpers\";\r\nimport api from \"../../../../configs/api\";\r\n\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport UploadAdapter from \"./uploadAdapter\";\r\n\r\nexport function QuanLyTinTuc() {\r\n\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [perPage, setPerPage] = useState(1);\r\n    const [totalRows, setTotalRows] = useState(0);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [type, setType] = useState(\"Thêm mới\");\r\n    const [errors, setErrors] = useState({});\r\n    const [searchKey, setSearchKey] = useState(\"\");\r\n    const [tinTucList, setTinTucList] = useState([]);\r\n\r\n    const [titleValue, setTitleValue] = useState(\"\");\r\n    const [editorValue, setEditorValue] = useState(\"\");\r\n\r\n    const debouncedSearchKey = useDebounce(searchKey, 1000);\r\n\r\n    useEffect(() => {\r\n        if (debouncedSearchKey !== undefined && searchKey !== undefined) {\r\n            getList(1, perPage, debouncedSearchKey);\r\n        }\r\n    }, [debouncedSearchKey]);\r\n\r\n    const URLUpload = api.API_FILE_UPLOAD\r\n\r\n    const config = {\r\n        language: \"en\",\r\n        placeholder: \"Nhập nội dung...\",\r\n        extraPlugins: [CustomUploadAdapterPlugin],\r\n    };\r\n\r\n    function CustomUploadAdapterPlugin(editor) {\r\n        editor.plugins.get(\"FileRepository\").createUploadAdapter = (loader) => {\r\n            return new UploadAdapter(loader, URLUpload);\r\n        };\r\n    }\r\n\r\n    const handleReset = () => {\r\n        setTitleValue(\"\")\r\n        setEditorValue(\"\")\r\n    }\r\n\r\n    const formValidation = () => {\r\n        const newErrors = {};\r\n\r\n        if (!titleValue || titleValue === \"\") {\r\n            newErrors.title = \"Tiêu đề không được bỏ trống!\"\r\n        }\r\n        if (!editorValue || editorValue === \"\") {\r\n            newErrors.content = \"Nội dung không được bỏ trống!\"\r\n        }\r\n\r\n        return newErrors\r\n    }\r\n\r\n    const getList = (page_number = page, size = perPage, search_key = searchKey) => {\r\n        axios\r\n            .post(api.API_QUAN_LY_NGUOI_DUNG + `?page=${page_number}&per_page=${size}`, { search_key: search_key })\r\n            .then(({ data }) => {\r\n                if (data) {\r\n                    setTinTucList(data?.results)\r\n                }\r\n            })\r\n    }\r\n\r\n    const handlePageChange = (page) => {\r\n        setPage(page);\r\n        getList({ page_number: page });\r\n    };\r\n\r\n    const handlePerRowsChange = async (newPerPage, page) => {\r\n        axios\r\n            .post(api.API_QUAN_LY_NGUOI_DUNG, {})\r\n            .then(({ data }) => {\r\n                if (data) {\r\n                    setTinTucList(data?.results);\r\n                    setPerPage(newPerPage);\r\n                }\r\n            })\r\n            .catch(() => { })\r\n            .finally(() => {\r\n            });\r\n    };\r\n\r\n    const handleSubmit = (e, id) => {\r\n        e.preventDefault();\r\n\r\n        const newErrors = formValidation();\r\n\r\n        if (Object.keys(newErrors).length > 0) {\r\n            setErrors(newErrors);\r\n        } else {\r\n            onSubmit(id);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (id) => {\r\n        if (type === \"Thêm mới\") {\r\n\r\n        } else if (type === \"Cập nhật\") {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n            name: \"Tên người dùng\",\r\n            selector: (row) => row.ho_ten ? <span>{row?.ho_ten}</span> : <span className=\"text-danger\"> N/A</span>,\r\n            grow: 8,\r\n            style: {\r\n                cursor: \"pointer\",\r\n                color: \"#202124\",\r\n            },\r\n        },\r\n        {\r\n            name: \"Tên người dùng\",\r\n            selector: (row) => row.ho_ten ? <span>{row?.ho_ten}</span> : <span className=\"text-danger\"> N/A</span>,\r\n            grow: 8,\r\n            style: {\r\n                cursor: \"pointer\",\r\n                color: \"#202124\",\r\n            },\r\n        },\r\n        {\r\n            name: \"Tên người dùng\",\r\n            selector: (row) => row.ho_ten ? <span>{row?.ho_ten}</span> : <span className=\"text-danger\"> N/A</span>,\r\n            grow: 8,\r\n            style: {\r\n                cursor: \"pointer\",\r\n                color: \"#202124\",\r\n            },\r\n        },\r\n        {\r\n            name: \"Tên người dùng\",\r\n            selector: (row) => row.ho_ten ? <span>{row?.ho_ten}</span> : <span className=\"text-danger\"> N/A</span>,\r\n            grow: 8,\r\n            style: {\r\n                cursor: \"pointer\",\r\n                color: \"#202124\",\r\n            },\r\n        },\r\n        {\r\n            name: \"Tên người dùng\",\r\n            selector: (row) => row.ho_ten ? <span>{row?.ho_ten}</span> : <span className=\"text-danger\"> N/A</span>,\r\n            grow: 8,\r\n            style: {\r\n                cursor: \"pointer\",\r\n                color: \"#202124\",\r\n            },\r\n        },\r\n        {\r\n            name: \"Thao tác\",\r\n            selector: (row) => \r\n                <div className=\"text-center\">\r\n                    <button className=\"btn btn-link\"><i className=\"fas fa-edit mx-2 text-primary\"></i></button>\r\n                    <button className=\"btn btn-link\"><i className=\"fas fa-trash mx-2 text-danger\"></i></button>\r\n                </div>\r\n            ,\r\n            grow: 8,\r\n            style: {\r\n                cursor: \"pointer\",\r\n                color: \"#202124\",\r\n            },\r\n        },\r\n    ]\r\n\r\n\r\n    return (\r\n        <div className=\"py-3\">\r\n            <div className=\"card-box\" style={{ padding: \"32px\" }}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 mb-4\">\r\n                        <h4 className=\"fw-bold\">QUẢN LÝ TIN TỨC</h4>\r\n                    </div>\r\n\r\n                    <div className=\"col-8 mt-4 mb-6\">\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Nhập từ khóa tìm kiếm...\"\r\n                            style={{ fontSize: 14, fontWeight: 400, height: \"38px\", width: \"320px\" }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-4 mt-4 mb-6 text-end\">\r\n                        <button className=\"btn btn-primary py-0\" style={{ fontSize: \"13px\", height: \"38px\" }} onClick={() => { setShow(true) }}>\r\n                            <i className=\"fas fa-plus me-1\" style={{fontSize: \"12px\"}}></i>Tạo mới\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <DataTable\r\n                            noDataComponent={\"Không có dữ liệu ...\"}\r\n                            sortServer\r\n                            progressPending={isLoading}\r\n                            columns={columns}\r\n                            data={tinTucList}\r\n                            customStyles={customStyles}\r\n                            pagination\r\n                            highlightOnHover\r\n                            pointerOnHover\r\n                            paginationServer\r\n                            paginationTotalRows={totalRows}\r\n                            onChangeRowsPerPage={handlePerRowsChange}\r\n                            onChangePage={handlePageChange}\r\n                            paginationComponentOptions={paginationOptions}\r\n                            conditionalRowStyles={conditionalRowStyles}\r\n                            // onRowClicked={(data) => {\r\n                            //   detail(data);\r\n                            //   handleRowClicked(data);\r\n                            // }}\r\n                            progressComponent={\r\n                                <div style={{ padding: \"24px\" }}>\r\n                                    <Oval\r\n                                        arialLabel=\"loading-indicator\"\r\n                                        color=\"#007bff\"\r\n                                        height={40}\r\n                                    />\r\n                                </div>\r\n                            }\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <div dangerouslySetInnerHTML={{ __html: editorValue }}></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Modal show={show} size=\"lg\">\r\n                <Modal.Header className=\"py-5\">\r\n                    <label style={{ fontSize: \"18px\", fontWeight: 600 }}>Thêm mới tin tức</label>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <label className=\"mb-2 required\" style={{ fontWeight: 600 }}>Tiêu đề</label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Nhập tiêu đề...\"\r\n                        value={titleValue ? titleValue : \"\"}\r\n                        onChange={(e) => setTitleValue(e.target.value)}\r\n                        style={{ fontWeight: 400, fontSize: \"13px\", height: \"38px\" }}\r\n                    />\r\n\r\n                    <label className=\"mt-4 mb-2 required\" style={{ fontWeight: 600 }}>Nội dung</label>\r\n                    <CKEditor\r\n                        data={editorValue}\r\n                        editor={ClassicEditor}\r\n                        config={config}\r\n                        onChange={(event, editor) => setEditorValue(editor.getData())}\r\n                    />\r\n                    <div className=\"row pt-6\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <button className=\"btn btn-secondary btn-bottom-md mx-3\" onClick={() => setShow(false)}><i className=\"fas fa-arrow-circle-left\"></i> Quay lại</button>\r\n                            <button className=\"btn btn-primary btn-bottom-md mx-3\" onClick={() => handleReset()}><i className=\"fas fa-undo-alt\"></i> Reset</button>\r\n                            <button className=\"btn btn-success btn-bottom-md mx-3\" onClick={(e) => handleSubmit(e)}><i className=\"fas fa-save\"></i> Lưu</button>\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\admin\\quan-ly-tin-tuc\\uploadAdapter.js",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\user\\Homepage.js",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\user\\Diagnostic.js",["2112","2113","2114","2115"],[],"import { enAU } from \"date-fns/locale\";\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\nimport { DesktopDatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\r\n\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { TextField } from \"@mui/material\";\r\nimport { genderOptions, levelOptions, ynOptions } from \"../../../data\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectCurrentUser } from \"../../../redux-module/auth/authSlice\";\r\nimport api from \"../../../configs/api\";\r\nimport moment from \"moment\";\r\n\r\n\r\nexport function Diagnostic() {\r\n    const dispatch = useDispatch()\r\n    const currentUser = useSelector(selectCurrentUser)\r\n\r\n    const [form, setForm] = useState({});\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const [tuoi, setTuoi] = useState(new Date());\r\n    const [gioiTinh, setGioiTinh] = useState();\r\n    const [chol, setChol] = useState();\r\n    const [gluc, setGluc] = useState();\r\n    const [alco, setAlco] = useState();\r\n    const [smoke, setSmoke] = useState();\r\n    const [activ, setActiv] = useState();\r\n    const [isProgressing, setIsProgressing] = useState(true);\r\n    const [isUpdate, setIsUpdate] = useState(false);\r\n\r\n    const inputStyle = { fontSize: 14, fontWeight: 400, height: 40 }\r\n\r\n    useEffect(() => {\r\n        getUserInfo();\r\n    }, [])\r\n\r\n    const setField = (field, value) => {\r\n        setForm({\r\n            ...form,\r\n            [field]: value,\r\n        });\r\n        if (!!errors[field])\r\n            setErrors({\r\n                ...errors,\r\n                [field]: null,\r\n            });\r\n    };\r\n\r\n\r\n    const getUserInfo = () => {\r\n        axios\r\n            .get(api.API_QUAN_LY_NGUOI_DUNG_INFO + \"/\" + currentUser.id)\r\n            .then(({ data }) => {\r\n                if (data) {\r\n                    handleTuoi(data?.ngay_sinh)\r\n                    handleGioiTinh(data?.gioi_tinh)\r\n                    handleStatics(data)\r\n                    setForm(data)\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    const handleTuoi = (value) => {\r\n        if (typeof value === \"number\") {\r\n            setTuoi(value);\r\n        } else if (typeof value === \"object\") {\r\n            const diff = new Date().getTime() - new Date(value).getTime();\r\n            setField(\"tuoi\", Math.round(diff / (1000 * 3600 * 24)))\r\n            setTuoi(value)\r\n        }\r\n    }\r\n\r\n    const handleGioiTinh = (value) => {\r\n        let gioi_tinh = genderOptions.find((e) => e.value === value);\r\n        setField(\"gioi_tinh\", value);\r\n        setGioiTinh(gioi_tinh);\r\n    }\r\n\r\n    const handleStatics = (value) => {\r\n        if (value?.chol) {\r\n            let chol = levelOptions.find((e) => e.value === value?.chol);\r\n            if (chol) {\r\n                setChol(chol)\r\n            }\r\n        }\r\n        if (value?.gluc) {\r\n            let gluc = levelOptions.find((e) => e.value === value?.gluc);\r\n            if (gluc) {\r\n                setGluc(gluc)\r\n            }\r\n        }\r\n        if (value?.smoke) {\r\n            let smoke = ynOptions.find((e) => e.value === value?.smoke);\r\n            if (smoke) {\r\n                setSmoke(smoke)\r\n            }\r\n        }\r\n        if (value?.alco) {\r\n            let alco = ynOptions.find((e) => e.value === value?.alco);\r\n            if (alco) {\r\n                setAlco(alco)\r\n            }\r\n        }\r\n        if (value?.active) {\r\n            let active = ynOptions.find((e) => e.value === value?.active);\r\n            if (active) {\r\n                setActiv(active)\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSelectes = (type, data) => {\r\n        if (type === \"chol\") {\r\n            setChol(data)\r\n            setField(\"chol\", data.value)\r\n        } else if (type === \"gluc\") {\r\n            setGluc(data)\r\n            setField(\"gluc\", data.value)\r\n        } else if (type === \"smoke\") {\r\n            setSmoke(data)\r\n            setField(\"smoke\", data.value)\r\n        } else if (type === \"alco\") {\r\n            setAlco(data)\r\n            setField(\"chalcool\", data.value)\r\n        } else if (type === \"activ\") {\r\n            setActiv(data)\r\n            setField(\"active\", data.value)\r\n        }\r\n    }\r\n\r\n\r\n    const formValidation = () => {\r\n        const { ho_ten } = form;\r\n\r\n    }\r\n\r\n    return (\r\n        <LocalizationProvider dateAdapter={AdapterDateFns} locale={enAU}>\r\n            <div>\r\n                <div className=\"card-box\" style={{ padding: \"32px\" }}>\r\n                    {isProgressing === true ?\r\n                        <div style={{ height: \"78vh\" }}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 mb-8\">\r\n                                    <h4 className=\"fw-bold\">CHẨN ĐOÁN TÌNH TRẠNG</h4>\r\n                                </div>\r\n\r\n                                <div className=\"col-9 mt-8\">\r\n                                    <h5 className=\"fw-bold\">Thông tin hiện tại</h5>\r\n                                </div>\r\n\r\n                                <div className=\"col-3 mb-10 text-end\">\r\n                                    {isUpdate === false ?\r\n                                        <button className=\"btn btn-primary py-0\" style={{ fontSize: \"13px\", height: \"38px\", width: \"130px\" }} onClick={() => setIsUpdate(true)}>\r\n                                            <i className=\"fas fa-edit me-1\" style={{ fontSize: \"12px\" }}></i>Cập nhật\r\n                                        </button>\r\n                                        :\r\n                                        <div>\r\n                                            <button className=\"btn btn-success py-0 me-2\" style={{ fontSize: \"13px\", height: \"38px\", width: \"130px\" }} onClick={() => setIsUpdate(false)}>\r\n                                                <i className=\"fas fa-save me-1\" style={{ fontSize: \"12px\" }}></i>Lưu\r\n                                            </button>\r\n                                            <button className=\"btn btn-secondary py-0 ms-2\" style={{ fontSize: \"13px\", height: \"38px\", width: \"130px\" }} onClick={() => setIsUpdate(false)}>\r\n                                                <i className=\"fas fa-arrow-right me-1\" style={{ fontSize: \"12px\" }}></i>Quay lại\r\n                                            </button>\r\n                                        </div>\r\n                                    }\r\n\r\n                                </div>\r\n\r\n\r\n                                <div className=\"row mx-1 mb-4\">\r\n                                    <div className=\"col-3\">\r\n                                        <span className=\"d-block mb-1\" style={{ fontWeight: 500 }}>Họ tên: </span>\r\n                                        {isUpdate === false ?\r\n                                            <div className=\"d-flex align-items-center px-4\" style={{ height: 40 }}>{form?.ho_ten !== null ? form?.ho_ten : \"\"}</div>\r\n                                            :\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                value={form?.ho_ten !== null ? form?.ho_ten : \"\"}\r\n                                                style={{ fontSize: 14, fontWeight: 400, height: 40, backgroundColor: \"#fff\" }}\r\n                                                disabled={true}\r\n                                            />\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"col-3\">\r\n                                        <span className=\"d-block mb-1\" style={{ fontWeight: 500 }}>Ngày sinh: </span>\r\n                                        {isUpdate === false ?\r\n                                            <div className=\"d-flex align-items-center px-4\" style={{ height: 40 }}>{form?.ngay_sinh !== null ? moment(Number(form?.ngay_sinh)).format(\"DD/MM/YYYY\") : \"\"}</div>\r\n                                            :\r\n                                            <DesktopDatePicker\r\n                                                label=\" \"\r\n                                                maxDate={new Date()}\r\n                                                inputFormat=\"dd/MM/yyyy\"\r\n                                                value={tuoi}\r\n                                                onChange={handleTuoi}\r\n                                                renderInput={(params) => <TextField {...params} />}\r\n                                            />\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"col-3\">\r\n                                        <span className=\"d-block mb-1\" style={{ fontWeight: 500 }}>Giới tính: </span>\r\n\r\n                                        {isUpdate === false ?\r\n                                            <div className=\"d-flex align-items-center px-4\" style={{ height: 40 }}>{gioiTinh ? gioiTinh.label : \"N/A\"}</div>\r\n                                            :\r\n                                            <Select\r\n                                                value={gioiTinh}\r\n                                                style={inputStyle}\r\n                                                closeOnSelect={true}\r\n                                                options={genderOptions}\r\n                                                placeholder=\"Chọn giới tính\"\r\n                                                onChange={(e) => handleGioiTinh(e.value)}\r\n                                            />\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"col-3\">\r\n                                        <span className=\"d-block mb-1\" style={{ fontWeight: 500 }}>Cân nặng: </span>\r\n                                        {isUpdate === false ?\r\n                                            <div className=\"d-flex align-items-center px-4\" style={{ height: 40 }}>{form?.weight !== null ? form?.weight : \"N/A\"}</div>\r\n                                            :\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                style={inputStyle}\r\n                                                placeholder=\"Nhập cân nặng (kg)\"\r\n                                                value={form?.weight != null ? form?.weight : \"\"}\r\n                                                onChange={(e) => setField(\"weight\", e.target.value)}\r\n                                            />\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row mx-1 mb-4\">\r\n                                    <div className=\"col-3\">\r\n                                        <span className=\"d-block mb-1\" style={{ fontWeight: 500 }}>Chiều cao: </span>\r\n                                        {isUpdate === false ?\r\n                                            <div className=\"d-flex align-items-center px-4\" style={{ height: 40 }}>{form?.height !== null ? form?.height : \"N/A\"}</div>\r\n                                            :\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                style={inputStyle}\r\n                                                placeholder=\"Nhập chiều cao (cm)\"\r\n                                                value={form?.weight != null ? form?.weight : \"\"}\r\n                                                onChange={(e) => setField(\"weight\", e.target.value)}\r\n                                            />\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"col-3\">\r\n                                        <span className=\"d-block mb-1\" style={{ fontWeight: 500 }}>Cholesterol: </span>\r\n                                        {isUpdate === false ?\r\n                                            <div className=\"d-flex align-items-center px-4\" style={{ height: 40 }}>{chol ? chol.label : \"N/A\"}</div>\r\n                                            :\r\n                                            <Select\r\n                                                value={chol}\r\n                                                style={inputStyle}\r\n                                                closeOnSelect={true}\r\n                                                options={levelOptions}\r\n                                                placeholder=\"Chọn mức độ\"\r\n                                                onChange={(e) => handleSelectes(\"chol\", e)}\r\n                                            />\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"col-3\">\r\n                                        <span className=\"d-block mb-1\" style={{ fontWeight: 500 }}>Glucose: </span>\r\n                                        {isUpdate === false ?\r\n                                            <div className=\"d-flex align-items-center px-4\" style={{ height: 40 }}>{gluc ? gluc.label : \"N/A\"}</div>\r\n                                            :\r\n                                            <Select\r\n                                                value={gluc}\r\n                                                style={inputStyle}\r\n                                                closeOnSelect={true}\r\n                                                options={levelOptions}\r\n                                                placeholder=\"Chọn mức độ\"\r\n                                                onChange={(e) => handleSelectes(\"gluc\", e)}\r\n                                            />\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"col-3\">\r\n                                        <span className=\"d-block mb-1\" style={{ fontWeight: 500 }}>Smoke: </span>\r\n                                        {isUpdate === false ?\r\n                                            <div className=\"d-flex align-items-center px-4\" style={{ height: 40 }}>{smoke ? smoke.label : \"N/A\"}</div>\r\n                                            :\r\n                                            <Select\r\n                                                value={smoke}\r\n                                                style={inputStyle}\r\n                                                closeOnSelect={true}\r\n                                                options={ynOptions}\r\n                                                placeholder=\"Chọn mức độ\"\r\n                                                onChange={(e) => handleSelectes(\"smoke\", e)}\r\n                                            />\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row mx-1 mb-4\">\r\n                                    <div className=\"col-3\">\r\n                                        <span className=\"d-block mb-1\" style={{ fontWeight: 500 }}>Alcohol: </span>\r\n                                        {isUpdate === false ?\r\n                                            <div className=\"d-flex align-items-center px-4\" style={{ height: 40 }}>{alco ? alco.label : \"N/A\"}</div>\r\n                                            :\r\n                                            <Select\r\n                                                value={alco}\r\n                                                style={inputStyle}\r\n                                                closeOnSelect={true}\r\n                                                options={ynOptions}\r\n                                                placeholder=\"Chọn mức độ\"\r\n                                                onChange={(e) => handleSelectes(\"alco\", e)}\r\n                                            />\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"col-3\">\r\n                                        <span className=\"d-block mb-1\" style={{ fontWeight: 500 }}>Activity: </span>\r\n                                        {isUpdate === false ?\r\n                                            <div className=\"d-flex align-items-center px-4\" style={{ height: 40 }}>{activ ? activ.label : \"N/A\"}</div>\r\n                                            :\r\n                                            <Select\r\n                                                value={activ}\r\n                                                style={inputStyle}\r\n                                                closeOnSelect={true}\r\n                                                options={ynOptions}\r\n                                                placeholder=\"Chọn mức độ\"\r\n                                                onChange={(e) => handleSelectes(\"activ\", e)}\r\n                                            />\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"row px-0\">\r\n                                    <div className=\"col-12 px-0 text-end\">\r\n                                        <button className=\"btn btn-success py-2\" style={{ fontSize: 14, height: 44 }} onClick={(e) => setIsProgressing(!isProgressing)}><i className=\"fas fa-arrow-right\"></i> Tiến hành chẩn đoán</button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        :\r\n                        <div className=\"d-flex justify-content-center align-items-center\" style={{ height: \"78vh\" }}>\r\n                            Đang nhận data từ thiết bị\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </LocalizationProvider>\r\n    )\r\n}","V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\user\\News.js",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\user\\Info.js",["2116","2117","2118","2119","2120","2121"],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\user\\BlogCreate.js",[],[],"V:\\Projects\\Final_Project\\Frontend1\\src\\app\\modules\\apps\\user\\BlogList.js",[],[],{"ruleId":"2122","severity":1,"message":"2123","line":28,"column":7,"nodeType":"2124","messageId":"2125","endLine":28,"endColumn":22},{"ruleId":"2126","severity":1,"message":"2127","line":8,"column":14,"nodeType":"2124","messageId":"2125","endLine":8,"endColumn":23},{"ruleId":"2126","severity":1,"message":"2128","line":8,"column":25,"nodeType":"2124","messageId":"2125","endLine":8,"endColumn":33},{"ruleId":"2126","severity":1,"message":"2129","line":10,"column":10,"nodeType":"2124","messageId":"2125","endLine":10,"endColumn":15},{"ruleId":"2126","severity":1,"message":"2130","line":11,"column":10,"nodeType":"2124","messageId":"2125","endLine":11,"endColumn":21},{"ruleId":"2126","severity":1,"message":"2131","line":13,"column":10,"nodeType":"2124","messageId":"2125","endLine":13,"endColumn":15},{"ruleId":"2126","severity":1,"message":"2132","line":15,"column":10,"nodeType":"2124","messageId":"2125","endLine":15,"endColumn":27},{"ruleId":"2126","severity":1,"message":"2133","line":24,"column":10,"nodeType":"2124","messageId":"2125","endLine":24,"endColumn":21},{"ruleId":"2134","severity":1,"message":"2135","line":26,"column":6,"nodeType":"2136","endLine":26,"endColumn":8,"suggestions":"2137"},{"ruleId":"2126","severity":1,"message":"2138","line":2,"column":17,"nodeType":"2124","messageId":"2125","endLine":2,"endColumn":21},{"ruleId":"2126","severity":1,"message":"2139","line":3,"column":10,"nodeType":"2124","messageId":"2125","endLine":3,"endColumn":18},{"ruleId":"2126","severity":1,"message":"2140","line":5,"column":10,"nodeType":"2124","messageId":"2125","endLine":5,"endColumn":23},{"ruleId":"2122","severity":1,"message":"2141","line":22,"column":10,"nodeType":"2124","messageId":"2125","endLine":22,"endColumn":20},{"ruleId":"2122","severity":1,"message":"2142","line":13,"column":10,"nodeType":"2124","messageId":"2125","endLine":13,"endColumn":15},{"ruleId":"2134","severity":1,"message":"2143","line":61,"column":6,"nodeType":"2136","endLine":61,"endColumn":8,"suggestions":"2144"},{"ruleId":"2122","severity":1,"message":"2145","line":10,"column":11,"nodeType":"2124","messageId":"2125","endLine":10,"endColumn":29},{"ruleId":"2122","severity":1,"message":"2146","line":11,"column":11,"nodeType":"2124","messageId":"2125","endLine":11,"endColumn":25},{"ruleId":"2134","severity":1,"message":"2147","line":50,"column":6,"nodeType":"2136","endLine":50,"endColumn":19,"suggestions":"2148"},{"ruleId":"2122","severity":1,"message":"2149","line":27,"column":10,"nodeType":"2124","messageId":"2125","endLine":27,"endColumn":19},{"ruleId":"2122","severity":1,"message":"2150","line":29,"column":10,"nodeType":"2124","messageId":"2125","endLine":29,"endColumn":28},{"ruleId":"2122","severity":1,"message":"2151","line":30,"column":10,"nodeType":"2124","messageId":"2125","endLine":30,"endColumn":25},{"ruleId":"2122","severity":1,"message":"2152","line":31,"column":21,"nodeType":"2124","messageId":"2125","endLine":31,"endColumn":33},{"ruleId":"2122","severity":1,"message":"2153","line":33,"column":10,"nodeType":"2124","messageId":"2125","endLine":33,"endColumn":25},{"ruleId":"2122","severity":1,"message":"2154","line":33,"column":27,"nodeType":"2124","messageId":"2125","endLine":33,"endColumn":45},{"ruleId":"2122","severity":1,"message":"2155","line":34,"column":10,"nodeType":"2124","messageId":"2125","endLine":34,"endColumn":27},{"ruleId":"2122","severity":1,"message":"2156","line":34,"column":29,"nodeType":"2124","messageId":"2125","endLine":34,"endColumn":49},{"ruleId":"2122","severity":1,"message":"2157","line":35,"column":10,"nodeType":"2124","messageId":"2125","endLine":35,"endColumn":24},{"ruleId":"2122","severity":1,"message":"2158","line":35,"column":26,"nodeType":"2124","messageId":"2125","endLine":35,"endColumn":43},{"ruleId":"2122","severity":1,"message":"2159","line":36,"column":10,"nodeType":"2124","messageId":"2125","endLine":36,"endColumn":26},{"ruleId":"2122","severity":1,"message":"2160","line":36,"column":28,"nodeType":"2124","messageId":"2125","endLine":36,"endColumn":47},{"ruleId":"2122","severity":1,"message":"2161","line":37,"column":10,"nodeType":"2124","messageId":"2125","endLine":37,"endColumn":29},{"ruleId":"2122","severity":1,"message":"2162","line":39,"column":10,"nodeType":"2124","messageId":"2125","endLine":39,"endColumn":20},{"ruleId":"2122","severity":1,"message":"2163","line":45,"column":9,"nodeType":"2124","messageId":"2125","endLine":45,"endColumn":29},{"ruleId":"2122","severity":1,"message":"2164","line":50,"column":9,"nodeType":"2124","messageId":"2125","endLine":50,"endColumn":29},{"ruleId":"2122","severity":1,"message":"2165","line":55,"column":9,"nodeType":"2124","messageId":"2125","endLine":55,"endColumn":27},{"ruleId":"2122","severity":1,"message":"2166","line":57,"column":9,"nodeType":"2124","messageId":"2125","endLine":57,"endColumn":31},{"ruleId":"2122","severity":1,"message":"2167","line":60,"column":9,"nodeType":"2124","messageId":"2125","endLine":60,"endColumn":35},{"ruleId":"2134","severity":1,"message":"2168","line":126,"column":6,"nodeType":"2136","endLine":126,"endColumn":8,"suggestions":"2169"},{"ruleId":"2122","severity":1,"message":"2170","line":128,"column":10,"nodeType":"2124","messageId":"2125","endLine":128,"endColumn":26},{"ruleId":"2122","severity":1,"message":"2171","line":128,"column":28,"nodeType":"2124","messageId":"2125","endLine":128,"endColumn":47},{"ruleId":"2122","severity":1,"message":"2172","line":134,"column":9,"nodeType":"2124","messageId":"2125","endLine":134,"endColumn":35},{"ruleId":"2122","severity":1,"message":"2173","line":144,"column":17,"nodeType":"2124","messageId":"2125","endLine":144,"endColumn":24},{"ruleId":"2174","severity":1,"message":"2175","line":236,"column":42,"nodeType":"2176","messageId":"2177","endLine":236,"endColumn":44},{"ruleId":"2174","severity":1,"message":"2175","line":247,"column":42,"nodeType":"2176","messageId":"2177","endLine":247,"endColumn":44},{"ruleId":"2134","severity":1,"message":"2168","line":24,"column":6,"nodeType":"2136","endLine":24,"endColumn":8,"suggestions":"2178"},{"ruleId":"2122","severity":1,"message":"2179","line":28,"column":10,"nodeType":"2124","messageId":"2125","endLine":28,"endColumn":16},{"ruleId":"2122","severity":1,"message":"2180","line":21,"column":3,"nodeType":"2124","messageId":"2125","endLine":21,"endColumn":20},{"ruleId":"2122","severity":1,"message":"2181","line":38,"column":10,"nodeType":"2124","messageId":"2125","endLine":38,"endColumn":12},{"ruleId":"2122","severity":1,"message":"2182","line":56,"column":10,"nodeType":"2124","messageId":"2125","endLine":56,"endColumn":20},{"ruleId":"2122","severity":1,"message":"2179","line":59,"column":10,"nodeType":"2124","messageId":"2125","endLine":59,"endColumn":16},{"ruleId":"2134","severity":1,"message":"2168","line":74,"column":6,"nodeType":"2136","endLine":74,"endColumn":8,"suggestions":"2183"},{"ruleId":"2184","severity":1,"message":"2185","line":107,"column":50,"nodeType":"2186","messageId":"2187","endLine":107,"endColumn":51},{"ruleId":"2122","severity":1,"message":"2188","line":144,"column":9,"nodeType":"2124","messageId":"2125","endLine":144,"endColumn":21},{"ruleId":"2184","severity":1,"message":"2185","line":154,"column":50,"nodeType":"2186","messageId":"2187","endLine":154,"endColumn":51},{"ruleId":"2122","severity":1,"message":"2189","line":20,"column":9,"nodeType":"2124","messageId":"2125","endLine":20,"endColumn":17},{"ruleId":"2122","severity":1,"message":"2190","line":26,"column":10,"nodeType":"2124","messageId":"2125","endLine":26,"endColumn":20},{"ruleId":"2122","severity":1,"message":"2191","line":27,"column":10,"nodeType":"2124","messageId":"2125","endLine":27,"endColumn":13},{"ruleId":"2122","severity":1,"message":"2192","line":27,"column":15,"nodeType":"2124","messageId":"2125","endLine":27,"endColumn":21},{"ruleId":"2122","severity":1,"message":"2193","line":28,"column":10,"nodeType":"2124","messageId":"2125","endLine":28,"endColumn":20},{"ruleId":"2122","severity":1,"message":"2194","line":31,"column":10,"nodeType":"2124","messageId":"2125","endLine":31,"endColumn":25},{"ruleId":"2122","severity":1,"message":"2195","line":32,"column":10,"nodeType":"2124","messageId":"2125","endLine":32,"endColumn":18},{"ruleId":"2122","severity":1,"message":"2196","line":32,"column":20,"nodeType":"2124","messageId":"2125","endLine":32,"endColumn":31},{"ruleId":"2122","severity":1,"message":"2197","line":33,"column":9,"nodeType":"2124","messageId":"2125","endLine":33,"endColumn":25},{"ruleId":"2122","severity":1,"message":"2198","line":34,"column":9,"nodeType":"2124","messageId":"2125","endLine":34,"endColumn":24},{"ruleId":"2122","severity":1,"message":"2199","line":56,"column":10,"nodeType":"2124","messageId":"2125","endLine":56,"endColumn":22},{"ruleId":"2122","severity":1,"message":"2200","line":64,"column":9,"nodeType":"2124","messageId":"2125","endLine":64,"endColumn":24},{"ruleId":"2134","severity":1,"message":"2201","line":91,"column":5,"nodeType":"2136","endLine":91,"endColumn":50,"suggestions":"2202"},{"ruleId":"2203","severity":1,"message":"2204","line":606,"column":21,"nodeType":"2205","endLine":609,"endColumn":23},{"ruleId":"2122","severity":1,"message":"2130","line":11,"column":10,"nodeType":"2124","messageId":"2125","endLine":11,"endColumn":21},{"ruleId":"2122","severity":1,"message":"2181","line":20,"column":10,"nodeType":"2124","messageId":"2125","endLine":20,"endColumn":12},{"ruleId":"2122","severity":1,"message":"2206","line":40,"column":9,"nodeType":"2124","messageId":"2125","endLine":40,"endColumn":25},{"ruleId":"2122","severity":1,"message":"2207","line":41,"column":9,"nodeType":"2124","messageId":"2125","endLine":41,"endColumn":26},{"ruleId":"2122","severity":1,"message":"2208","line":43,"column":19,"nodeType":"2124","messageId":"2125","endLine":43,"endColumn":29},{"ruleId":"2122","severity":1,"message":"2200","line":85,"column":9,"nodeType":"2124","messageId":"2125","endLine":85,"endColumn":24},{"ruleId":"2122","severity":1,"message":"2209","line":88,"column":10,"nodeType":"2124","messageId":"2125","endLine":88,"endColumn":18},{"ruleId":"2122","severity":1,"message":"2210","line":88,"column":20,"nodeType":"2124","messageId":"2125","endLine":88,"endColumn":30},{"ruleId":"2122","severity":1,"message":"2211","line":89,"column":10,"nodeType":"2124","messageId":"2125","endLine":89,"endColumn":21},{"ruleId":"2122","severity":1,"message":"2212","line":90,"column":9,"nodeType":"2124","messageId":"2125","endLine":90,"endColumn":21},{"ruleId":"2122","severity":1,"message":"2213","line":91,"column":9,"nodeType":"2124","messageId":"2125","endLine":91,"endColumn":20},{"ruleId":"2122","severity":1,"message":"2214","line":97,"column":10,"nodeType":"2124","messageId":"2125","endLine":97,"endColumn":20},{"ruleId":"2122","severity":1,"message":"2215","line":97,"column":22,"nodeType":"2124","messageId":"2125","endLine":97,"endColumn":35},{"ruleId":"2134","severity":1,"message":"2216","line":153,"column":6,"nodeType":"2136","endLine":153,"endColumn":8,"suggestions":"2217"},{"ruleId":"2134","severity":1,"message":"2218","line":170,"column":5,"nodeType":"2136","endLine":170,"endColumn":50,"suggestions":"2219"},{"ruleId":"2122","severity":1,"message":"2220","line":203,"column":15,"nodeType":"2124","messageId":"2125","endLine":203,"endColumn":18},{"ruleId":"2122","severity":1,"message":"2220","line":266,"column":15,"nodeType":"2124","messageId":"2125","endLine":266,"endColumn":18},{"ruleId":"2122","severity":1,"message":"2220","line":329,"column":15,"nodeType":"2124","messageId":"2125","endLine":329,"endColumn":18},{"ruleId":"2122","severity":1,"message":"2220","line":656,"column":7,"nodeType":"2124","messageId":"2125","endLine":656,"endColumn":10},{"ruleId":"2122","severity":1,"message":"2221","line":657,"column":7,"nodeType":"2124","messageId":"2125","endLine":657,"endColumn":23},{"ruleId":"2122","severity":1,"message":"2222","line":658,"column":7,"nodeType":"2124","messageId":"2125","endLine":658,"endColumn":20},{"ruleId":"2122","severity":1,"message":"2223","line":659,"column":7,"nodeType":"2124","messageId":"2125","endLine":659,"endColumn":20},{"ruleId":"2122","severity":1,"message":"2224","line":660,"column":7,"nodeType":"2124","messageId":"2125","endLine":660,"endColumn":22},{"ruleId":"2203","severity":1,"message":"2204","line":1180,"column":21,"nodeType":"2205","endLine":1183,"endColumn":23},{"ruleId":"2122","severity":1,"message":"2189","line":20,"column":9,"nodeType":"2124","messageId":"2125","endLine":20,"endColumn":17},{"ruleId":"2122","severity":1,"message":"2190","line":26,"column":10,"nodeType":"2124","messageId":"2125","endLine":26,"endColumn":20},{"ruleId":"2122","severity":1,"message":"2191","line":27,"column":10,"nodeType":"2124","messageId":"2125","endLine":27,"endColumn":13},{"ruleId":"2122","severity":1,"message":"2192","line":27,"column":15,"nodeType":"2124","messageId":"2125","endLine":27,"endColumn":21},{"ruleId":"2122","severity":1,"message":"2193","line":28,"column":10,"nodeType":"2124","messageId":"2125","endLine":28,"endColumn":20},{"ruleId":"2122","severity":1,"message":"2194","line":31,"column":10,"nodeType":"2124","messageId":"2125","endLine":31,"endColumn":25},{"ruleId":"2122","severity":1,"message":"2195","line":32,"column":10,"nodeType":"2124","messageId":"2125","endLine":32,"endColumn":18},{"ruleId":"2122","severity":1,"message":"2196","line":32,"column":20,"nodeType":"2124","messageId":"2125","endLine":32,"endColumn":31},{"ruleId":"2122","severity":1,"message":"2197","line":33,"column":9,"nodeType":"2124","messageId":"2125","endLine":33,"endColumn":25},{"ruleId":"2122","severity":1,"message":"2198","line":34,"column":9,"nodeType":"2124","messageId":"2125","endLine":34,"endColumn":24},{"ruleId":"2122","severity":1,"message":"2199","line":56,"column":10,"nodeType":"2124","messageId":"2125","endLine":56,"endColumn":22},{"ruleId":"2122","severity":1,"message":"2200","line":64,"column":9,"nodeType":"2124","messageId":"2125","endLine":64,"endColumn":24},{"ruleId":"2134","severity":1,"message":"2201","line":91,"column":5,"nodeType":"2136","endLine":91,"endColumn":50,"suggestions":"2225"},{"ruleId":"2203","severity":1,"message":"2204","line":590,"column":21,"nodeType":"2205","endLine":593,"endColumn":23},{"ruleId":"2122","severity":1,"message":"2226","line":10,"column":8,"nodeType":"2124","messageId":"2125","endLine":10,"endColumn":14},{"ruleId":"2122","severity":1,"message":"2227","line":11,"column":8,"nodeType":"2124","messageId":"2125","endLine":11,"endColumn":20},{"ruleId":"2122","severity":1,"message":"2228","line":17,"column":10,"nodeType":"2124","messageId":"2125","endLine":17,"endColumn":14},{"ruleId":"2122","severity":1,"message":"2229","line":18,"column":10,"nodeType":"2124","messageId":"2125","endLine":18,"endColumn":17},{"ruleId":"2122","severity":1,"message":"2230","line":19,"column":21,"nodeType":"2124","messageId":"2125","endLine":19,"endColumn":33},{"ruleId":"2203","severity":1,"message":"2204","line":231,"column":13,"nodeType":"2205","endLine":234,"endColumn":15},{"ruleId":"2122","severity":1,"message":"2130","line":11,"column":10,"nodeType":"2124","messageId":"2125","endLine":11,"endColumn":21},{"ruleId":"2122","severity":1,"message":"2231","line":20,"column":3,"nodeType":"2124","messageId":"2125","endLine":20,"endColumn":20},{"ruleId":"2122","severity":1,"message":"2208","line":43,"column":19,"nodeType":"2124","messageId":"2125","endLine":43,"endColumn":29},{"ruleId":"2122","severity":1,"message":"2232","line":65,"column":10,"nodeType":"2124","messageId":"2125","endLine":65,"endColumn":20},{"ruleId":"2122","severity":1,"message":"2233","line":95,"column":9,"nodeType":"2124","messageId":"2125","endLine":95,"endColumn":24},{"ruleId":"2134","severity":1,"message":"2234","line":166,"column":6,"nodeType":"2136","endLine":166,"endColumn":8,"suggestions":"2235"},{"ruleId":"2134","severity":1,"message":"2236","line":181,"column":5,"nodeType":"2136","endLine":181,"endColumn":50,"suggestions":"2237"},{"ruleId":"2122","severity":1,"message":"2238","line":407,"column":9,"nodeType":"2124","messageId":"2125","endLine":407,"endColumn":18},{"ruleId":"2203","severity":1,"message":"2204","line":833,"column":21,"nodeType":"2205","endLine":836,"endColumn":23},{"ruleId":"2134","severity":1,"message":"2168","line":41,"column":6,"nodeType":"2136","endLine":41,"endColumn":8,"suggestions":"2239"},{"ruleId":"2134","severity":1,"message":"2240","line":45,"column":6,"nodeType":"2136","endLine":45,"endColumn":20,"suggestions":"2241"},{"ruleId":"2122","severity":1,"message":"2189","line":18,"column":9,"nodeType":"2124","messageId":"2125","endLine":18,"endColumn":17},{"ruleId":"2134","severity":1,"message":"2242","line":43,"column":5,"nodeType":"2136","endLine":43,"endColumn":26,"suggestions":"2243"},{"ruleId":"2122","severity":1,"message":"2244","line":93,"column":37,"nodeType":"2124","messageId":"2125","endLine":93,"endColumn":45},{"ruleId":"2122","severity":1,"message":"2245","line":93,"column":47,"nodeType":"2124","messageId":"2125","endLine":93,"endColumn":51},{"ruleId":"2122","severity":1,"message":"2191","line":93,"column":53,"nodeType":"2124","messageId":"2125","endLine":93,"endColumn":56},{"ruleId":"2122","severity":1,"message":"2246","line":93,"column":58,"nodeType":"2124","messageId":"2125","endLine":93,"endColumn":64},{"ruleId":"2247","severity":1,"message":"2248","line":262,"column":18,"nodeType":"2186","messageId":"2249","endLine":262,"endColumn":20},{"ruleId":"2247","severity":1,"message":"2248","line":264,"column":47,"nodeType":"2186","messageId":"2249","endLine":264,"endColumn":49},{"ruleId":"2122","severity":1,"message":"2250","line":311,"column":9,"nodeType":"2124","messageId":"2125","endLine":311,"endColumn":25},{"ruleId":"2122","severity":1,"message":"2251","line":316,"column":9,"nodeType":"2124","messageId":"2125","endLine":316,"endColumn":29},{"ruleId":"2203","severity":1,"message":"2204","line":474,"column":23,"nodeType":"2205","endLine":477,"endColumn":25},{"ruleId":"2134","severity":1,"message":"2242","line":41,"column":5,"nodeType":"2136","endLine":41,"endColumn":26,"suggestions":"2252"},{"ruleId":"2247","severity":1,"message":"2248","line":261,"column":18,"nodeType":"2186","messageId":"2249","endLine":261,"endColumn":20},{"ruleId":"2247","severity":1,"message":"2248","line":263,"column":42,"nodeType":"2186","messageId":"2249","endLine":263,"endColumn":44},{"ruleId":"2122","severity":1,"message":"2250","line":310,"column":9,"nodeType":"2124","messageId":"2125","endLine":310,"endColumn":25},{"ruleId":"2122","severity":1,"message":"2251","line":315,"column":9,"nodeType":"2124","messageId":"2125","endLine":315,"endColumn":29},{"ruleId":"2203","severity":1,"message":"2204","line":484,"column":23,"nodeType":"2205","endLine":487,"endColumn":25},{"ruleId":"2203","severity":1,"message":"2204","line":711,"column":21,"nodeType":"2205","endLine":714,"endColumn":23},{"ruleId":"2122","severity":1,"message":"2190","line":34,"column":10,"nodeType":"2124","messageId":"2125","endLine":34,"endColumn":20,"suppressions":"2253"},{"ruleId":"2122","severity":1,"message":"2193","line":35,"column":10,"nodeType":"2124","messageId":"2125","endLine":35,"endColumn":20,"suppressions":"2254"},{"ruleId":"2122","severity":1,"message":"2255","line":44,"column":10,"nodeType":"2124","messageId":"2125","endLine":44,"endColumn":21,"suppressions":"2256"},{"ruleId":"2122","severity":1,"message":"2257","line":44,"column":23,"nodeType":"2124","messageId":"2125","endLine":44,"endColumn":37,"suppressions":"2258"},{"ruleId":"2134","severity":1,"message":"2216","line":104,"column":6,"nodeType":"2136","endLine":104,"endColumn":8,"suggestions":"2259","suppressions":"2260"},{"ruleId":"2134","severity":1,"message":"2218","line":127,"column":5,"nodeType":"2136","endLine":127,"endColumn":50,"suggestions":"2261","suppressions":"2262"},{"ruleId":"2122","severity":1,"message":"2263","line":288,"column":9,"nodeType":"2124","messageId":"2125","endLine":288,"endColumn":15,"suppressions":"2264"},{"ruleId":"2122","severity":1,"message":"2265","line":317,"column":9,"nodeType":"2124","messageId":"2125","endLine":317,"endColumn":25,"suppressions":"2266"},{"ruleId":"2122","severity":1,"message":"2267","line":368,"column":9,"nodeType":"2124","messageId":"2125","endLine":368,"endColumn":18,"suppressions":"2268"},{"ruleId":"2122","severity":1,"message":"2269","line":6,"column":10,"nodeType":"2124","messageId":"2125","endLine":6,"endColumn":14,"suppressions":"2270"},{"ruleId":"2134","severity":1,"message":"2271","line":30,"column":6,"nodeType":"2136","endLine":30,"endColumn":8,"suggestions":"2272","suppressions":"2273"},{"ruleId":"2122","severity":1,"message":"2274","line":34,"column":10,"nodeType":"2124","messageId":"2125","endLine":34,"endColumn":18,"suppressions":"2275"},{"ruleId":"2122","severity":1,"message":"2179","line":35,"column":10,"nodeType":"2124","messageId":"2125","endLine":35,"endColumn":16,"suppressions":"2276"},{"ruleId":"2184","severity":1,"message":"2185","line":47,"column":50,"nodeType":"2186","messageId":"2187","endLine":47,"endColumn":51,"suppressions":"2277"},{"ruleId":"2184","severity":1,"message":"2185","line":95,"column":50,"nodeType":"2186","messageId":"2187","endLine":95,"endColumn":51,"suppressions":"2278"},{"ruleId":"2134","severity":1,"message":"2279","line":58,"column":13,"nodeType":"2176","endLine":67,"endColumn":4,"suppressions":"2280"},{"ruleId":"2134","severity":1,"message":"2281","line":67,"column":6,"nodeType":"2136","endLine":67,"endColumn":8,"suggestions":"2282","suppressions":"2283"},{"ruleId":"2134","severity":1,"message":"2242","line":41,"column":5,"nodeType":"2136","endLine":41,"endColumn":26,"suggestions":"2284"},{"ruleId":"2134","severity":1,"message":"2242","line":61,"column":5,"nodeType":"2136","endLine":61,"endColumn":26,"suggestions":"2285"},{"ruleId":"2122","severity":1,"message":"2286","line":114,"column":7,"nodeType":"2124","messageId":"2125","endLine":114,"endColumn":16},{"ruleId":"2122","severity":1,"message":"2286","line":161,"column":7,"nodeType":"2124","messageId":"2125","endLine":161,"endColumn":16},{"ruleId":"2122","severity":1,"message":"2287","line":162,"column":7,"nodeType":"2124","messageId":"2125","endLine":162,"endColumn":24},{"ruleId":"2122","severity":1,"message":"2286","line":220,"column":7,"nodeType":"2124","messageId":"2125","endLine":220,"endColumn":16},{"ruleId":"2122","severity":1,"message":"2287","line":221,"column":7,"nodeType":"2124","messageId":"2125","endLine":221,"endColumn":24},{"ruleId":"2247","severity":1,"message":"2248","line":327,"column":18,"nodeType":"2186","messageId":"2249","endLine":327,"endColumn":20},{"ruleId":"2247","severity":1,"message":"2248","line":329,"column":39,"nodeType":"2186","messageId":"2249","endLine":329,"endColumn":41},{"ruleId":"2203","severity":1,"message":"2204","line":587,"column":21,"nodeType":"2205","endLine":590,"endColumn":23},{"ruleId":"2122","severity":1,"message":"2288","line":6,"column":8,"nodeType":"2124","messageId":"2125","endLine":6,"endColumn":22},{"ruleId":"2122","severity":1,"message":"2289","line":11,"column":10,"nodeType":"2124","messageId":"2125","endLine":11,"endColumn":17},{"ruleId":"2122","severity":1,"message":"2290","line":24,"column":10,"nodeType":"2124","messageId":"2125","endLine":24,"endColumn":22},{"ruleId":"2122","severity":1,"message":"2291","line":24,"column":24,"nodeType":"2124","messageId":"2125","endLine":24,"endColumn":39},{"ruleId":"2122","severity":1,"message":"2292","line":35,"column":9,"nodeType":"2124","messageId":"2125","endLine":35,"endColumn":24},{"ruleId":"2134","severity":1,"message":"2293","line":44,"column":6,"nodeType":"2136","endLine":44,"endColumn":8,"suggestions":"2294"},{"ruleId":"2122","severity":1,"message":"2295","line":105,"column":9,"nodeType":"2124","messageId":"2125","endLine":105,"endColumn":16},{"ruleId":"2122","severity":1,"message":"2296","line":130,"column":9,"nodeType":"2124","messageId":"2125","endLine":130,"endColumn":22},{"ruleId":"2247","severity":1,"message":"2248","line":181,"column":33,"nodeType":"2186","messageId":"2249","endLine":181,"endColumn":35},{"ruleId":"2122","severity":1,"message":"2297","line":6,"column":10,"nodeType":"2124","messageId":"2125","endLine":6,"endColumn":20},{"ruleId":"2122","severity":1,"message":"2298","line":2,"column":10,"nodeType":"2124","messageId":"2125","endLine":2,"endColumn":14},{"ruleId":"2299","severity":1,"message":"2300","line":579,"column":29,"nodeType":"2205","endLine":579,"endColumn":63,"suppressions":"2301"},{"ruleId":"2299","severity":1,"message":"2300","line":587,"column":29,"nodeType":"2205","endLine":587,"endColumn":63,"suppressions":"2302"},{"ruleId":"2299","severity":1,"message":"2300","line":595,"column":29,"nodeType":"2205","endLine":595,"endColumn":63,"suppressions":"2303"},{"ruleId":"2299","severity":1,"message":"2300","line":603,"column":29,"nodeType":"2205","endLine":603,"endColumn":63,"suppressions":"2304"},{"ruleId":"2299","severity":1,"message":"2300","line":611,"column":29,"nodeType":"2205","endLine":611,"endColumn":63,"suppressions":"2305"},{"ruleId":"2299","severity":1,"message":"2300","line":623,"column":29,"nodeType":"2205","endLine":623,"endColumn":63,"suppressions":"2306"},{"ruleId":"2299","severity":1,"message":"2300","line":631,"column":29,"nodeType":"2205","endLine":631,"endColumn":63,"suppressions":"2307"},{"ruleId":"2299","severity":1,"message":"2300","line":639,"column":29,"nodeType":"2205","endLine":639,"endColumn":63,"suppressions":"2308"},{"ruleId":"2299","severity":1,"message":"2300","line":647,"column":29,"nodeType":"2205","endLine":647,"endColumn":63,"suppressions":"2309"},{"ruleId":"2299","severity":1,"message":"2300","line":655,"column":29,"nodeType":"2205","endLine":655,"endColumn":63,"suppressions":"2310"},{"ruleId":"2299","severity":1,"message":"2311","line":90,"column":17,"nodeType":"2205","endLine":90,"endColumn":45,"suppressions":"2312"},{"ruleId":"2299","severity":1,"message":"2311","line":129,"column":17,"nodeType":"2205","endLine":129,"endColumn":45,"suppressions":"2313"},{"ruleId":"2299","severity":1,"message":"2311","line":168,"column":17,"nodeType":"2205","endLine":168,"endColumn":45,"suppressions":"2314"},{"ruleId":"2122","severity":1,"message":"2127","line":4,"column":10,"nodeType":"2124","messageId":"2125","endLine":4,"endColumn":19},{"ruleId":"2315","severity":1,"message":"2316","line":9,"column":1,"nodeType":"2317","endLine":188,"endColumn":3,"suppressions":"2318"},{"ruleId":"2122","severity":1,"message":"2319","line":26,"column":10,"nodeType":"2124","messageId":"2125","endLine":26,"endColumn":12},{"ruleId":"2134","severity":1,"message":"2320","line":47,"column":5,"nodeType":"2136","endLine":47,"endColumn":26,"suggestions":"2321"},{"ruleId":"2247","severity":1,"message":"2248","line":282,"column":18,"nodeType":"2186","messageId":"2249","endLine":282,"endColumn":20},{"ruleId":"2247","severity":1,"message":"2248","line":284,"column":40,"nodeType":"2186","messageId":"2249","endLine":284,"endColumn":42},{"ruleId":"2299","severity":1,"message":"2311","line":425,"column":11,"nodeType":"2205","endLine":431,"endColumn":12},{"ruleId":"2203","severity":1,"message":"2204","line":522,"column":23,"nodeType":"2205","endLine":525,"endColumn":25},{"ruleId":"2134","severity":1,"message":"2322","line":54,"column":6,"nodeType":"2136","endLine":54,"endColumn":8,"suggestions":"2323"},{"ruleId":"2299","severity":1,"message":"2300","line":29,"column":17,"nodeType":"2205","endLine":29,"endColumn":47,"suppressions":"2324"},{"ruleId":"2299","severity":1,"message":"2300","line":47,"column":21,"nodeType":"2205","endLine":47,"endColumn":80,"suppressions":"2325"},{"ruleId":"2299","severity":1,"message":"2300","line":51,"column":21,"nodeType":"2205","endLine":51,"endColumn":80,"suppressions":"2326"},{"ruleId":"2299","severity":1,"message":"2300","line":55,"column":21,"nodeType":"2205","endLine":55,"endColumn":80,"suppressions":"2327"},{"ruleId":"2134","severity":1,"message":"2328","line":109,"column":6,"nodeType":"2136","endLine":109,"endColumn":8,"suggestions":"2329","suppressions":"2330"},{"ruleId":"2122","severity":1,"message":"2331","line":9,"column":23,"nodeType":"2124","messageId":"2125","endLine":9,"endColumn":34},{"ruleId":"2134","severity":1,"message":"2332","line":83,"column":6,"nodeType":"2136","endLine":83,"endColumn":19,"suggestions":"2333"},{"ruleId":"2122","severity":1,"message":"2334","line":245,"column":9,"nodeType":"2124","messageId":"2125","endLine":245,"endColumn":21},{"ruleId":"2122","severity":1,"message":"2335","line":474,"column":9,"nodeType":"2124","messageId":"2125","endLine":474,"endColumn":19},{"ruleId":"2122","severity":1,"message":"2336","line":22,"column":9,"nodeType":"2124","messageId":"2125","endLine":22,"endColumn":24},{"ruleId":"2122","severity":1,"message":"2337","line":24,"column":10,"nodeType":"2124","messageId":"2125","endLine":24,"endColumn":26},{"ruleId":"2122","severity":1,"message":"2338","line":32,"column":10,"nodeType":"2124","messageId":"2125","endLine":32,"endColumn":23},{"ruleId":"2122","severity":1,"message":"2339","line":33,"column":10,"nodeType":"2124","messageId":"2125","endLine":33,"endColumn":23},{"ruleId":"2122","severity":1,"message":"2340","line":34,"column":10,"nodeType":"2124","messageId":"2125","endLine":34,"endColumn":22},{"ruleId":"2122","severity":1,"message":"2341","line":35,"column":10,"nodeType":"2124","messageId":"2125","endLine":35,"endColumn":27},{"ruleId":"2122","severity":1,"message":"2342","line":36,"column":10,"nodeType":"2124","messageId":"2125","endLine":36,"endColumn":27},{"ruleId":"2122","severity":1,"message":"2343","line":37,"column":10,"nodeType":"2124","messageId":"2125","endLine":37,"endColumn":26},{"ruleId":"2122","severity":1,"message":"2344","line":38,"column":10,"nodeType":"2124","messageId":"2125","endLine":38,"endColumn":22},{"ruleId":"2122","severity":1,"message":"2345","line":38,"column":24,"nodeType":"2124","messageId":"2125","endLine":38,"endColumn":39},{"ruleId":"2122","severity":1,"message":"2346","line":39,"column":10,"nodeType":"2124","messageId":"2125","endLine":39,"endColumn":21},{"ruleId":"2122","severity":1,"message":"2347","line":39,"column":23,"nodeType":"2124","messageId":"2125","endLine":39,"endColumn":37},{"ruleId":"2122","severity":1,"message":"2348","line":42,"column":10,"nodeType":"2124","messageId":"2125","endLine":42,"endColumn":27},{"ruleId":"2122","severity":1,"message":"2349","line":43,"column":10,"nodeType":"2124","messageId":"2125","endLine":43,"endColumn":27},{"ruleId":"2122","severity":1,"message":"2350","line":44,"column":10,"nodeType":"2124","messageId":"2125","endLine":44,"endColumn":26},{"ruleId":"2122","severity":1,"message":"2351","line":45,"column":10,"nodeType":"2124","messageId":"2125","endLine":45,"endColumn":31},{"ruleId":"2122","severity":1,"message":"2352","line":46,"column":10,"nodeType":"2124","messageId":"2125","endLine":46,"endColumn":31},{"ruleId":"2122","severity":1,"message":"2353","line":47,"column":10,"nodeType":"2124","messageId":"2125","endLine":47,"endColumn":30},{"ruleId":"2122","severity":1,"message":"2354","line":48,"column":10,"nodeType":"2124","messageId":"2125","endLine":48,"endColumn":26},{"ruleId":"2122","severity":1,"message":"2355","line":48,"column":28,"nodeType":"2124","messageId":"2125","endLine":48,"endColumn":47},{"ruleId":"2122","severity":1,"message":"2356","line":49,"column":10,"nodeType":"2124","messageId":"2125","endLine":49,"endColumn":25},{"ruleId":"2122","severity":1,"message":"2357","line":49,"column":27,"nodeType":"2124","messageId":"2125","endLine":49,"endColumn":45},{"ruleId":"2134","severity":1,"message":"2332","line":156,"column":6,"nodeType":"2136","endLine":156,"endColumn":19,"suggestions":"2358"},{"ruleId":"2122","severity":1,"message":"2334","line":265,"column":9,"nodeType":"2124","messageId":"2125","endLine":265,"endColumn":21},{"ruleId":"2122","severity":1,"message":"2359","line":368,"column":9,"nodeType":"2124","messageId":"2125","endLine":368,"endColumn":26},{"ruleId":"2122","severity":1,"message":"2360","line":374,"column":9,"nodeType":"2124","messageId":"2125","endLine":374,"endColumn":26},{"ruleId":"2122","severity":1,"message":"2361","line":379,"column":9,"nodeType":"2124","messageId":"2125","endLine":379,"endColumn":25},{"ruleId":"2122","severity":1,"message":"2362","line":479,"column":9,"nodeType":"2124","messageId":"2125","endLine":479,"endColumn":30},{"ruleId":"2122","severity":1,"message":"2363","line":485,"column":9,"nodeType":"2124","messageId":"2125","endLine":485,"endColumn":30},{"ruleId":"2122","severity":1,"message":"2364","line":490,"column":9,"nodeType":"2124","messageId":"2125","endLine":490,"endColumn":29},{"ruleId":"2122","severity":1,"message":"2335","line":494,"column":9,"nodeType":"2124","messageId":"2125","endLine":494,"endColumn":19},{"ruleId":"2122","severity":1,"message":"2365","line":6,"column":10,"nodeType":"2124","messageId":"2125","endLine":6,"endColumn":20},{"ruleId":"2122","severity":1,"message":"2127","line":5,"column":10,"nodeType":"2124","messageId":"2125","endLine":5,"endColumn":19},{"ruleId":"2122","severity":1,"message":"2366","line":25,"column":10,"nodeType":"2124","messageId":"2125","endLine":25,"endColumn":29},{"ruleId":"2122","severity":1,"message":"2367","line":25,"column":31,"nodeType":"2124","messageId":"2125","endLine":25,"endColumn":53},{"ruleId":"2122","severity":1,"message":"2368","line":44,"column":11,"nodeType":"2124","messageId":"2125","endLine":44,"endColumn":18},{"ruleId":"2247","severity":1,"message":"2248","line":60,"column":32,"nodeType":"2186","messageId":"2249","endLine":60,"endColumn":34},{"ruleId":"2122","severity":1,"message":"2369","line":69,"column":9,"nodeType":"2124","messageId":"2125","endLine":69,"endColumn":20},{"ruleId":"2122","severity":1,"message":"2370","line":79,"column":9,"nodeType":"2124","messageId":"2125","endLine":79,"endColumn":24},{"ruleId":"2247","severity":1,"message":"2371","line":90,"column":62,"nodeType":"2186","messageId":"2249","endLine":90,"endColumn":64},{"ruleId":"2122","severity":1,"message":"2149","line":14,"column":10,"nodeType":"2124","messageId":"2125","endLine":14,"endColumn":19},{"ruleId":"2122","severity":1,"message":"2372","line":15,"column":9,"nodeType":"2124","messageId":"2125","endLine":15,"endColumn":17},{"ruleId":"2134","severity":1,"message":"2373","line":58,"column":6,"nodeType":"2136","endLine":58,"endColumn":8,"suggestions":"2374"},{"ruleId":"2134","severity":1,"message":"2375","line":86,"column":6,"nodeType":"2136","endLine":86,"endColumn":31,"suggestions":"2376"},{"ruleId":"2134","severity":1,"message":"2377","line":125,"column":6,"nodeType":"2136","endLine":125,"endColumn":19,"suggestions":"2378"},{"ruleId":"2122","severity":1,"message":"2334","line":225,"column":9,"nodeType":"2124","messageId":"2125","endLine":225,"endColumn":21},{"ruleId":"2134","severity":1,"message":"2379","line":23,"column":6,"nodeType":"2136","endLine":23,"endColumn":42,"suggestions":"2380"},{"ruleId":"2122","severity":1,"message":"2381","line":9,"column":9,"nodeType":"2124","messageId":"2125","endLine":9,"endColumn":22},{"ruleId":"2122","severity":1,"message":"2127","line":2,"column":10,"nodeType":"2124","messageId":"2125","endLine":2,"endColumn":19},{"ruleId":"2122","severity":1,"message":"2149","line":14,"column":10,"nodeType":"2124","messageId":"2125","endLine":14,"endColumn":19},{"ruleId":"2122","severity":1,"message":"2189","line":17,"column":9,"nodeType":"2124","messageId":"2125","endLine":17,"endColumn":17},{"ruleId":"2122","severity":1,"message":"2382","line":57,"column":9,"nodeType":"2124","messageId":"2125","endLine":57,"endColumn":23},{"ruleId":"2134","severity":1,"message":"2383","line":92,"column":6,"nodeType":"2136","endLine":92,"endColumn":19,"suggestions":"2384"},{"ruleId":"2247","severity":1,"message":"2248","line":410,"column":15,"nodeType":"2186","messageId":"2249","endLine":410,"endColumn":17},{"ruleId":"2122","severity":1,"message":"2149","line":18,"column":10,"nodeType":"2124","messageId":"2125","endLine":18,"endColumn":19},{"ruleId":"2122","severity":1,"message":"2372","line":19,"column":9,"nodeType":"2124","messageId":"2125","endLine":19,"endColumn":17},{"ruleId":"2122","severity":1,"message":"2385","line":19,"column":23,"nodeType":"2124","messageId":"2125","endLine":19,"endColumn":37},{"ruleId":"2122","severity":1,"message":"2386","line":20,"column":28,"nodeType":"2124","messageId":"2125","endLine":20,"endColumn":47},{"ruleId":"2134","severity":1,"message":"2387","line":71,"column":6,"nodeType":"2136","endLine":71,"endColumn":21,"suggestions":"2388"},{"ruleId":"2134","severity":1,"message":"2389","line":79,"column":6,"nodeType":"2136","endLine":79,"endColumn":25,"suggestions":"2390"},{"ruleId":"2203","severity":1,"message":"2204","line":728,"column":13,"nodeType":"2205","endLine":731,"endColumn":15},{"ruleId":"2122","severity":1,"message":"2391","line":8,"column":10,"nodeType":"2124","messageId":"2125","endLine":8,"endColumn":27},{"ruleId":"2122","severity":1,"message":"2392","line":13,"column":10,"nodeType":"2124","messageId":"2125","endLine":13,"endColumn":16},{"ruleId":"2122","severity":1,"message":"2393","line":25,"column":9,"nodeType":"2124","messageId":"2125","endLine":25,"endColumn":19},{"ruleId":"2134","severity":1,"message":"2394","line":32,"column":6,"nodeType":"2136","endLine":32,"endColumn":8,"suggestions":"2395"},{"ruleId":"2203","severity":1,"message":"2204","line":184,"column":13,"nodeType":"2205","endLine":187,"endColumn":15},{"ruleId":"2122","severity":1,"message":"2396","line":56,"column":9,"nodeType":"2124","messageId":"2125","endLine":56,"endColumn":13},{"ruleId":"2134","severity":1,"message":"2397","line":74,"column":6,"nodeType":"2136","endLine":74,"endColumn":21,"suggestions":"2398"},{"ruleId":"2134","severity":1,"message":"2399","line":86,"column":6,"nodeType":"2136","endLine":86,"endColumn":25,"suggestions":"2400"},{"ruleId":"2122","severity":1,"message":"2401","line":88,"column":9,"nodeType":"2124","messageId":"2125","endLine":88,"endColumn":21},{"ruleId":"2122","severity":1,"message":"2402","line":95,"column":9,"nodeType":"2124","messageId":"2125","endLine":95,"endColumn":22},{"ruleId":"2247","severity":1,"message":"2371","line":237,"column":62,"nodeType":"2186","messageId":"2249","endLine":237,"endColumn":64},{"ruleId":"2247","severity":1,"message":"2248","line":593,"column":18,"nodeType":"2186","messageId":"2249","endLine":593,"endColumn":20},{"ruleId":"2247","severity":1,"message":"2248","line":595,"column":45,"nodeType":"2186","messageId":"2249","endLine":595,"endColumn":47},{"ruleId":"2247","severity":1,"message":"2248","line":698,"column":50,"nodeType":"2186","messageId":"2249","endLine":698,"endColumn":52},{"ruleId":"2203","severity":1,"message":"2204","line":1079,"column":13,"nodeType":"2205","endLine":1082,"endColumn":15},{"ruleId":"2174","severity":1,"message":"2175","line":68,"column":59,"nodeType":"2176","messageId":"2177","endLine":68,"endColumn":61},{"ruleId":"2134","severity":1,"message":"2403","line":47,"column":6,"nodeType":"2136","endLine":47,"endColumn":8,"suggestions":"2404"},{"ruleId":"2134","severity":1,"message":"2405","line":53,"column":6,"nodeType":"2136","endLine":53,"endColumn":21,"suggestions":"2406"},{"ruleId":"2134","severity":1,"message":"2407","line":57,"column":6,"nodeType":"2136","endLine":57,"endColumn":18,"suggestions":"2408"},{"ruleId":"2247","severity":1,"message":"2248","line":168,"column":18,"nodeType":"2186","messageId":"2249","endLine":168,"endColumn":20},{"ruleId":"2247","severity":1,"message":"2248","line":170,"column":39,"nodeType":"2186","messageId":"2249","endLine":170,"endColumn":41},{"ruleId":"2203","severity":1,"message":"2204","line":597,"column":13,"nodeType":"2205","endLine":600,"endColumn":15},{"ruleId":"2122","severity":1,"message":"2149","line":16,"column":10,"nodeType":"2124","messageId":"2125","endLine":16,"endColumn":19},{"ruleId":"2134","severity":1,"message":"2409","line":38,"column":6,"nodeType":"2136","endLine":38,"endColumn":32,"suggestions":"2410"},{"ruleId":"2122","severity":1,"message":"2149","line":11,"column":10,"nodeType":"2124","messageId":"2125","endLine":11,"endColumn":19},{"ruleId":"2122","severity":1,"message":"2411","line":13,"column":10,"nodeType":"2124","messageId":"2125","endLine":13,"endColumn":17},{"ruleId":"2122","severity":1,"message":"2412","line":14,"column":10,"nodeType":"2124","messageId":"2125","endLine":14,"endColumn":22},{"ruleId":"2134","severity":1,"message":"2413","line":21,"column":6,"nodeType":"2136","endLine":21,"endColumn":8,"suggestions":"2414"},{"ruleId":"2122","severity":1,"message":"2337","line":13,"column":12,"nodeType":"2124","messageId":"2125","endLine":13,"endColumn":28},{"ruleId":"2122","severity":1,"message":"2334","line":54,"column":11,"nodeType":"2124","messageId":"2125","endLine":54,"endColumn":23},{"ruleId":"2415","severity":1,"message":"2416","line":235,"column":29,"nodeType":"2417","messageId":"2418","endLine":235,"endColumn":55},{"ruleId":"2134","severity":1,"message":"2419","line":52,"column":6,"nodeType":"2136","endLine":52,"endColumn":19,"suggestions":"2420"},{"ruleId":"2134","severity":1,"message":"2332","line":142,"column":6,"nodeType":"2136","endLine":142,"endColumn":19,"suggestions":"2421"},{"ruleId":"2122","severity":1,"message":"2190","line":27,"column":10,"nodeType":"2124","messageId":"2125","endLine":27,"endColumn":20},{"ruleId":"2122","severity":1,"message":"2422","line":32,"column":10,"nodeType":"2124","messageId":"2125","endLine":32,"endColumn":18},{"ruleId":"2134","severity":1,"message":"2320","line":71,"column":5,"nodeType":"2136","endLine":71,"endColumn":26,"suggestions":"2423"},{"ruleId":"2122","severity":1,"message":"2396","line":181,"column":13,"nodeType":"2124","messageId":"2125","endLine":181,"endColumn":17},{"ruleId":"2247","severity":1,"message":"2248","line":408,"column":42,"nodeType":"2186","messageId":"2249","endLine":408,"endColumn":44},{"ruleId":"2203","severity":1,"message":"2204","line":529,"column":13,"nodeType":"2205","endLine":538,"endColumn":15},{"ruleId":"2203","severity":1,"message":"2204","line":540,"column":13,"nodeType":"2205","endLine":544,"endColumn":15},{"ruleId":"2203","severity":1,"message":"2204","line":775,"column":25,"nodeType":"2205","endLine":778,"endColumn":27},{"ruleId":"2122","severity":1,"message":"2191","line":21,"column":10,"nodeType":"2124","messageId":"2125","endLine":21,"endColumn":13},{"ruleId":"2122","severity":1,"message":"2192","line":21,"column":15,"nodeType":"2124","messageId":"2125","endLine":21,"endColumn":21},{"ruleId":"2134","severity":1,"message":"2242","line":39,"column":5,"nodeType":"2136","endLine":39,"endColumn":26,"suggestions":"2424"},{"ruleId":"2122","severity":1,"message":"2244","line":90,"column":18,"nodeType":"2124","messageId":"2125","endLine":90,"endColumn":26},{"ruleId":"2122","severity":1,"message":"2245","line":90,"column":28,"nodeType":"2124","messageId":"2125","endLine":90,"endColumn":32},{"ruleId":"2122","severity":1,"message":"2191","line":90,"column":34,"nodeType":"2124","messageId":"2125","endLine":90,"endColumn":37},{"ruleId":"2122","severity":1,"message":"2246","line":90,"column":39,"nodeType":"2124","messageId":"2125","endLine":90,"endColumn":45},{"ruleId":"2247","severity":1,"message":"2248","line":255,"column":18,"nodeType":"2186","messageId":"2249","endLine":255,"endColumn":20},{"ruleId":"2247","severity":1,"message":"2248","line":257,"column":45,"nodeType":"2186","messageId":"2249","endLine":257,"endColumn":47},{"ruleId":"2203","severity":1,"message":"2204","line":448,"column":23,"nodeType":"2205","endLine":451,"endColumn":25},{"ruleId":"2122","severity":1,"message":"2189","line":17,"column":9,"nodeType":"2124","messageId":"2125","endLine":17,"endColumn":17},{"ruleId":"2134","severity":1,"message":"2242","line":42,"column":5,"nodeType":"2136","endLine":42,"endColumn":26,"suggestions":"2425"},{"ruleId":"2122","severity":1,"message":"2426","line":95,"column":18,"nodeType":"2124","messageId":"2125","endLine":95,"endColumn":30},{"ruleId":"2122","severity":1,"message":"2244","line":95,"column":32,"nodeType":"2124","messageId":"2125","endLine":95,"endColumn":40},{"ruleId":"2122","severity":1,"message":"2245","line":95,"column":42,"nodeType":"2124","messageId":"2125","endLine":95,"endColumn":46},{"ruleId":"2122","severity":1,"message":"2191","line":95,"column":48,"nodeType":"2124","messageId":"2125","endLine":95,"endColumn":51},{"ruleId":"2122","severity":1,"message":"2246","line":95,"column":53,"nodeType":"2124","messageId":"2125","endLine":95,"endColumn":59},{"ruleId":"2247","severity":1,"message":"2248","line":263,"column":18,"nodeType":"2186","messageId":"2249","endLine":263,"endColumn":20},{"ruleId":"2247","severity":1,"message":"2248","line":265,"column":50,"nodeType":"2186","messageId":"2249","endLine":265,"endColumn":52},{"ruleId":"2122","severity":1,"message":"2250","line":312,"column":9,"nodeType":"2124","messageId":"2125","endLine":312,"endColumn":25},{"ruleId":"2122","severity":1,"message":"2251","line":317,"column":9,"nodeType":"2124","messageId":"2125","endLine":317,"endColumn":29},{"ruleId":"2203","severity":1,"message":"2204","line":469,"column":23,"nodeType":"2205","endLine":472,"endColumn":25},{"ruleId":"2122","severity":1,"message":"2427","line":148,"column":9,"nodeType":"2124","messageId":"2125","endLine":148,"endColumn":22},{"ruleId":"2134","severity":1,"message":"2428","line":27,"column":6,"nodeType":"2136","endLine":27,"endColumn":8,"suggestions":"2429","suppressions":"2430"},{"ruleId":"2122","severity":1,"message":"2431","line":9,"column":10,"nodeType":"2124","messageId":"2125","endLine":9,"endColumn":23},{"ruleId":"2122","severity":1,"message":"2432","line":12,"column":9,"nodeType":"2124","messageId":"2125","endLine":12,"endColumn":17},{"ruleId":"2122","severity":1,"message":"2319","line":23,"column":10,"nodeType":"2124","messageId":"2125","endLine":23,"endColumn":12},{"ruleId":"2134","severity":1,"message":"2242","line":43,"column":5,"nodeType":"2136","endLine":43,"endColumn":26,"suggestions":"2433"},{"ruleId":"2247","severity":1,"message":"2248","line":279,"column":42,"nodeType":"2186","messageId":"2249","endLine":279,"endColumn":44},{"ruleId":"2299","severity":1,"message":"2311","line":409,"column":11,"nodeType":"2205","endLine":415,"endColumn":12},{"ruleId":"2203","severity":1,"message":"2204","line":489,"column":23,"nodeType":"2205","endLine":492,"endColumn":25},{"ruleId":"2122","severity":1,"message":"2189","line":17,"column":9,"nodeType":"2124","messageId":"2125","endLine":17,"endColumn":17},{"ruleId":"2122","severity":1,"message":"2434","line":23,"column":10,"nodeType":"2124","messageId":"2125","endLine":23,"endColumn":22},{"ruleId":"2122","severity":1,"message":"2435","line":23,"column":24,"nodeType":"2124","messageId":"2125","endLine":23,"endColumn":39},{"ruleId":"2122","severity":1,"message":"2436","line":24,"column":10,"nodeType":"2124","messageId":"2125","endLine":24,"endColumn":17},{"ruleId":"2122","severity":1,"message":"2437","line":24,"column":19,"nodeType":"2124","messageId":"2125","endLine":24,"endColumn":29},{"ruleId":"2122","severity":1,"message":"2319","line":28,"column":10,"nodeType":"2124","messageId":"2125","endLine":28,"endColumn":12},{"ruleId":"2122","severity":1,"message":"2191","line":29,"column":10,"nodeType":"2124","messageId":"2125","endLine":29,"endColumn":13},{"ruleId":"2122","severity":1,"message":"2192","line":29,"column":15,"nodeType":"2124","messageId":"2125","endLine":29,"endColumn":21},{"ruleId":"2134","severity":1,"message":"2242","line":46,"column":5,"nodeType":"2136","endLine":46,"endColumn":26,"suggestions":"2438"},{"ruleId":"2247","severity":1,"message":"2248","line":265,"column":18,"nodeType":"2186","messageId":"2249","endLine":265,"endColumn":20},{"ruleId":"2247","severity":1,"message":"2248","line":267,"column":49,"nodeType":"2186","messageId":"2249","endLine":267,"endColumn":51},{"ruleId":"2203","severity":1,"message":"2204","line":459,"column":23,"nodeType":"2205","endLine":462,"endColumn":25},{"ruleId":"2122","severity":1,"message":"2191","line":24,"column":10,"nodeType":"2124","messageId":"2125","endLine":24,"endColumn":13},{"ruleId":"2122","severity":1,"message":"2192","line":24,"column":15,"nodeType":"2124","messageId":"2125","endLine":24,"endColumn":21},{"ruleId":"2134","severity":1,"message":"2320","line":42,"column":5,"nodeType":"2136","endLine":42,"endColumn":26,"suggestions":"2439"},{"ruleId":"2247","severity":1,"message":"2248","line":278,"column":18,"nodeType":"2186","messageId":"2249","endLine":278,"endColumn":20},{"ruleId":"2247","severity":1,"message":"2248","line":280,"column":56,"nodeType":"2186","messageId":"2249","endLine":280,"endColumn":58},{"ruleId":"2203","severity":1,"message":"2204","line":476,"column":23,"nodeType":"2205","endLine":479,"endColumn":25},{"ruleId":"2122","severity":1,"message":"2319","line":23,"column":10,"nodeType":"2124","messageId":"2125","endLine":23,"endColumn":12},{"ruleId":"2134","severity":1,"message":"2440","line":46,"column":5,"nodeType":"2136","endLine":46,"endColumn":26,"suggestions":"2441"},{"ruleId":"2299","severity":1,"message":"2311","line":493,"column":11,"nodeType":"2205","endLine":499,"endColumn":12},{"ruleId":"2203","severity":1,"message":"2204","line":571,"column":23,"nodeType":"2205","endLine":574,"endColumn":25},{"ruleId":"2134","severity":1,"message":"2242","line":39,"column":5,"nodeType":"2136","endLine":39,"endColumn":26,"suggestions":"2442"},{"ruleId":"2247","severity":1,"message":"2248","line":259,"column":18,"nodeType":"2186","messageId":"2249","endLine":259,"endColumn":20},{"ruleId":"2247","severity":1,"message":"2248","line":261,"column":46,"nodeType":"2186","messageId":"2249","endLine":261,"endColumn":48},{"ruleId":"2203","severity":1,"message":"2204","line":452,"column":23,"nodeType":"2205","endLine":455,"endColumn":25},{"ruleId":"2122","severity":1,"message":"2142","line":8,"column":18,"nodeType":"2124","messageId":"2125","endLine":8,"endColumn":23},{"ruleId":"2122","severity":1,"message":"2372","line":14,"column":11,"nodeType":"2124","messageId":"2125","endLine":14,"endColumn":19},{"ruleId":"2122","severity":1,"message":"2190","line":21,"column":10,"nodeType":"2124","messageId":"2125","endLine":21,"endColumn":20},{"ruleId":"2122","severity":1,"message":"2191","line":22,"column":10,"nodeType":"2124","messageId":"2125","endLine":22,"endColumn":13},{"ruleId":"2122","severity":1,"message":"2192","line":22,"column":15,"nodeType":"2124","messageId":"2125","endLine":22,"endColumn":21},{"ruleId":"2122","severity":1,"message":"2193","line":23,"column":10,"nodeType":"2124","messageId":"2125","endLine":23,"endColumn":20},{"ruleId":"2122","severity":1,"message":"2443","line":23,"column":22,"nodeType":"2124","messageId":"2125","endLine":23,"endColumn":35},{"ruleId":"2122","severity":1,"message":"2194","line":25,"column":10,"nodeType":"2124","messageId":"2125","endLine":25,"endColumn":25},{"ruleId":"2122","severity":1,"message":"2195","line":26,"column":10,"nodeType":"2124","messageId":"2125","endLine":26,"endColumn":18},{"ruleId":"2122","severity":1,"message":"2196","line":26,"column":20,"nodeType":"2124","messageId":"2125","endLine":26,"endColumn":31},{"ruleId":"2122","severity":1,"message":"2197","line":27,"column":9,"nodeType":"2124","messageId":"2125","endLine":27,"endColumn":25},{"ruleId":"2122","severity":1,"message":"2198","line":28,"column":9,"nodeType":"2124","messageId":"2125","endLine":28,"endColumn":24},{"ruleId":"2122","severity":1,"message":"2444","line":30,"column":10,"nodeType":"2124","messageId":"2125","endLine":30,"endColumn":17},{"ruleId":"2122","severity":1,"message":"2445","line":31,"column":10,"nodeType":"2124","messageId":"2125","endLine":31,"endColumn":14},{"ruleId":"2122","severity":1,"message":"2446","line":31,"column":16,"nodeType":"2124","messageId":"2125","endLine":31,"endColumn":23},{"ruleId":"2122","severity":1,"message":"2447","line":33,"column":9,"nodeType":"2124","messageId":"2125","endLine":33,"endColumn":19},{"ruleId":"2122","severity":1,"message":"2448","line":34,"column":9,"nodeType":"2124","messageId":"2125","endLine":34,"endColumn":18},{"ruleId":"2122","severity":1,"message":"2449","line":35,"column":22,"nodeType":"2124","messageId":"2125","endLine":35,"endColumn":35},{"ruleId":"2134","severity":1,"message":"2242","line":45,"column":5,"nodeType":"2136","endLine":45,"endColumn":26,"suggestions":"2450"},{"ruleId":"2122","severity":1,"message":"2451","line":82,"column":10,"nodeType":"2124","messageId":"2125","endLine":82,"endColumn":14},{"ruleId":"2122","severity":1,"message":"2452","line":83,"column":10,"nodeType":"2124","messageId":"2125","endLine":83,"endColumn":16},{"ruleId":"2122","severity":1,"message":"2453","line":85,"column":9,"nodeType":"2124","messageId":"2125","endLine":85,"endColumn":19},{"ruleId":"2247","severity":1,"message":"2248","line":225,"column":43,"nodeType":"2186","messageId":"2249","endLine":225,"endColumn":45},{"ruleId":"2203","severity":1,"message":"2204","line":259,"column":19,"nodeType":"2205","endLine":262,"endColumn":21},{"ruleId":"2122","severity":1,"message":"2190","line":27,"column":10,"nodeType":"2124","messageId":"2125","endLine":27,"endColumn":20},{"ruleId":"2122","severity":1,"message":"2193","line":28,"column":10,"nodeType":"2124","messageId":"2125","endLine":28,"endColumn":20},{"ruleId":"2134","severity":1,"message":"2454","line":55,"column":6,"nodeType":"2136","endLine":55,"endColumn":8,"suggestions":"2455"},{"ruleId":"2134","severity":1,"message":"2456","line":68,"column":5,"nodeType":"2136","endLine":68,"endColumn":27,"suggestions":"2457"},{"ruleId":"2122","severity":1,"message":"2453","line":118,"column":9,"nodeType":"2124","messageId":"2125","endLine":118,"endColumn":19},{"ruleId":"2122","severity":1,"message":"2263","line":130,"column":9,"nodeType":"2124","messageId":"2125","endLine":130,"endColumn":15},{"ruleId":"2122","severity":1,"message":"2265","line":159,"column":9,"nodeType":"2124","messageId":"2125","endLine":159,"endColumn":25},{"ruleId":"2203","severity":1,"message":"2204","line":369,"column":23,"nodeType":"2205","endLine":372,"endColumn":25},{"ruleId":"2122","severity":1,"message":"2190","line":23,"column":10,"nodeType":"2124","messageId":"2125","endLine":23,"endColumn":20},{"ruleId":"2122","severity":1,"message":"2193","line":24,"column":10,"nodeType":"2124","messageId":"2125","endLine":24,"endColumn":20},{"ruleId":"2122","severity":1,"message":"2194","line":27,"column":10,"nodeType":"2124","messageId":"2125","endLine":27,"endColumn":25},{"ruleId":"2122","severity":1,"message":"2195","line":28,"column":10,"nodeType":"2124","messageId":"2125","endLine":28,"endColumn":18},{"ruleId":"2122","severity":1,"message":"2196","line":28,"column":20,"nodeType":"2124","messageId":"2125","endLine":28,"endColumn":31},{"ruleId":"2122","severity":1,"message":"2197","line":29,"column":9,"nodeType":"2124","messageId":"2125","endLine":29,"endColumn":25},{"ruleId":"2122","severity":1,"message":"2198","line":30,"column":9,"nodeType":"2124","messageId":"2125","endLine":30,"endColumn":24},{"ruleId":"2122","severity":1,"message":"2458","line":33,"column":10,"nodeType":"2124","messageId":"2125","endLine":33,"endColumn":20},{"ruleId":"2122","severity":1,"message":"2459","line":34,"column":10,"nodeType":"2124","messageId":"2125","endLine":34,"endColumn":19},{"ruleId":"2122","severity":1,"message":"2460","line":37,"column":10,"nodeType":"2124","messageId":"2125","endLine":37,"endColumn":22},{"ruleId":"2122","severity":1,"message":"2461","line":38,"column":10,"nodeType":"2124","messageId":"2125","endLine":38,"endColumn":22},{"ruleId":"2122","severity":1,"message":"2462","line":51,"column":10,"nodeType":"2124","messageId":"2125","endLine":51,"endColumn":29},{"ruleId":"2134","severity":1,"message":"2201","line":76,"column":5,"nodeType":"2136","endLine":76,"endColumn":50,"suggestions":"2463"},{"ruleId":"2122","severity":1,"message":"2453","line":183,"column":9,"nodeType":"2124","messageId":"2125","endLine":183,"endColumn":19},{"ruleId":"2203","severity":1,"message":"2204","line":420,"column":21,"nodeType":"2205","endLine":423,"endColumn":23},{"ruleId":"2134","severity":1,"message":"2242","line":60,"column":5,"nodeType":"2136","endLine":60,"endColumn":26,"suggestions":"2464"},{"ruleId":"2122","severity":1,"message":"2286","line":113,"column":7,"nodeType":"2124","messageId":"2125","endLine":113,"endColumn":16},{"ruleId":"2122","severity":1,"message":"2286","line":160,"column":7,"nodeType":"2124","messageId":"2125","endLine":160,"endColumn":16},{"ruleId":"2122","severity":1,"message":"2287","line":161,"column":7,"nodeType":"2124","messageId":"2125","endLine":161,"endColumn":24},{"ruleId":"2122","severity":1,"message":"2286","line":219,"column":7,"nodeType":"2124","messageId":"2125","endLine":219,"endColumn":16},{"ruleId":"2122","severity":1,"message":"2287","line":220,"column":7,"nodeType":"2124","messageId":"2125","endLine":220,"endColumn":24},{"ruleId":"2247","severity":1,"message":"2248","line":326,"column":18,"nodeType":"2186","messageId":"2249","endLine":326,"endColumn":20},{"ruleId":"2247","severity":1,"message":"2248","line":328,"column":39,"nodeType":"2186","messageId":"2249","endLine":328,"endColumn":41},{"ruleId":"2203","severity":1,"message":"2204","line":570,"column":21,"nodeType":"2205","endLine":573,"endColumn":23},{"ruleId":"2122","severity":1,"message":"2465","line":134,"column":10,"nodeType":"2124","messageId":"2125","endLine":134,"endColumn":28,"suppressions":"2466"},{"ruleId":"2134","severity":1,"message":"2467","line":150,"column":6,"nodeType":"2136","endLine":150,"endColumn":8,"suggestions":"2468","suppressions":"2469"},{"ruleId":"2134","severity":1,"message":"2470","line":155,"column":6,"nodeType":"2136","endLine":155,"endColumn":20,"suggestions":"2471","suppressions":"2472"},{"ruleId":"2134","severity":1,"message":"2473","line":186,"column":6,"nodeType":"2136","endLine":186,"endColumn":41,"suggestions":"2474","suppressions":"2475"},{"ruleId":"2134","severity":1,"message":"2476","line":191,"column":6,"nodeType":"2136","endLine":191,"endColumn":50,"suggestions":"2477","suppressions":"2478"},{"ruleId":"2134","severity":1,"message":"2479","line":202,"column":6,"nodeType":"2136","endLine":202,"endColumn":43,"suggestions":"2480","suppressions":"2481"},{"ruleId":"2134","severity":1,"message":"2482","line":212,"column":6,"nodeType":"2136","endLine":212,"endColumn":52,"suggestions":"2483","suppressions":"2484"},{"ruleId":"2134","severity":1,"message":"2485","line":223,"column":6,"nodeType":"2136","endLine":223,"endColumn":41,"suggestions":"2486","suppressions":"2487"},{"ruleId":"2134","severity":1,"message":"2488","line":233,"column":6,"nodeType":"2136","endLine":233,"endColumn":50,"suggestions":"2489","suppressions":"2490"},{"ruleId":"2174","severity":1,"message":"2175","line":2637,"column":48,"nodeType":"2176","messageId":"2177","endLine":2637,"endColumn":50,"suppressions":"2491"},{"ruleId":"2174","severity":1,"message":"2175","line":2649,"column":50,"nodeType":"2176","messageId":"2177","endLine":2649,"endColumn":52,"suppressions":"2492"},{"ruleId":"2134","severity":1,"message":"2493","line":59,"column":6,"nodeType":"2136","endLine":59,"endColumn":16,"suggestions":"2494","suppressions":"2495"},{"ruleId":"2134","severity":1,"message":"2496","line":68,"column":6,"nodeType":"2136","endLine":68,"endColumn":19,"suggestions":"2497","suppressions":"2498"},{"ruleId":"2134","severity":1,"message":"2499","line":77,"column":6,"nodeType":"2136","endLine":77,"endColumn":19,"suggestions":"2500","suppressions":"2501"},{"ruleId":"2134","severity":1,"message":"2496","line":91,"column":6,"nodeType":"2136","endLine":91,"endColumn":16,"suggestions":"2502","suppressions":"2503"},{"ruleId":"2504","severity":1,"message":"2505","line":24,"column":24,"nodeType":"2506","messageId":"2507","endLine":24,"endColumn":25,"suggestions":"2508","suppressions":"2509"},{"ruleId":"2504","severity":1,"message":"2510","line":12,"column":47,"nodeType":"2506","messageId":"2507","endLine":12,"endColumn":48,"suggestions":"2511","suppressions":"2512"},{"ruleId":"2504","severity":1,"message":"2513","line":12,"column":55,"nodeType":"2506","messageId":"2507","endLine":12,"endColumn":56,"suggestions":"2514","suppressions":"2515"},{"ruleId":"2504","severity":1,"message":"2516","line":12,"column":57,"nodeType":"2506","messageId":"2507","endLine":12,"endColumn":58,"suggestions":"2517","suppressions":"2518"},{"ruleId":"2504","severity":1,"message":"2519","line":12,"column":59,"nodeType":"2506","messageId":"2507","endLine":12,"endColumn":60,"suggestions":"2520","suppressions":"2521"},{"ruleId":"2504","severity":1,"message":"2522","line":12,"column":65,"nodeType":"2506","messageId":"2507","endLine":12,"endColumn":66,"suggestions":"2523","suppressions":"2524"},{"ruleId":"2504","severity":1,"message":"2525","line":12,"column":67,"nodeType":"2506","messageId":"2507","endLine":12,"endColumn":68,"suggestions":"2526","suppressions":"2527"},{"ruleId":"2126","severity":1,"message":"2528","line":4,"column":10,"nodeType":"2124","messageId":"2125","endLine":4,"endColumn":33},{"ruleId":"2126","severity":1,"message":"2529","line":8,"column":3,"nodeType":"2124","messageId":"2125","endLine":8,"endColumn":27},{"ruleId":"2126","severity":1,"message":"2530","line":929,"column":19,"nodeType":"2124","messageId":"2125","endLine":929,"endColumn":23,"suppressions":"2531"},{"ruleId":"2504","severity":1,"message":"2532","line":137,"column":20,"nodeType":"2506","messageId":"2507","endLine":137,"endColumn":21,"suggestions":"2533","suppressions":"2534"},{"ruleId":"2504","severity":1,"message":"2519","line":137,"column":28,"nodeType":"2506","messageId":"2507","endLine":137,"endColumn":29,"suggestions":"2535","suppressions":"2536"},{"ruleId":"2504","severity":1,"message":"2537","line":137,"column":47,"nodeType":"2506","messageId":"2507","endLine":137,"endColumn":48,"suggestions":"2538","suppressions":"2539"},{"ruleId":"2174","severity":1,"message":"2540","line":171,"column":35,"nodeType":"2176","messageId":"2541","endLine":171,"endColumn":37,"suppressions":"2542"},{"ruleId":"2126","severity":1,"message":"2543","line":1,"column":8,"nodeType":"2124","messageId":"2125","endLine":1,"endColumn":13},{"ruleId":"2126","severity":1,"message":"2131","line":4,"column":10,"nodeType":"2124","messageId":"2125","endLine":4,"endColumn":15},{"ruleId":"2126","severity":1,"message":"2544","line":5,"column":8,"nodeType":"2124","messageId":"2125","endLine":5,"endColumn":11},{"ruleId":"2134","severity":1,"message":"2545","line":22,"column":6,"nodeType":"2136","endLine":22,"endColumn":16,"suggestions":"2546","suppressions":"2547"},{"ruleId":"2299","severity":1,"message":"2300","line":68,"column":19,"nodeType":"2205","endLine":71,"endColumn":20,"suppressions":"2548"},{"ruleId":"2299","severity":1,"message":"2300","line":79,"column":19,"nodeType":"2205","endLine":82,"endColumn":20,"suppressions":"2549"},{"ruleId":"2299","severity":1,"message":"2300","line":90,"column":19,"nodeType":"2205","endLine":93,"endColumn":20,"suppressions":"2550"},{"ruleId":"2299","severity":1,"message":"2300","line":106,"column":19,"nodeType":"2205","endLine":109,"endColumn":20,"suppressions":"2551"},{"ruleId":"2299","severity":1,"message":"2311","line":122,"column":23,"nodeType":"2205","endLine":122,"endColumn":111,"suppressions":"2552"},{"ruleId":"2299","severity":1,"message":"2300","line":130,"column":23,"nodeType":"2205","endLine":133,"endColumn":24,"suppressions":"2553"},{"ruleId":"2299","severity":1,"message":"2300","line":144,"column":19,"nodeType":"2205","endLine":147,"endColumn":20,"suppressions":"2554"},{"ruleId":"2299","severity":1,"message":"2300","line":187,"column":15,"nodeType":"2205","endLine":191,"endColumn":16,"suppressions":"2555"},{"ruleId":"2299","severity":1,"message":"2300","line":194,"column":15,"nodeType":"2205","endLine":194,"endColumn":77,"suppressions":"2556"},{"ruleId":"2299","severity":1,"message":"2300","line":70,"column":19,"nodeType":"2205","endLine":70,"endColumn":91,"suppressions":"2557"},{"ruleId":"2299","severity":1,"message":"2300","line":102,"column":15,"nodeType":"2205","endLine":107,"endColumn":16,"suppressions":"2558"},{"ruleId":"2299","severity":1,"message":"2300","line":132,"column":17,"nodeType":"2205","endLine":132,"endColumn":82,"suppressions":"2559"},{"ruleId":"2299","severity":1,"message":"2300","line":117,"column":33,"nodeType":"2205","endLine":120,"endColumn":34,"suppressions":"2560"},{"ruleId":"2299","severity":1,"message":"2311","line":159,"column":17,"nodeType":"2205","endLine":166,"endColumn":18,"suppressions":"2561"},{"ruleId":"2299","severity":1,"message":"2300","line":84,"column":21,"nodeType":"2205","endLine":84,"endColumn":90,"suppressions":"2562"},{"ruleId":"2299","severity":1,"message":"2300","line":91,"column":21,"nodeType":"2205","endLine":91,"endColumn":90,"suppressions":"2563"},{"ruleId":"2299","severity":1,"message":"2300","line":98,"column":21,"nodeType":"2205","endLine":98,"endColumn":90,"suppressions":"2564"},{"ruleId":"2299","severity":1,"message":"2300","line":105,"column":21,"nodeType":"2205","endLine":105,"endColumn":90,"suppressions":"2565"},{"ruleId":"2299","severity":1,"message":"2300","line":159,"column":17,"nodeType":"2205","endLine":159,"endColumn":86,"suppressions":"2566"},{"ruleId":"2299","severity":1,"message":"2300","line":184,"column":17,"nodeType":"2205","endLine":184,"endColumn":86,"suppressions":"2567"},{"ruleId":"2299","severity":1,"message":"2300","line":209,"column":17,"nodeType":"2205","endLine":209,"endColumn":86,"suppressions":"2568"},{"ruleId":"2299","severity":1,"message":"2300","line":234,"column":17,"nodeType":"2205","endLine":234,"endColumn":86,"suppressions":"2569"},{"ruleId":"2299","severity":1,"message":"2300","line":259,"column":17,"nodeType":"2205","endLine":259,"endColumn":86,"suppressions":"2570"},{"ruleId":"2134","severity":1,"message":"2571","line":189,"column":6,"nodeType":"2136","endLine":189,"endColumn":8,"suggestions":"2572","suppressions":"2573"},{"ruleId":"2299","severity":1,"message":"2311","line":196,"column":11,"nodeType":"2205","endLine":203,"endColumn":12,"suppressions":"2574"},{"ruleId":"2299","severity":1,"message":"2311","line":218,"column":11,"nodeType":"2205","endLine":225,"endColumn":12,"suppressions":"2575"},{"ruleId":"2299","severity":1,"message":"2311","line":240,"column":11,"nodeType":"2205","endLine":247,"endColumn":12,"suppressions":"2576"},{"ruleId":"2299","severity":1,"message":"2311","line":262,"column":11,"nodeType":"2205","endLine":269,"endColumn":12,"suppressions":"2577"},{"ruleId":"2299","severity":1,"message":"2311","line":284,"column":11,"nodeType":"2205","endLine":291,"endColumn":12,"suppressions":"2578"},{"ruleId":"2299","severity":1,"message":"2300","line":402,"column":23,"nodeType":"2205","endLine":402,"endColumn":92,"suppressions":"2579"},{"ruleId":"2299","severity":1,"message":"2300","line":427,"column":23,"nodeType":"2205","endLine":427,"endColumn":92,"suppressions":"2580"},{"ruleId":"2299","severity":1,"message":"2300","line":452,"column":23,"nodeType":"2205","endLine":452,"endColumn":92,"suppressions":"2581"},{"ruleId":"2299","severity":1,"message":"2300","line":477,"column":23,"nodeType":"2205","endLine":477,"endColumn":92,"suppressions":"2582"},{"ruleId":"2299","severity":1,"message":"2300","line":502,"column":23,"nodeType":"2205","endLine":502,"endColumn":92,"suppressions":"2583"},{"ruleId":"2299","severity":1,"message":"2300","line":601,"column":23,"nodeType":"2205","endLine":601,"endColumn":92,"suppressions":"2584"},{"ruleId":"2299","severity":1,"message":"2300","line":626,"column":23,"nodeType":"2205","endLine":626,"endColumn":92,"suppressions":"2585"},{"ruleId":"2299","severity":1,"message":"2300","line":651,"column":23,"nodeType":"2205","endLine":651,"endColumn":92,"suppressions":"2586"},{"ruleId":"2299","severity":1,"message":"2300","line":676,"column":23,"nodeType":"2205","endLine":676,"endColumn":92,"suppressions":"2587"},{"ruleId":"2299","severity":1,"message":"2300","line":701,"column":23,"nodeType":"2205","endLine":701,"endColumn":92,"suppressions":"2588"},{"ruleId":"2299","severity":1,"message":"2300","line":800,"column":23,"nodeType":"2205","endLine":800,"endColumn":92,"suppressions":"2589"},{"ruleId":"2299","severity":1,"message":"2300","line":825,"column":23,"nodeType":"2205","endLine":825,"endColumn":92,"suppressions":"2590"},{"ruleId":"2299","severity":1,"message":"2300","line":850,"column":23,"nodeType":"2205","endLine":850,"endColumn":92,"suppressions":"2591"},{"ruleId":"2299","severity":1,"message":"2300","line":875,"column":23,"nodeType":"2205","endLine":875,"endColumn":92,"suppressions":"2592"},{"ruleId":"2299","severity":1,"message":"2300","line":900,"column":23,"nodeType":"2205","endLine":900,"endColumn":92,"suppressions":"2593"},{"ruleId":"2299","severity":1,"message":"2300","line":999,"column":23,"nodeType":"2205","endLine":999,"endColumn":92,"suppressions":"2594"},{"ruleId":"2299","severity":1,"message":"2300","line":1024,"column":23,"nodeType":"2205","endLine":1024,"endColumn":92,"suppressions":"2595"},{"ruleId":"2299","severity":1,"message":"2300","line":1049,"column":23,"nodeType":"2205","endLine":1049,"endColumn":92,"suppressions":"2596"},{"ruleId":"2299","severity":1,"message":"2300","line":1074,"column":23,"nodeType":"2205","endLine":1074,"endColumn":92,"suppressions":"2597"},{"ruleId":"2299","severity":1,"message":"2300","line":1099,"column":23,"nodeType":"2205","endLine":1099,"endColumn":92,"suppressions":"2598"},{"ruleId":"2299","severity":1,"message":"2300","line":1198,"column":23,"nodeType":"2205","endLine":1198,"endColumn":92,"suppressions":"2599"},{"ruleId":"2299","severity":1,"message":"2300","line":1223,"column":23,"nodeType":"2205","endLine":1223,"endColumn":92,"suppressions":"2600"},{"ruleId":"2299","severity":1,"message":"2300","line":1248,"column":23,"nodeType":"2205","endLine":1248,"endColumn":92,"suppressions":"2601"},{"ruleId":"2299","severity":1,"message":"2300","line":1273,"column":23,"nodeType":"2205","endLine":1273,"endColumn":92,"suppressions":"2602"},{"ruleId":"2299","severity":1,"message":"2300","line":1296,"column":23,"nodeType":"2205","endLine":1296,"endColumn":92,"suppressions":"2603"},{"ruleId":"2299","severity":1,"message":"2300","line":1318,"column":9,"nodeType":"2205","endLine":1321,"endColumn":10,"suppressions":"2604"},{"ruleId":"2299","severity":1,"message":"2300","line":17,"column":9,"nodeType":"2205","endLine":17,"endColumn":48,"suppressions":"2605"},{"ruleId":"2299","severity":1,"message":"2300","line":23,"column":9,"nodeType":"2205","endLine":23,"endColumn":48,"suppressions":"2606"},{"ruleId":"2299","severity":1,"message":"2300","line":34,"column":9,"nodeType":"2205","endLine":34,"endColumn":48,"suppressions":"2607"},{"ruleId":"2299","severity":1,"message":"2300","line":41,"column":13,"nodeType":"2205","endLine":41,"endColumn":52,"suppressions":"2608"},{"ruleId":"2299","severity":1,"message":"2300","line":47,"column":13,"nodeType":"2205","endLine":47,"endColumn":52,"suppressions":"2609"},{"ruleId":"2299","severity":1,"message":"2300","line":53,"column":13,"nodeType":"2205","endLine":53,"endColumn":52,"suppressions":"2610"},{"ruleId":"2299","severity":1,"message":"2300","line":61,"column":9,"nodeType":"2205","endLine":61,"endColumn":48,"suppressions":"2611"},{"ruleId":"2299","severity":1,"message":"2300","line":70,"column":11,"nodeType":"2205","endLine":70,"endColumn":64,"suppressions":"2612"},{"ruleId":"2134","severity":1,"message":"2613","line":21,"column":6,"nodeType":"2136","endLine":21,"endColumn":8,"suggestions":"2614","suppressions":"2615"},{"ruleId":"2299","severity":1,"message":"2311","line":47,"column":13,"nodeType":"2205","endLine":47,"endColumn":47,"suppressions":"2616"},{"ruleId":"2122","severity":1,"message":"2123","line":28,"column":7,"nodeType":"2124","messageId":"2125","endLine":28,"endColumn":22},{"ruleId":"2126","severity":1,"message":"2617","line":46,"column":7,"nodeType":"2124","messageId":"2125","endLine":46,"endColumn":24},{"ruleId":"2122","severity":1,"message":"2618","line":16,"column":21,"nodeType":"2124","messageId":"2125","endLine":16,"endColumn":31},{"ruleId":"2122","severity":1,"message":"2145","line":10,"column":11,"nodeType":"2124","messageId":"2125","endLine":10,"endColumn":29},{"ruleId":"2122","severity":1,"message":"2146","line":11,"column":11,"nodeType":"2124","messageId":"2125","endLine":11,"endColumn":25},{"ruleId":"2315","severity":1,"message":"2316","line":8,"column":1,"nodeType":"2317","endLine":39,"endColumn":3,"suppressions":"2619"},{"ruleId":"2122","severity":1,"message":"2298","line":2,"column":10,"nodeType":"2124","messageId":"2125","endLine":2,"endColumn":14},{"ruleId":"2134","severity":1,"message":"2328","line":109,"column":6,"nodeType":"2136","endLine":109,"endColumn":8,"suggestions":"2620","suppressions":"2621"},{"ruleId":"2134","severity":1,"message":"2493","line":59,"column":6,"nodeType":"2136","endLine":59,"endColumn":16,"suggestions":"2622","suppressions":"2623"},{"ruleId":"2134","severity":1,"message":"2496","line":68,"column":6,"nodeType":"2136","endLine":68,"endColumn":19,"suggestions":"2624","suppressions":"2625"},{"ruleId":"2134","severity":1,"message":"2499","line":77,"column":6,"nodeType":"2136","endLine":77,"endColumn":19,"suggestions":"2626","suppressions":"2627"},{"ruleId":"2134","severity":1,"message":"2496","line":91,"column":6,"nodeType":"2136","endLine":91,"endColumn":16,"suggestions":"2628","suppressions":"2629"},{"ruleId":"2504","severity":1,"message":"2505","line":24,"column":24,"nodeType":"2506","messageId":"2507","endLine":24,"endColumn":25,"suggestions":"2630","suppressions":"2631"},{"ruleId":"2126","severity":1,"message":"2528","line":4,"column":10,"nodeType":"2124","messageId":"2125","endLine":4,"endColumn":33},{"ruleId":"2126","severity":1,"message":"2529","line":8,"column":3,"nodeType":"2124","messageId":"2125","endLine":8,"endColumn":27},{"ruleId":"2504","severity":1,"message":"2510","line":12,"column":47,"nodeType":"2506","messageId":"2507","endLine":12,"endColumn":48,"suggestions":"2632","suppressions":"2633"},{"ruleId":"2504","severity":1,"message":"2513","line":12,"column":55,"nodeType":"2506","messageId":"2507","endLine":12,"endColumn":56,"suggestions":"2634","suppressions":"2635"},{"ruleId":"2504","severity":1,"message":"2516","line":12,"column":57,"nodeType":"2506","messageId":"2507","endLine":12,"endColumn":58,"suggestions":"2636","suppressions":"2637"},{"ruleId":"2504","severity":1,"message":"2519","line":12,"column":59,"nodeType":"2506","messageId":"2507","endLine":12,"endColumn":60,"suggestions":"2638","suppressions":"2639"},{"ruleId":"2504","severity":1,"message":"2522","line":12,"column":65,"nodeType":"2506","messageId":"2507","endLine":12,"endColumn":66,"suggestions":"2640","suppressions":"2641"},{"ruleId":"2504","severity":1,"message":"2525","line":12,"column":67,"nodeType":"2506","messageId":"2507","endLine":12,"endColumn":68,"suggestions":"2642","suppressions":"2643"},{"ruleId":"2504","severity":1,"message":"2532","line":137,"column":20,"nodeType":"2506","messageId":"2507","endLine":137,"endColumn":21,"suggestions":"2644","suppressions":"2645"},{"ruleId":"2504","severity":1,"message":"2519","line":137,"column":28,"nodeType":"2506","messageId":"2507","endLine":137,"endColumn":29,"suggestions":"2646","suppressions":"2647"},{"ruleId":"2504","severity":1,"message":"2537","line":137,"column":47,"nodeType":"2506","messageId":"2507","endLine":137,"endColumn":48,"suggestions":"2648","suppressions":"2649"},{"ruleId":"2174","severity":1,"message":"2540","line":171,"column":35,"nodeType":"2176","messageId":"2541","endLine":171,"endColumn":37,"suppressions":"2650"},{"ruleId":"2126","severity":1,"message":"2530","line":929,"column":19,"nodeType":"2124","messageId":"2125","endLine":929,"endColumn":23,"suppressions":"2651"},{"ruleId":"2134","severity":1,"message":"2545","line":22,"column":6,"nodeType":"2136","endLine":22,"endColumn":16,"suggestions":"2652","suppressions":"2653"},{"ruleId":"2299","severity":1,"message":"2300","line":68,"column":19,"nodeType":"2205","endLine":71,"endColumn":20,"suppressions":"2654"},{"ruleId":"2299","severity":1,"message":"2300","line":79,"column":19,"nodeType":"2205","endLine":82,"endColumn":20,"suppressions":"2655"},{"ruleId":"2299","severity":1,"message":"2300","line":90,"column":19,"nodeType":"2205","endLine":93,"endColumn":20,"suppressions":"2656"},{"ruleId":"2299","severity":1,"message":"2300","line":106,"column":19,"nodeType":"2205","endLine":109,"endColumn":20,"suppressions":"2657"},{"ruleId":"2299","severity":1,"message":"2311","line":122,"column":23,"nodeType":"2205","endLine":122,"endColumn":111,"suppressions":"2658"},{"ruleId":"2299","severity":1,"message":"2300","line":130,"column":23,"nodeType":"2205","endLine":133,"endColumn":24,"suppressions":"2659"},{"ruleId":"2299","severity":1,"message":"2300","line":144,"column":19,"nodeType":"2205","endLine":147,"endColumn":20,"suppressions":"2660"},{"ruleId":"2299","severity":1,"message":"2300","line":187,"column":15,"nodeType":"2205","endLine":191,"endColumn":16,"suppressions":"2661"},{"ruleId":"2299","severity":1,"message":"2300","line":194,"column":15,"nodeType":"2205","endLine":194,"endColumn":77,"suppressions":"2662"},{"ruleId":"2299","severity":1,"message":"2300","line":99,"column":33,"nodeType":"2205","endLine":102,"endColumn":34,"suppressions":"2663"},{"ruleId":"2299","severity":1,"message":"2311","line":141,"column":17,"nodeType":"2205","endLine":147,"endColumn":18,"suppressions":"2664"},{"ruleId":"2299","severity":1,"message":"2300","line":70,"column":19,"nodeType":"2205","endLine":70,"endColumn":91,"suppressions":"2665"},{"ruleId":"2299","severity":1,"message":"2300","line":102,"column":15,"nodeType":"2205","endLine":107,"endColumn":16,"suppressions":"2666"},{"ruleId":"2299","severity":1,"message":"2300","line":132,"column":17,"nodeType":"2205","endLine":132,"endColumn":82,"suppressions":"2667"},{"ruleId":"2299","severity":1,"message":"2300","line":84,"column":21,"nodeType":"2205","endLine":84,"endColumn":90,"suppressions":"2668"},{"ruleId":"2299","severity":1,"message":"2300","line":91,"column":21,"nodeType":"2205","endLine":91,"endColumn":90,"suppressions":"2669"},{"ruleId":"2299","severity":1,"message":"2300","line":98,"column":21,"nodeType":"2205","endLine":98,"endColumn":90,"suppressions":"2670"},{"ruleId":"2299","severity":1,"message":"2300","line":105,"column":21,"nodeType":"2205","endLine":105,"endColumn":90,"suppressions":"2671"},{"ruleId":"2299","severity":1,"message":"2300","line":159,"column":17,"nodeType":"2205","endLine":159,"endColumn":86,"suppressions":"2672"},{"ruleId":"2299","severity":1,"message":"2300","line":184,"column":17,"nodeType":"2205","endLine":184,"endColumn":86,"suppressions":"2673"},{"ruleId":"2299","severity":1,"message":"2300","line":209,"column":17,"nodeType":"2205","endLine":209,"endColumn":86,"suppressions":"2674"},{"ruleId":"2299","severity":1,"message":"2300","line":234,"column":17,"nodeType":"2205","endLine":234,"endColumn":86,"suppressions":"2675"},{"ruleId":"2299","severity":1,"message":"2300","line":259,"column":17,"nodeType":"2205","endLine":259,"endColumn":86,"suppressions":"2676"},{"ruleId":"2134","severity":1,"message":"2571","line":189,"column":6,"nodeType":"2136","endLine":189,"endColumn":8,"suggestions":"2677","suppressions":"2678"},{"ruleId":"2299","severity":1,"message":"2311","line":196,"column":11,"nodeType":"2205","endLine":203,"endColumn":12,"suppressions":"2679"},{"ruleId":"2299","severity":1,"message":"2311","line":218,"column":11,"nodeType":"2205","endLine":225,"endColumn":12,"suppressions":"2680"},{"ruleId":"2299","severity":1,"message":"2311","line":240,"column":11,"nodeType":"2205","endLine":247,"endColumn":12,"suppressions":"2681"},{"ruleId":"2299","severity":1,"message":"2311","line":262,"column":11,"nodeType":"2205","endLine":269,"endColumn":12,"suppressions":"2682"},{"ruleId":"2299","severity":1,"message":"2311","line":284,"column":11,"nodeType":"2205","endLine":291,"endColumn":12,"suppressions":"2683"},{"ruleId":"2299","severity":1,"message":"2300","line":402,"column":23,"nodeType":"2205","endLine":402,"endColumn":92,"suppressions":"2684"},{"ruleId":"2299","severity":1,"message":"2300","line":427,"column":23,"nodeType":"2205","endLine":427,"endColumn":92,"suppressions":"2685"},{"ruleId":"2299","severity":1,"message":"2300","line":452,"column":23,"nodeType":"2205","endLine":452,"endColumn":92,"suppressions":"2686"},{"ruleId":"2299","severity":1,"message":"2300","line":477,"column":23,"nodeType":"2205","endLine":477,"endColumn":92,"suppressions":"2687"},{"ruleId":"2299","severity":1,"message":"2300","line":502,"column":23,"nodeType":"2205","endLine":502,"endColumn":92,"suppressions":"2688"},{"ruleId":"2299","severity":1,"message":"2300","line":601,"column":23,"nodeType":"2205","endLine":601,"endColumn":92,"suppressions":"2689"},{"ruleId":"2299","severity":1,"message":"2300","line":626,"column":23,"nodeType":"2205","endLine":626,"endColumn":92,"suppressions":"2690"},{"ruleId":"2299","severity":1,"message":"2300","line":651,"column":23,"nodeType":"2205","endLine":651,"endColumn":92,"suppressions":"2691"},{"ruleId":"2299","severity":1,"message":"2300","line":676,"column":23,"nodeType":"2205","endLine":676,"endColumn":92,"suppressions":"2692"},{"ruleId":"2299","severity":1,"message":"2300","line":701,"column":23,"nodeType":"2205","endLine":701,"endColumn":92,"suppressions":"2693"},{"ruleId":"2299","severity":1,"message":"2300","line":800,"column":23,"nodeType":"2205","endLine":800,"endColumn":92,"suppressions":"2694"},{"ruleId":"2299","severity":1,"message":"2300","line":825,"column":23,"nodeType":"2205","endLine":825,"endColumn":92,"suppressions":"2695"},{"ruleId":"2299","severity":1,"message":"2300","line":850,"column":23,"nodeType":"2205","endLine":850,"endColumn":92,"suppressions":"2696"},{"ruleId":"2299","severity":1,"message":"2300","line":875,"column":23,"nodeType":"2205","endLine":875,"endColumn":92,"suppressions":"2697"},{"ruleId":"2299","severity":1,"message":"2300","line":900,"column":23,"nodeType":"2205","endLine":900,"endColumn":92,"suppressions":"2698"},{"ruleId":"2299","severity":1,"message":"2300","line":999,"column":23,"nodeType":"2205","endLine":999,"endColumn":92,"suppressions":"2699"},{"ruleId":"2299","severity":1,"message":"2300","line":1024,"column":23,"nodeType":"2205","endLine":1024,"endColumn":92,"suppressions":"2700"},{"ruleId":"2299","severity":1,"message":"2300","line":1049,"column":23,"nodeType":"2205","endLine":1049,"endColumn":92,"suppressions":"2701"},{"ruleId":"2299","severity":1,"message":"2300","line":1074,"column":23,"nodeType":"2205","endLine":1074,"endColumn":92,"suppressions":"2702"},{"ruleId":"2299","severity":1,"message":"2300","line":1099,"column":23,"nodeType":"2205","endLine":1099,"endColumn":92,"suppressions":"2703"},{"ruleId":"2299","severity":1,"message":"2300","line":1198,"column":23,"nodeType":"2205","endLine":1198,"endColumn":92,"suppressions":"2704"},{"ruleId":"2299","severity":1,"message":"2300","line":1223,"column":23,"nodeType":"2205","endLine":1223,"endColumn":92,"suppressions":"2705"},{"ruleId":"2299","severity":1,"message":"2300","line":1248,"column":23,"nodeType":"2205","endLine":1248,"endColumn":92,"suppressions":"2706"},{"ruleId":"2299","severity":1,"message":"2300","line":1273,"column":23,"nodeType":"2205","endLine":1273,"endColumn":92,"suppressions":"2707"},{"ruleId":"2299","severity":1,"message":"2300","line":1296,"column":23,"nodeType":"2205","endLine":1296,"endColumn":92,"suppressions":"2708"},{"ruleId":"2299","severity":1,"message":"2300","line":1318,"column":9,"nodeType":"2205","endLine":1321,"endColumn":10,"suppressions":"2709"},{"ruleId":"2299","severity":1,"message":"2300","line":17,"column":9,"nodeType":"2205","endLine":17,"endColumn":48,"suppressions":"2710"},{"ruleId":"2299","severity":1,"message":"2300","line":23,"column":9,"nodeType":"2205","endLine":23,"endColumn":48,"suppressions":"2711"},{"ruleId":"2299","severity":1,"message":"2300","line":34,"column":9,"nodeType":"2205","endLine":34,"endColumn":48,"suppressions":"2712"},{"ruleId":"2299","severity":1,"message":"2300","line":41,"column":13,"nodeType":"2205","endLine":41,"endColumn":52,"suppressions":"2713"},{"ruleId":"2299","severity":1,"message":"2300","line":47,"column":13,"nodeType":"2205","endLine":47,"endColumn":52,"suppressions":"2714"},{"ruleId":"2299","severity":1,"message":"2300","line":53,"column":13,"nodeType":"2205","endLine":53,"endColumn":52,"suppressions":"2715"},{"ruleId":"2299","severity":1,"message":"2300","line":61,"column":9,"nodeType":"2205","endLine":61,"endColumn":48,"suppressions":"2716"},{"ruleId":"2299","severity":1,"message":"2300","line":70,"column":11,"nodeType":"2205","endLine":70,"endColumn":64,"suppressions":"2717"},{"ruleId":"2134","severity":1,"message":"2613","line":21,"column":6,"nodeType":"2136","endLine":21,"endColumn":8,"suggestions":"2718","suppressions":"2719"},{"ruleId":"2299","severity":1,"message":"2311","line":47,"column":13,"nodeType":"2205","endLine":47,"endColumn":47,"suppressions":"2720"},{"ruleId":"2122","severity":1,"message":"2618","line":13,"column":21,"nodeType":"2124","messageId":"2125","endLine":13,"endColumn":31},{"ruleId":"2122","severity":1,"message":"2721","line":17,"column":23,"nodeType":"2124","messageId":"2125","endLine":17,"endColumn":35},{"ruleId":"2134","severity":1,"message":"2722","line":38,"column":8,"nodeType":"2136","endLine":38,"endColumn":28,"suggestions":"2723"},{"ruleId":"2122","severity":1,"message":"2721","line":15,"column":23,"nodeType":"2124","messageId":"2125","endLine":15,"endColumn":35},{"ruleId":"2122","severity":1,"message":"2230","line":16,"column":23,"nodeType":"2124","messageId":"2125","endLine":16,"endColumn":35},{"ruleId":"2122","severity":1,"message":"2724","line":22,"column":12,"nodeType":"2124","messageId":"2125","endLine":22,"endColumn":18},{"ruleId":"2134","severity":1,"message":"2722","line":35,"column":9,"nodeType":"2136","endLine":35,"endColumn":29,"suggestions":"2725"},{"ruleId":"2122","severity":1,"message":"2230","line":19,"column":23,"nodeType":"2124","messageId":"2125","endLine":19,"endColumn":35},{"ruleId":"2122","severity":1,"message":"2721","line":20,"column":23,"nodeType":"2124","messageId":"2125","endLine":20,"endColumn":35},{"ruleId":"2122","severity":1,"message":"2726","line":23,"column":18,"nodeType":"2124","messageId":"2125","endLine":23,"endColumn":25},{"ruleId":"2122","severity":1,"message":"2452","line":24,"column":12,"nodeType":"2124","messageId":"2125","endLine":24,"endColumn":18},{"ruleId":"2122","severity":1,"message":"2727","line":25,"column":23,"nodeType":"2124","messageId":"2125","endLine":25,"endColumn":35},{"ruleId":"2134","severity":1,"message":"2722","line":37,"column":8,"nodeType":"2136","endLine":37,"endColumn":28,"suggestions":"2728"},{"ruleId":"2122","severity":1,"message":"2432","line":19,"column":11,"nodeType":"2124","messageId":"2125","endLine":19,"endColumn":19},{"ruleId":"2134","severity":1,"message":"2729","line":39,"column":8,"nodeType":"2136","endLine":39,"endColumn":10,"suggestions":"2730"},{"ruleId":"2122","severity":1,"message":"2731","line":137,"column":11,"nodeType":"2124","messageId":"2125","endLine":137,"endColumn":25},{"ruleId":"2122","severity":1,"message":"2732","line":138,"column":17,"nodeType":"2124","messageId":"2125","endLine":138,"endColumn":23},{"ruleId":"2122","severity":1,"message":"2432","line":22,"column":11,"nodeType":"2124","messageId":"2125","endLine":22,"endColumn":19},{"ruleId":"2134","severity":1,"message":"2733","line":59,"column":8,"nodeType":"2136","endLine":59,"endColumn":10,"suggestions":"2734"},{"ruleId":"2134","severity":1,"message":"2473","line":82,"column":8,"nodeType":"2136","endLine":82,"endColumn":85,"suggestions":"2735"},{"ruleId":"2134","severity":1,"message":"2479","line":95,"column":8,"nodeType":"2136","endLine":95,"endColumn":104,"suggestions":"2736"},{"ruleId":"2134","severity":1,"message":"2485","line":108,"column":8,"nodeType":"2136","endLine":108,"endColumn":100,"suggestions":"2737"},{"ruleId":"2247","severity":1,"message":"2248","line":221,"column":62,"nodeType":"2186","messageId":"2249","endLine":221,"endColumn":64},"no-unused-vars","'responseHandler' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","'useState' is defined but never used.","'Toast' is defined but never used.","'useDispatch' is defined but never used.","'toast' is defined but never used.","'onMessageListener' is defined but never used.","'notiActions' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["2738"],"'Link' is defined but never used.","'Error500' is defined but never used.","'toAbsoluteUrl' is defined but never used.","'resetfield' is assigned a value but never used.","'KTSVG' is defined but never used.","React Hook useEffect has missing dependencies: 'currentUser' and 'navigate'. Either include them or remove the dependency array.",["2739"],"'handleLoginSuccess' is defined but never used.","'watchLoginFlow' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'isLastLogin'. Either include them or remove the dependency array.",["2740"],"'isLoading' is assigned a value but never used.","'validateVTHNvsPVCM' is assigned a value but never used.","'valueDeNghiLoai' is assigned a value but never used.","'setCheckSave' is assigned a value but never used.","'ccViTriHanhNghe' is assigned a value but never used.","'setCCViTriHanhNghe' is assigned a value but never used.","'ccPhamViChuyenMon' is assigned a value but never used.","'setCCPhamViChuyenMon' is assigned a value but never used.","'DeNghiHinhThuc' is assigned a value but never used.","'setDeNghiHinhThuc' is assigned a value but never used.","'DeNghiLoaiDeNghi' is assigned a value but never used.","'setDeNghiLoaiDeNghi' is assigned a value but never used.","'valueDeNghiHinhThuc' is assigned a value but never used.","'DeNghiPVCM' is assigned a value but never used.","'scrollToLoaiChungChi' is assigned a value but never used.","'scrollToLoaiHinhThuc' is assigned a value but never used.","'scrollToPhamViHNCM' is assigned a value but never used.","'handleChangeDeNghiLoai' is assigned a value but never used.","'handleChangeDeNghiHinhThuc' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getThongTinHoSo' and 'id'. Either include them or remove the dependency array.",["2741"],"'selectedGioiTinh' is assigned a value but never used.","'setSelectedGioiTinh' is assigned a value but never used.","'callBackValidateVTHNvsPVCM' is assigned a value but never used.","'results' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["2742"],"'DeNghi' is assigned a value but never used.","'selectIsSubmitted' is defined but never used.","'In' is defined but never used.","'jsonUpdate' is assigned a value but never used.",["2743"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'inHoSoYeuCau' is assigned a value but never used.","'navigate' is assigned a value but never used.","'showUpdate' is assigned a value but never used.","'stt' is assigned a value but never used.","'setStt' is assigned a value but never used.","'trang_thai' is assigned a value but never used.","'isvisibleDelete' is assigned a value but never used.","'idDelete' is assigned a value but never used.","'setIdDelete' is assigned a value but never used.","'closeModalDelete' is assigned a value but never used.","'showModalDelete' is assigned a value but never used.","'selectedRows' is assigned a value but never used.","'handleClearRows' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getList' and 'searchMaHoSo'. Either include them or remove the dependency array.",["2744"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'showModalChiTiet' is assigned a value but never used.","'closeModalChiTiet' is assigned a value but never used.","'setRowData' is assigned a value but never used.","'file_url' is assigned a value but never used.","'setFileUrl' is assigned a value but never used.","'isvisibleIn' is assigned a value but never used.","'closeModalIn' is assigned a value but never used.","'showModalIn' is assigned a value but never used.","'listChucVu' is assigned a value but never used.","'setListChucVu' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filterHoTen', 'filterMaHoSo', 'filterStatusThuLy', 'filters', and 'getList'. Either include them or remove the dependency array.",["2745"],"React Hook useEffect has missing dependencies: 'filterStatusThuLy', 'filters', 'getList', and 'searchMaHoSo'. Either include them or remove the dependency array.",["2746"],"'ids' is assigned a value but never used.","'trang_thai_ho_so' is assigned a value but never used.","'ly_do_tu_choi' is assigned a value but never used.","'so_quyet_dinh' is assigned a value but never used.","'ngay_quyet_dinh' is assigned a value but never used.",["2747"],"'Status' is defined but never used.","'ReactTooltip' is defined but never used.","'page' is assigned a value but never used.","'perPage' is assigned a value but never used.","'setTotalRows' is assigned a value but never used.","'selectCurrentUser' is defined but never used.","'selectedId' is assigned a value but never used.","'showModalBoSung' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getList' and 'roles'. Either include them or remove the dependency array.",["2748"],"React Hook useEffect has missing dependencies: 'getList', 'searchHoTen', and 'searchMaHoSo'. Either include them or remove the dependency array.",["2749"],"'btnBoSung' is assigned a value but never used.",["2750"],"React Hook useEffect has a missing dependency: 'renderButtonsBottom'. Either include it or remove the dependency array.",["2751"],"React Hook useEffect has missing dependencies: 'getList', 'perPage', and 'searchTerm'. Either include them or remove the dependency array.",["2752"],"'chi_tiet' is assigned a value but never used.","'loai' is assigned a value but never used.","'ten_in' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'formatGroupLabel' is assigned a value but never used.","'handleChangeLocation' is assigned a value but never used.",["2753"],["2754"],["2755"],"'ItemXacNhan' is assigned a value but never used.",["2756"],"'setItemXacNhan' is assigned a value but never used.",["2757"],["2758"],["2759"],["2760"],["2761"],"'detail' is assigned a value but never used.",["2762"],"'handleRowClicked' is assigned a value but never used.",["2763"],"'getDetail' is assigned a value but never used.",["2764"],"'Form' is defined but never used.",["2765"],"React Hook useEffect has missing dependencies: 'getThongTinHoSo', 'id', and 'roleUser'. Either include them or remove the dependency array.",["2766"],["2767"],"'TypeHoSo' is assigned a value but never used.",["2768"],["2769"],["2770"],["2771"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching",["2772"],"React Hook useEffect has missing dependencies: 'getTinhThanh', 'handleGioiTinh', and 'thongTinDuocSi'. Either include them or remove the dependency array.",["2773"],["2774"],["2775"],["2776"],"'doi_tuong' is assigned a value but never used.","'co_quan_thuc_hien' is assigned a value but never used.","'InfiniteScroll' is defined but never used.","'useAuth' is defined but never used.","'listThongBao' is assigned a value but never used.","'setListThongBao' is assigned a value but never used.","'CountUnreadNoti' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser?.id' and 'dispatch'. Either include them or remove the dependency array.",["2777"],"'notyBox' is assigned a value but never used.","'fetchMoreData' is assigned a value but never used.","'fetchToken' is defined but never used.","'Oval' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",["2778"],["2779"],["2780"],["2781"],["2782"],["2783"],["2784"],["2785"],["2786"],["2787"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",["2788"],["2789"],["2790"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["2791"],"'id' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getList' and 'searchTerm'. Either include them or remove the dependency array.",["2792"],"React Hook useEffect has missing dependencies: 'getTinhThanh' and 'thongTinToChuc'. Either include them or remove the dependency array.",["2793"],["2794"],["2795"],["2796"],["2797"],"React Hook useEffect has missing dependencies: 'auth', 'logout', 'setCurrentUser', and 'setRoleUser'. Either include them or remove the dependency array.",["2798"],["2799"],"'useSelector' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'getLocation', 'getLocationCOHN', and 'props'. Either include them or remove the dependency array.",["2800"],"'handleSubmit' is assigned a value but never used.","'updateHoSo' is assigned a value but never used.","'CheckedValidate' is assigned a value but never used.","'SelectedGioiTinh' is assigned a value but never used.","'ListTinhThanh' is assigned a value but never used.","'ListQuanHuyen' is assigned a value but never used.","'ListXaPhuong' is assigned a value but never used.","'TinhThanhSelected' is assigned a value but never used.","'QuanHuyenSelected' is assigned a value but never used.","'XaPhuongSelected' is assigned a value but never used.","'disQuanHuyen' is assigned a value but never used.","'setDisQuanHuyen' is assigned a value but never used.","'disXaPhuong' is assigned a value but never used.","'setDisXaPhuong' is assigned a value but never used.","'ListTinhThanhCOHN' is assigned a value but never used.","'ListQuanHuyenCOHN' is assigned a value but never used.","'ListXaPhuongCOHN' is assigned a value but never used.","'TinhThanhCOHNSelected' is assigned a value but never used.","'QuanHuyenCOHNSelected' is assigned a value but never used.","'XaPhuongCOHNSelected' is assigned a value but never used.","'disQuanHuyenCOHN' is assigned a value but never used.","'setDisQuanHuyenCOHN' is assigned a value but never used.","'disXaPhuongCOHN' is assigned a value but never used.","'setDisXaPhuongCOHN' is assigned a value but never used.",["2801"],"'onChangeTinhThanh' is assigned a value but never used.","'onChangeQuanHuyen' is assigned a value but never used.","'onChangeXaPhuong' is assigned a value but never used.","'onChangeTinhThanhCOHN' is assigned a value but never used.","'onChangeQuanHuyenCOHN' is assigned a value but never used.","'onChangeXaPhuongCOHN' is assigned a value but never used.","'searchTerm' is assigned a value but never used.","'noiDungThucHanhList' is assigned a value but never used.","'setNoiDungThucHanhList' is assigned a value but never used.","'content' is assigned a value but never used.","'setRowValue' is assigned a value but never used.","'setRowDateValue' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'roleUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'roleUser'. Either include it or remove the dependency array.",["2802"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["2803"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props'. Either include them or remove the dependency array.",["2804"],"React Hook useEffect has missing dependencies: 'dispatch', 'props?.listCheckedDMPVCM', and 'props?.listCheckedVTHN'. Either include them or remove the dependency array.",["2805"],"'renderNoiDung' is assigned a value but never used.","'findFormErrors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getThongTin'. Either include it or remove the dependency array.",["2806"],"'setVanBangList' is assigned a value but never used.","'setNoiTotNghiepList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getBangCapList'. Either include it or remove the dependency array.",["2807"],"React Hook useEffect has missing dependencies: 'getNoiTotNghiepList', 'getVanBangList', and 'props?.onHide'. Either include them or remove the dependency array. If 'setOnHide' needs the current value of 'props.onHide', you can also switch to useReducer instead of useState and read 'props.onHide' in the reducer.",["2808"],"'DesktopDatePicker' is defined but never used.","'KTCard' is defined but never used.","'empty_json' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getChungChiList'. Either include it or remove the dependency array.",["2809"],"'json' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCoSoThucHanhList'. Either include it or remove the dependency array.",["2810"],"React Hook useEffect has missing dependencies: 'getListNoiDungThucHanh' and 'props?.onHide'. Either include them or remove the dependency array. If 'setOnHide' needs the current value of 'props.onHide', you can also switch to useReducer instead of useState and read 'props.onHide' in the reducer.",["2811"],"'handleTuNgay' is assigned a value but never used.","'handleDenNgay' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'ngayCap' and 'setField'. Either include them or remove the dependency array.",["2812"],"React Hook useEffect has a missing dependency: 'getDaoTaoList'. Either include it or remove the dependency array.",["2813"],"React Hook useEffect has a missing dependency: 'props?.onHide'. Either include it or remove the dependency array. If 'setOnHide' needs the current value of 'props.onHide', you can also switch to useReducer instead of useState and read 'props.onHide' in the reducer.",["2814"],"React Hook useEffect has a missing dependency: 'props?.data'. Either include it or remove the dependency array. If 'setForm' needs the current value of 'props.data', you can also switch to useReducer instead of useState and read 'props.data' in the reducer.",["2815"],"'vanBang' is assigned a value but never used.","'noiTotNghiep' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getNoiTotNghiepList' and 'getVanBangList'. Either include them or remove the dependency array.",["2816"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","React Hook useEffect has a missing dependency: 'handleSubmit'. Either include it or remove the dependency array.",["2817"],["2818"],"'userInfo' is assigned a value but never used.",["2819"],["2820"],["2821"],"'ma_loai_hinh' is assigned a value but never used.","'UploadControl' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getThongTinYCLK' and 'id'. Either include them or remove the dependency array.",["2822"],["2823"],"'commonActions' is defined but never used.","'dispatch' is assigned a value but never used.",["2824"],"'selectedData' is assigned a value but never used.","'setSelectedData' is assigned a value but never used.","'options' is assigned a value but never used.","'setOptions' is assigned a value but never used.",["2825"],["2826"],"React Hook useEffect has missing dependencies: 'getList', 'getListThuTuc', 'perPage', and 'searchTerm'. Either include them or remove the dependency array.",["2827"],["2828"],"'setTrang_thai' is assigned a value but never used.","'showAdd' is assigned a value but never used.","'edit' is assigned a value but never used.","'setEdit' is assigned a value but never used.","'closeModal' is assigned a value but never used.","'showModal' is assigned a value but never used.","'setSearchTerm' is assigned a value but never used.",["2829"],"'form' is assigned a value but never used.","'errors' is assigned a value but never used.","'resetState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filterHoTen', 'filters', and 'getList'. Either include them or remove the dependency array.",["2830"],"React Hook useEffect has missing dependencies: 'filters', 'getList', and 'searchMaHoSo'. Either include them or remove the dependency array.",["2831"],"'dateHanDen' is assigned a value but never used.","'dateHanTu' is assigned a value but never used.","'ListDMHetHan' is assigned a value but never used.","'ListDMThuTuc' is assigned a value but never used.","'ListDMTrangThaiHoSo' is assigned a value but never used.",["2832"],["2833"],"'valueTrangThaiHoSo' is assigned a value but never used.",["2834"],"React Hook useEffect has missing dependencies: 'dispatch', 'getThongTinChungChi', 'getThongTinHoSo', 'params?.id', and 'soChungChi'. Either include them or remove the dependency array.",["2835"],["2836"],"React Hook useEffect has a missing dependency: 'renderButton'. Either include it or remove the dependency array.",["2837"],["2838"],"React Hook useEffect has a missing dependency: 'onChangeTinhThanh'. Either include it or remove the dependency array.",["2839"],["2840"],"React Hook useEffect has a missing dependency: 'onChangeTinhThanhCOHN'. Either include it or remove the dependency array.",["2841"],["2842"],"React Hook useEffect has a missing dependency: 'onChangeQuanHuyen'. Either include it or remove the dependency array.",["2843"],["2844"],"React Hook useEffect has a missing dependency: 'onChangeQuanHuyenCOHN'. Either include it or remove the dependency array.",["2845"],["2846"],"React Hook useEffect has a missing dependency: 'onChangeXaPhuong'. Either include it or remove the dependency array.",["2847"],["2848"],"React Hook useEffect has a missing dependency: 'onChangeXaPhuongCOHN'. Either include it or remove the dependency array.",["2849"],["2850"],["2851"],["2852"],"React Hook useEffect has a missing dependency: 'setPageTitle'. Either include it or remove the dependency array.",["2853"],["2854"],"React Hook useEffect has a missing dependency: 'setPageDescription'. Either include it or remove the dependency array.",["2855"],["2856"],"React Hook useEffect has a missing dependency: 'setPageBreadcrumbs'. Either include it or remove the dependency array.",["2857"],["2858"],["2859"],["2860"],"no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["2861","2862"],["2863"],"Unnecessary escape character: \\..",["2864","2865"],["2866"],"Unnecessary escape character: \\(.",["2867","2868"],["2869"],"Unnecessary escape character: \\).",["2870","2871"],["2872"],"Unnecessary escape character: \\[.",["2873","2874"],["2875"],"Unnecessary escape character: \\/.",["2876","2877"],["2878"],"Unnecessary escape character: \\+.",["2879","2880"],["2881"],"'HeaderNotificationsMenu' is defined but never used.","'toolbarButtonHeightClass' is assigned a value but never used.","'menu' is assigned a value but never used.",["2882"],"Unnecessary escape character: \\^.",["2883","2884"],["2885"],["2886","2887"],["2888"],"Unnecessary escape character: \\?.",["2889","2890"],["2891"],"Array.prototype.map() expects a return value from arrow function.","expectedInside",["2892"],"'axios' is defined but never used.","'api' is defined but never used.","React Hook useEffect has a missing dependency: 'handleClose'. Either include it or remove the dependency array. If 'handleClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["2893"],["2894"],["2895"],["2896"],["2897"],["2898"],["2899"],["2900"],["2901"],["2902"],["2903"],["2904"],["2905"],["2906"],["2907"],["2908"],["2909"],["2910"],["2911"],["2912"],["2913"],["2914"],["2915"],["2916"],["2917"],"React Hook useEffect has missing dependencies: 'activateChart' and 'activeChart'. Either include them or remove the dependency array.",["2918"],["2919"],["2920"],["2921"],["2922"],["2923"],["2924"],["2925"],["2926"],["2927"],["2928"],["2929"],["2930"],["2931"],["2932"],["2933"],["2934"],["2935"],["2936"],["2937"],["2938"],["2939"],["2940"],["2941"],["2942"],["2943"],["2944"],["2945"],["2946"],["2947"],["2948"],["2949"],["2950"],["2951"],["2952"],["2953"],["2954"],["2955"],["2956"],["2957"],["2958"],"React Hook useEffect has a missing dependency: 'container'. Either include it or remove the dependency array.",["2959"],["2960"],["2961"],"'SuspensedView' is assigned a value but never used.","'setLoading' is assigned a value but never used.",["2962"],["2963"],["2964"],["2965"],["2966"],["2967"],["2968"],["2969"],["2970"],["2971"],["2972"],["2973","2974"],["2975"],["2976","2977"],["2978"],["2979","2980"],["2981"],["2982","2983"],["2984"],["2985","2986"],["2987"],["2988","2989"],["2990"],["2991","2992"],["2993"],["2994","2995"],["2996"],["2997","2998"],["2999"],["3000","3001"],["3002"],["3003"],["3004"],["3005"],["3006"],["3007"],["3008"],["3009"],["3010"],["3011"],["3012"],["3013"],["3014"],["3015"],["3016"],["3017"],["3018"],["3019"],["3020"],["3021"],["3022"],["3023"],["3024"],["3025"],["3026"],["3027"],["3028"],["3029"],["3030"],["3031"],["3032"],["3033"],["3034"],["3035"],["3036"],["3037"],["3038"],["3039"],["3040"],["3041"],["3042"],["3043"],["3044"],["3045"],["3046"],["3047"],["3048"],["3049"],["3050"],["3051"],["3052"],["3053"],["3054"],["3055"],["3056"],["3057"],["3058"],["3059"],["3060"],["3061"],["3062"],["3063"],["3064"],["3065"],["3066"],["3067"],["3068"],["3069"],["3070"],["3071"],["3072"],["3073"],"'setIsLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getList', 'perPage', and 'searchKey'. Either include them or remove the dependency array.",["3074"],"'render' is assigned a value but never used.",["3075"],"'setType' is assigned a value but never used.","'setSearchKey' is assigned a value but never used.",["3076"],"React Hook useEffect has a missing dependency: 'getUserInfo'. Either include it or remove the dependency array.",["3077"],"'formValidation' is assigned a value but never used.","'ho_ten' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'thongTinCaNhan'. Either include it or remove the dependency array.",["3078"],["3079"],["3080"],["3081"],{"desc":"3082","fix":"3083"},{"desc":"3084","fix":"3085"},{"desc":"3086","fix":"3087"},{"desc":"3088","fix":"3089"},{"desc":"3088","fix":"3090"},{"desc":"3088","fix":"3091"},{"desc":"3092","fix":"3093"},{"desc":"3094","fix":"3095"},{"desc":"3096","fix":"3097"},{"desc":"3092","fix":"3098"},{"desc":"3099","fix":"3100"},{"desc":"3101","fix":"3102"},{"desc":"3088","fix":"3103"},{"desc":"3104","fix":"3105"},{"desc":"3106","fix":"3107"},{"desc":"3106","fix":"3108"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"desc":"3094","fix":"3111"},{"kind":"3109","justification":"3110"},{"desc":"3096","fix":"3112"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"desc":"3113","fix":"3114"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"desc":"3115","fix":"3116"},{"kind":"3109","justification":"3110"},{"desc":"3106","fix":"3117"},{"desc":"3106","fix":"3118"},{"desc":"3119","fix":"3120"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"desc":"3121","fix":"3122"},{"desc":"3123","fix":"3124"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"desc":"3125","fix":"3126"},{"kind":"3109","justification":"3110"},{"desc":"3127","fix":"3128"},{"desc":"3127","fix":"3129"},{"desc":"3130","fix":"3131"},{"desc":"3132","fix":"3133"},{"desc":"3134","fix":"3135"},{"desc":"3136","fix":"3137"},{"desc":"3138","fix":"3139"},{"desc":"3140","fix":"3141"},{"desc":"3142","fix":"3143"},{"desc":"3144","fix":"3145"},{"desc":"3146","fix":"3147"},{"desc":"3148","fix":"3149"},{"desc":"3150","fix":"3151"},{"desc":"3152","fix":"3153"},{"desc":"3154","fix":"3155"},{"desc":"3156","fix":"3157"},{"desc":"3158","fix":"3159"},{"desc":"3160","fix":"3161"},{"desc":"3127","fix":"3162"},{"desc":"3121","fix":"3163"},{"desc":"3106","fix":"3164"},{"desc":"3106","fix":"3165"},{"desc":"3166","fix":"3167"},{"kind":"3109","justification":"3110"},{"desc":"3106","fix":"3168"},{"desc":"3106","fix":"3169"},{"desc":"3121","fix":"3170"},{"desc":"3171","fix":"3172"},{"desc":"3106","fix":"3173"},{"desc":"3106","fix":"3174"},{"desc":"3175","fix":"3176"},{"desc":"3177","fix":"3178"},{"desc":"3092","fix":"3179"},{"desc":"3106","fix":"3180"},{"kind":"3109","justification":"3110"},{"desc":"3181","fix":"3182"},{"kind":"3109","justification":"3110"},{"desc":"3183","fix":"3184"},{"kind":"3109","justification":"3110"},{"desc":"3185","fix":"3186"},{"kind":"3109","justification":"3110"},{"desc":"3187","fix":"3188"},{"kind":"3109","justification":"3110"},{"desc":"3189","fix":"3190"},{"kind":"3109","justification":"3110"},{"desc":"3191","fix":"3192"},{"kind":"3109","justification":"3110"},{"desc":"3193","fix":"3194"},{"kind":"3109","justification":"3110"},{"desc":"3195","fix":"3196"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"desc":"3197","fix":"3198"},{"kind":"3109","justification":"3110"},{"desc":"3199","fix":"3200"},{"kind":"3109","justification":"3110"},{"desc":"3201","fix":"3202"},{"kind":"3109","justification":"3110"},{"desc":"3203","fix":"3204"},{"kind":"3109","justification":"3110"},{"messageId":"3205","fix":"3206","desc":"3207"},{"messageId":"3208","fix":"3209","desc":"3210"},{"kind":"3109","justification":"3110"},{"messageId":"3205","fix":"3211","desc":"3207"},{"messageId":"3208","fix":"3212","desc":"3210"},{"kind":"3109","justification":"3110"},{"messageId":"3205","fix":"3213","desc":"3207"},{"messageId":"3208","fix":"3214","desc":"3210"},{"kind":"3109","justification":"3110"},{"messageId":"3205","fix":"3215","desc":"3207"},{"messageId":"3208","fix":"3216","desc":"3210"},{"kind":"3109","justification":"3110"},{"messageId":"3205","fix":"3217","desc":"3207"},{"messageId":"3208","fix":"3218","desc":"3210"},{"kind":"3109","justification":"3110"},{"messageId":"3205","fix":"3219","desc":"3207"},{"messageId":"3208","fix":"3220","desc":"3210"},{"kind":"3109","justification":"3110"},{"messageId":"3205","fix":"3221","desc":"3207"},{"messageId":"3208","fix":"3222","desc":"3210"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"messageId":"3205","fix":"3223","desc":"3207"},{"messageId":"3208","fix":"3224","desc":"3210"},{"kind":"3109","justification":"3110"},{"messageId":"3205","fix":"3225","desc":"3207"},{"messageId":"3208","fix":"3226","desc":"3210"},{"kind":"3109","justification":"3110"},{"messageId":"3205","fix":"3227","desc":"3207"},{"messageId":"3208","fix":"3228","desc":"3210"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"desc":"3229","fix":"3230"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"desc":"3231","fix":"3232"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"desc":"3233","fix":"3234"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"desc":"3125","fix":"3235"},{"kind":"3109","justification":"3110"},{"desc":"3197","fix":"3236"},{"kind":"3109","justification":"3110"},{"desc":"3199","fix":"3237"},{"kind":"3109","justification":"3110"},{"desc":"3201","fix":"3238"},{"kind":"3109","justification":"3110"},{"desc":"3203","fix":"3239"},{"kind":"3109","justification":"3110"},{"messageId":"3205","fix":"3240","desc":"3207"},{"messageId":"3208","fix":"3241","desc":"3210"},{"kind":"3109","justification":"3110"},{"messageId":"3205","fix":"3242","desc":"3207"},{"messageId":"3208","fix":"3243","desc":"3210"},{"kind":"3109","justification":"3110"},{"messageId":"3205","fix":"3244","desc":"3207"},{"messageId":"3208","fix":"3245","desc":"3210"},{"kind":"3109","justification":"3110"},{"messageId":"3205","fix":"3246","desc":"3207"},{"messageId":"3208","fix":"3247","desc":"3210"},{"kind":"3109","justification":"3110"},{"messageId":"3205","fix":"3248","desc":"3207"},{"messageId":"3208","fix":"3249","desc":"3210"},{"kind":"3109","justification":"3110"},{"messageId":"3205","fix":"3250","desc":"3207"},{"messageId":"3208","fix":"3251","desc":"3210"},{"kind":"3109","justification":"3110"},{"messageId":"3205","fix":"3252","desc":"3207"},{"messageId":"3208","fix":"3253","desc":"3210"},{"kind":"3109","justification":"3110"},{"messageId":"3205","fix":"3254","desc":"3207"},{"messageId":"3208","fix":"3255","desc":"3210"},{"kind":"3109","justification":"3110"},{"messageId":"3205","fix":"3256","desc":"3207"},{"messageId":"3208","fix":"3257","desc":"3210"},{"kind":"3109","justification":"3110"},{"messageId":"3205","fix":"3258","desc":"3207"},{"messageId":"3208","fix":"3259","desc":"3210"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"desc":"3229","fix":"3260"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"desc":"3231","fix":"3261"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"desc":"3233","fix":"3262"},{"kind":"3109","justification":"3110"},{"kind":"3109","justification":"3110"},{"desc":"3263","fix":"3264"},{"desc":"3263","fix":"3265"},{"desc":"3263","fix":"3266"},{"desc":"3267","fix":"3268"},{"desc":"3269","fix":"3270"},{"desc":"3271","fix":"3272"},{"desc":"3273","fix":"3274"},{"desc":"3275","fix":"3276"},"Update the dependencies array to be: [currentUser, dispatch]",{"range":"3277","text":"3278"},"Update the dependencies array to be: [currentUser, navigate]",{"range":"3279","text":"3280"},"Update the dependencies array to be: [currentUser, dispatch, isLastLogin]",{"range":"3281","text":"3282"},"Update the dependencies array to be: [getThongTinHoSo, id]",{"range":"3283","text":"3284"},{"range":"3285","text":"3284"},{"range":"3286","text":"3284"},"Update the dependencies array to be: [debouncedSearchMaHoSo, debouncedSearchHoTen, searchMaHoSo, getList]",{"range":"3287","text":"3288"},"Update the dependencies array to be: [filterHoTen, filterMaHoSo, filterStatusThuLy, filters, getList]",{"range":"3289","text":"3290"},"Update the dependencies array to be: [debouncedSearchMaHoSo, debouncedSearchHoTen, filters, filterStatusThuLy, searchMaHoSo, getList]",{"range":"3291","text":"3292"},{"range":"3293","text":"3288"},"Update the dependencies array to be: [getList, roles]",{"range":"3294","text":"3295"},"Update the dependencies array to be: [debouncedSearchMaHoSo, debouncedSearchHoTen, searchMaHoSo, searchHoTen, getList]",{"range":"3296","text":"3297"},{"range":"3298","text":"3284"},"Update the dependencies array to be: [renderButtonsBottom, thongTinHoSo]",{"range":"3299","text":"3300"},"Update the dependencies array to be: [debouncedSearchTerm, getList, perPage, searchTerm]",{"range":"3301","text":"3302"},{"range":"3303","text":"3302"},"directive","",{"range":"3304","text":"3290"},{"range":"3305","text":"3292"},"Update the dependencies array to be: [getThongTinHoSo, id, roleUser]",{"range":"3306","text":"3307"},"Update the dependencies array to be: [getTinhThanh, handleGioiTinh, thongTinDuocSi]",{"range":"3308","text":"3309"},{"range":"3310","text":"3302"},{"range":"3311","text":"3302"},"Update the dependencies array to be: [currentUser?.id, dispatch]",{"range":"3312","text":"3313"},"Update the dependencies array to be: [debouncedSearchTerm, getList, searchTerm]",{"range":"3314","text":"3315"},"Update the dependencies array to be: [getTinhThanh, thongTinToChuc]",{"range":"3316","text":"3317"},"Update the dependencies array to be: [auth, logout, setCurrentUser, setRoleUser]",{"range":"3318","text":"3319"},"Update the dependencies array to be: [dispatch, getLocation, getLocationCOHN, props, props.data]",{"range":"3320","text":"3321"},{"range":"3322","text":"3321"},"Update the dependencies array to be: [roleUser]",{"range":"3323","text":"3324"},"Update the dependencies array to be: [props, props.ListLoaiChungChi]",{"range":"3325","text":"3326"},"Update the dependencies array to be: [dispatch, props, props.data]",{"range":"3327","text":"3328"},"Update the dependencies array to be: [dispatch, props?.dataDMPVCM, props?.dataVTHN, props?.listCheckedDMPVCM, props?.listCheckedVTHN]",{"range":"3329","text":"3330"},"Update the dependencies array to be: [getThongTin, props?.show]",{"range":"3331","text":"3332"},"Update the dependencies array to be: [getBangCapList, props?.userId]",{"range":"3333","text":"3334"},"Update the dependencies array to be: [getNoiTotNghiepList, getVanBangList, props?.onHide, visibleInstDelete]",{"range":"3335","text":"3336"},"Update the dependencies array to be: [getChungChiList]",{"range":"3337","text":"3338"},"Update the dependencies array to be: [getCoSoThucHanhList, props?.userId]",{"range":"3339","text":"3340"},"Update the dependencies array to be: [getListNoiDungThucHanh, props?.onHide, visibleInstDelete]",{"range":"3341","text":"3342"},"Update the dependencies array to be: [ngayCap, setField]",{"range":"3343","text":"3344"},"Update the dependencies array to be: [getDaoTaoList, props?.userId]",{"range":"3345","text":"3346"},"Update the dependencies array to be: [props.data, props?.onHide]",{"range":"3347","text":"3348"},"Update the dependencies array to be: [props?.show, props.edit, props?.data]",{"range":"3349","text":"3350"},"Update the dependencies array to be: [getNoiTotNghiepList, getVanBangList]",{"range":"3351","text":"3352"},"Update the dependencies array to be: [handleSubmit, isSubmitted]",{"range":"3353","text":"3354"},{"range":"3355","text":"3321"},{"range":"3356","text":"3315"},{"range":"3357","text":"3302"},{"range":"3358","text":"3302"},"Update the dependencies array to be: [getThongTinYCLK, id]",{"range":"3359","text":"3360"},{"range":"3361","text":"3302"},{"range":"3362","text":"3302"},{"range":"3363","text":"3315"},"Update the dependencies array to be: [debouncedSearchTerm, getList, getListThuTuc, perPage, searchTerm]",{"range":"3364","text":"3365"},{"range":"3366","text":"3302"},{"range":"3367","text":"3302"},"Update the dependencies array to be: [filterHoTen, filters, getList]",{"range":"3368","text":"3369"},"Update the dependencies array to be: [debouncedSearchHoTen, filters, getList, searchMaHoSo]",{"range":"3370","text":"3371"},{"range":"3372","text":"3288"},{"range":"3373","text":"3302"},"Update the dependencies array to be: [dispatch, getThongTinChungChi, getThongTinHoSo, params?.id, soChungChi]",{"range":"3374","text":"3375"},"Update the dependencies array to be: [renderButton, thongTinHoSo]",{"range":"3376","text":"3377"},"Update the dependencies array to be: [listTinhThanh, form?.tinh_thanh_id, onChangeTinhThanh]",{"range":"3378","text":"3379"},"Update the dependencies array to be: [listTinhThanh, form?.tinh_thanh_hien_nay_id, onChangeTinhThanhCOHN]",{"range":"3380","text":"3381"},"Update the dependencies array to be: [listQuanHuyenTT, form?.quan_huyen_id, onChangeQuanHuyen]",{"range":"3382","text":"3383"},"Update the dependencies array to be: [listQuanHuyenHN, form?.quan_huyen_hien_nay_id, onChangeQuanHuyenCOHN]",{"range":"3384","text":"3385"},"Update the dependencies array to be: [listXaPhuongTT, form?.xa_phuong_id, onChangeXaPhuong]",{"range":"3386","text":"3387"},"Update the dependencies array to be: [listXaPhuongHN, form?.xa_phuong_hien_nay_id, onChangeXaPhuongCOHN]",{"range":"3388","text":"3389"},"Update the dependencies array to be: [children, setPageTitle]",{"range":"3390","text":"3391"},"Update the dependencies array to be: [description, setPageDescription]",{"range":"3392","text":"3393"},"Update the dependencies array to be: [breadcrumbs, setPageBreadcrumbs]",{"range":"3394","text":"3395"},"Update the dependencies array to be: [children, setPageDescription]",{"range":"3396","text":"3397"},"removeEscape",{"range":"3398","text":"3110"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"3399","text":"3400"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"3401","text":"3110"},{"range":"3402","text":"3400"},{"range":"3403","text":"3110"},{"range":"3404","text":"3400"},{"range":"3405","text":"3110"},{"range":"3406","text":"3400"},{"range":"3407","text":"3110"},{"range":"3408","text":"3400"},{"range":"3409","text":"3110"},{"range":"3410","text":"3400"},{"range":"3411","text":"3110"},{"range":"3412","text":"3400"},{"range":"3413","text":"3110"},{"range":"3414","text":"3400"},{"range":"3415","text":"3110"},{"range":"3416","text":"3400"},{"range":"3417","text":"3110"},{"range":"3418","text":"3400"},"Update the dependencies array to be: [handleClose, location]",{"range":"3419","text":"3420"},"Update the dependencies array to be: [activateChart, activeChart]",{"range":"3421","text":"3422"},"Update the dependencies array to be: [container]",{"range":"3423","text":"3424"},{"range":"3425","text":"3319"},{"range":"3426","text":"3391"},{"range":"3427","text":"3393"},{"range":"3428","text":"3395"},{"range":"3429","text":"3397"},{"range":"3430","text":"3110"},{"range":"3431","text":"3400"},{"range":"3432","text":"3110"},{"range":"3433","text":"3400"},{"range":"3434","text":"3110"},{"range":"3435","text":"3400"},{"range":"3436","text":"3110"},{"range":"3437","text":"3400"},{"range":"3438","text":"3110"},{"range":"3439","text":"3400"},{"range":"3440","text":"3110"},{"range":"3441","text":"3400"},{"range":"3442","text":"3110"},{"range":"3443","text":"3400"},{"range":"3444","text":"3110"},{"range":"3445","text":"3400"},{"range":"3446","text":"3110"},{"range":"3447","text":"3400"},{"range":"3448","text":"3110"},{"range":"3449","text":"3400"},{"range":"3450","text":"3420"},{"range":"3451","text":"3422"},{"range":"3452","text":"3424"},"Update the dependencies array to be: [debouncedSearchKey, getList, perPage, searchKey]",{"range":"3453","text":"3454"},{"range":"3455","text":"3454"},{"range":"3456","text":"3454"},"Update the dependencies array to be: [getUserInfo]",{"range":"3457","text":"3458"},"Update the dependencies array to be: [thongTinCaNhan]",{"range":"3459","text":"3460"},"Update the dependencies array to be: [ListTinhThanh, form?.tinh_thanh_thuong_tru_id, form?.tinh_thanh_hien_nay_id, onChangeTinhThanh]",{"range":"3461","text":"3462"},"Update the dependencies array to be: [ListQuanHuyenTT, ListQuanHuyenHN, form?.quan_huyen_thuong_tru_id, form?.quan_huyen_hien_nay_id, onChangeQuanHuyen]",{"range":"3463","text":"3464"},"Update the dependencies array to be: [ListXaPhuongTT, ListXaPhuongHN, form?.xa_phuong_thuong_tru_id, form?.xa_phuong_hien_nay_id, onChangeXaPhuong]",{"range":"3465","text":"3466"},[1079,1081],"[currentUser, dispatch]",[1842,1844],"[currentUser, navigate]",[1910,1923],"[currentUser, dispatch, isLastLogin]",[4730,4732],"[getThongTinHoSo, id]",[906,908],[2946,2948],[3353,3398],"[debouncedSearchMaHoSo, debouncedSearchHoTen, searchMaHoSo, getList]",[5511,5513],"[filterHoTen, filterMaHoSo, filterStatusThuLy, filters, getList]",[5947,5992],"[debouncedSearchMaHoSo, debouncedSearchHoTen, filters, filterStatusThuLy, searchMaHoSo, getList]",[3395,3440],[5453,5455],"[getList, roles]",[5796,5841],"[debouncedSearchMaHoSo, debouncedSearchHoTen, searchMaHoSo, searchHoTen, getList]",[1864,1866],[1921,1935],"[renderButtonsBottom, thongTinHoSo]",[1694,1715],"[debouncedSearchTerm, getList, perPage, searchTerm]",[1597,1618],[3867,3869],[4405,4450],[1125,1127],"[getThongTinHoSo, id, roleUser]",[2625,2627],"[getTinhThanh, handleGioiTinh, thongTinDuocSi]",[1535,1556],[2060,2081],[1598,1600],"[currentUser?.id, dispatch]",[1741,1762],"[debouncedSearchTerm, getList, searchTerm]",[2288,2290],"[getTinhThanh, thongTinToChuc]",[2809,2811],"[auth, logout, setCurrentUser, setRoleUser]",[3344,3357],"[dispatch, getLocation, getLocationCOHN, props, props.data]",[5738,5751],[2140,2142],"[roleUser]",[2946,2971],"[props, props.ListLoaiChungChi]",[4388,4401],"[dispatch, props, props.data]",[913,949],"[dispatch, props?.dataDMPVCM, props?.dataVTHN, props?.listCheckedDMPVCM, props?.listCheckedVTHN]",[3368,3381],"[getThongTin, props?.show]",[2676,2691],"[getBangCapList, props?.userId]",[2846,2865],"[getNoiTotNghiepList, getVanBangList, props?.onHide, visibleInstDelete]",[1054,1056],"[getChungChiList]",[2721,2736],"[getCoSoThucHanhList, props?.userId]",[2978,2997],"[getListNoiDungThucHanh, props?.onHide, visibleInstDelete]",[1902,1904],"[ngayCap, setField]",[1995,2010],"[getDaoTaoList, props?.userId]",[2073,2085],"[props.data, props?.onHide]",[1256,1282],"[props?.show, props.edit, props?.data]",[591,593],"[getNoiTotNghiepList, getVanBangList]",[2229,2242],"[handleSubmit, isSubmitted]",[5024,5037],[2667,2688],[1509,1530],[1652,1673],[1025,1027],"[getThongTinYCLK, id]",[1671,1692],[1773,1794],[1654,1675],[1705,1726],"[debouncedSearchTerm, getList, getListThuTuc, perPage, searchTerm]",[1521,1542],[1748,1769],[2071,2073],"[filterHoTen, filters, getList]",[2341,2363],"[debouncedSearchHoTen, filters, getList, searchMaHoSo]",[2832,2877],[1960,1981],[6237,6239],"[dispatch, getThongTinChungChi, getThongTinHoSo, params?.id, soChungChi]",[6318,6332],"[renderButton, thongTinHoSo]",[7196,7231],"[listTinhThanh, form?.tinh_thanh_id, onChangeTinhThanh]",[7367,7411],"[listTinhThanh, form?.tinh_thanh_hien_nay_id, onChangeTinhThanhCOHN]",[7651,7688],"[listQuanHuyenTT, form?.quan_huyen_id, onChangeQuanHuyen]",[7940,7986],"[listQuanHuyenHN, form?.quan_huyen_hien_nay_id, onChangeQuanHuyenCOHN]",[8221,8256],"[listXaPhuongTT, form?.xa_phuong_id, onChangeXaPhuong]",[8503,8547],"[listXaPhuongHN, form?.xa_phuong_hien_nay_id, onChangeXaPhuongCOHN]",[1739,1749],"[children, setPageTitle]",[1907,1920],"[description, setPageDescription]",[2078,2091],"[breadcrumbs, setPageBreadcrumbs]",[2374,2384],"[children, setPageDescription]",[668,669],[668,668],"\\",[421,422],[421,421],[429,430],[429,429],[431,432],[431,431],[433,434],[433,433],[439,440],[439,439],[441,442],[441,441],[3798,3799],[3798,3798],[3806,3807],[3806,3806],[3825,3826],[3825,3825],[630,640],"[handleClose, location]",[4253,4255],"[activateChart, activeChart]",[678,680],"[container]",[2809,2811],[1739,1749],[1907,1920],[2078,2091],[2374,2384],[668,669],[668,668],[421,422],[421,421],[429,430],[429,429],[431,432],[431,431],[433,434],[433,433],[439,440],[439,439],[441,442],[441,441],[3798,3799],[3798,3798],[3806,3807],[3806,3806],[3825,3826],[3825,3825],[630,640],[4253,4255],[678,680],[1424,1444],"[debouncedSearchKey, getList, perPage, searchKey]",[1187,1207],[1459,1479],[1442,1444],"[getUserInfo]",[2469,2471],"[thongTinCaNhan]",[3208,3285],"[ListTinhThanh, form?.tinh_thanh_thuong_tru_id, form?.tinh_thanh_hien_nay_id, onChangeTinhThanh]",[3837,3933],"[ListQuanHuyenTT, ListQuanHuyenHN, form?.quan_huyen_thuong_tru_id, form?.quan_huyen_hien_nay_id, onChangeQuanHuyen]",[4473,4565],"[ListXaPhuongTT, ListXaPhuongHN, form?.xa_phuong_thuong_tru_id, form?.xa_phuong_hien_nay_id, onChangeXaPhuong]"]