// Jenkinsfile (Declarative Pipeline)
pipeline {
    agent any
    stages {
        stage('Stop and Clean up images and containers') {
            steps {
                script {
                    try {
                        sh 'sh remove-and-build-image.sh'
                    }
                    catch (err) {
                        currentBuild.result = 'FAILURE'
                        echo 'Clean and Deploy images... exception occures!'
                    }
                }
            }
        }
        stage('Deploy images') {
            steps {
                script {
                    try {
                        sh 'sh restart-service.sh'
                    }
                    catch (err) {
                        currentBuild.result = 'FAILURE'
                        echo 'Deploy stack backend end chamsocsuckhoe... exception occures!'
                    }
                }
            }
        }
    }

    post {
        always {
                        script {
                                      if (getContext(hudson.FilePath)) {
                    deleteDir() /* clean up our workspace */
                }
                        }

        }
    }
}
